{"version":3,"sources":["theme/index.ts","theme/colors.ts","components/TextWrapper/index.tsx","assets/common/MAHAToken.svg","components/PageHeader/index.tsx","pages/Dashboard/components/InfoBox.tsx","assets/icons/Close.svg","components/CustomModal/index.tsx","components/CustomInputConatiner/index.tsx","components/Button/index.tsx","_helpers/apicaller.ts","_helpers/serverApi.ts","components/CustomInputConatiner/inputValidation.ts","pages/Dashboard/modal/AddInvestorModal.tsx","_helpers/history.ts","_helpers/formattingNumbers.ts","pages/Dashboard/components/DataTable.tsx","assets/icons/Search.svg","components/SearchBar/index.tsx","assets/icons/Plus.svg","pages/Dashboard/components/TableConatiner.tsx","components/Piechart/index.tsx","pages/Dashboard/components/AllocationOverview.tsx","pages/Dashboard/index.tsx","assets/common/avatar.svg","assets/icons/LeftArrowIcon.svg","assets/icons/Graph.svg","pages/InvestorProfile/Components/TopLeftCard/PieRepresentation.tsx","pages/InvestorProfile/Components/TopLeftCard/LineFormatRepresentation.tsx","pages/InvestorProfile/Components/TopLeftCard/index.tsx","assets/icons/Telegram.svg","pages/InvestorProfile/Components/TopRightCard/index.tsx","pages/InvestorProfile/Components/ProfileDataTable.tsx","pages/InvestorProfile/Components/TableContainer.tsx","pages/InvestorProfile/index.tsx","pages/Notification/components/NotificationCard.tsx","pages/Notification/index.tsx","pages/Auth/login/index.tsx","_helpers/checkUserLogin.ts","navigation.tsx","assets/common/logo.svg","components/TopBar/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","borderRadius","color","dark","500","400","300","200","100","light","primary","red","green","yellow","purple","transparent","black","white","gradients","brown_gradient","orange_gradient","gray_linear","dark_linear","teal","alpha","8","32","64","88","siteWidth","spacing","1","2","3","4","5","6","7","topBarSize","TextWrapper","props","fontFamily","fontStyle","fontWeight","fontSize","FletterSpacing","Fcolor","text","Fmargin","Fpadding","StyledText","letterSpacing","fcolor","margin","padding","style","styled","p","PageHeader","MainHeaderContainer","className","InnerHeader","UserRole","src","mahaToken","alt","href","target","div","InfoBox","data1","data2","data3","data4","InfoBoxLine","title","value","percent","includes","DialogTitle","withStyles","createStyles","root","closeButton","position","right","top","palette","grey","children","classes","onClose","titleLogo","modalTitleStyle","other","disableTypography","Typography","variant","IconButton","aria-label","onClick","CloseIcon","width","DialogContent","minWidth","dividers","borderTop","maxHeight","MuiDialogContent","useStyles","makeStyles","customDialogClass","background","boxShadow","CustomModal","handleClose","open","modalContainerStyle","modalBodyStyle","mobile","useTheme","modalStyles","fullScreen","useMediaQuery","breakpoints","down","React","useState","openModal","setOpen","handleCloseModal","modalJsx","Dialog","fullWidth","aria-labelledby","onBackdropClick","paper","alignItems","justifyContent","paddingLeft","paddingRight","lineHeight","id","CustomInputContainer","ILabelValue","DefaultValue","inputMode","disabled","Istate","Imsg","DisableMsg","IWarningstate","warningMsg","dontShowBackgroundContainer","backgroundColor","IState","IMsg","ICStates","setICStates","ICWarningStates","useEffect","TotalDisable","DMsg","IConatiner","returnObj","IConatinerStyle","ILabelContainer","ILabelLeft","ILabel","IFieldConatiner","InputBase","placeholder","inputProps","flex","type","onChange","event","setText","StyledButton","button","fg","normal","bg","border","radius","undefined","hover","radiusHover","selected","StyledLink","Link","StyledExternalLink","a","Button","buttonSize","buttonPadding","size","to","loading","themeFile","variantStyle","pink","variantToStyle","ButtonChild","useMemo","callApi","endpoint","method","body","url","sessionStorage","getItem","token","headers","fetch","JSON","stringify","then","response","ok","json","Promise","reject","callApiToOtherHost","getAllInvestorsData","getAllocationSummary","addNewInvestor","getParticularInvestorData","deleteParticularInvestor","getInvestorTransactions","NumberInputRegex","mediatoryRegex","correctString","val","test","initZeroCheck","charAt","slice","removeLeadZeros","AddInvestorModal","onSuccess","name","setName","walletAddress","setwalletAddress","emailId","setemailId","teleId","setteleId","investmentAtPrivateSale","setinvestmentAtPrivateSale","tokenAllocated","settokenAllocated","allocatedAtPrice","setallocatedAtPrice","errorMsg","setErrorMsg","addingInvestor","setAddingInvestor","resetFields","onNumericalValueChange","Number","length","data","toString","Grid","container","paddingTop","item","lg","xl","md","sm","xs","console","log","error","alert","catch","finally","addInvestor","history","createHashHistory","prettyNumber","decimals","toLocaleString","maximumFractionDigits","truncateMiddle","fullStr","strLen","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","SortedDescendingIcon","SortedAscendingIcon","CustomToolbar","cursor","gridStyle","DataTable","columns","field","headerName","sortable","cellClassName","renderCell","params","row","clsx","negative","profitLossIndicator","positive","rows","setRows","Fragment","getRowId","pageSize","disableMultipleSelection","onCellClick","push","go","autoHeight","disableColumnMenu","components","Toolbar","ColumnSortedDescendingIcon","ColumnSortedAscendingIcon","disableColumnSelector","disableSelectionOnClick","SearchBar","searchIcon","themee","TableConatiner","setAddInvestor","searchText","setSearchText","refreshData","setRefreshData","setData","d","investors","filteredDataTemp","filter","investor","toLowerCase","allocatedPercentage","currentBalance","tokenSold","profitLoss","change","allocatedMAHA","MainTableContainer","plus","marginLeft","colorList","CustomPieChart","this","balances","map","b","i","percentage","PieChart","height","Pie","dataKey","nameKey","cx","cy","innerRadius","outerRadius","fill","entry","index","Cell","stroke","PureComponent","AllocationOverview","setMahaPriceUsd","mahadao","usd","dataTotal","totalTokenSold","totalWalletBalance","calculatedData","amount","amountInUsd","totalTokensAllocatedPrice","totalWalletBalancePrice","totalTokenSoldPrice","Indicator","InitAllocationSummaryData","Dashboard","allocationSummaryData","setAllocationSummaryData","Page","investorsCount","status","totalInvestment","currentValue","investorProfit","PieRepresentation","pieData","mahaPriceUsd","LineFormatRepresentation","currentBalancePrice","changePercentage","profitLossPercentage","Index","chartFormat","setChartFormat","allocationPrice","MainCardContainer","SwitchButton","leftIcon","chartIcon","TopRightCard","telegramUsername","TelegramIcon","investorRanking","investorOutOf","transfers","format","toUpperCase","action","onRowClick","newSelection","window","transactionHash","TableContainer","transactions","CleanedData","timestamp","balance","price","changeInBalance","marginTop","ProfileDataTable","InitParticularInvestor","email","InvestorProfile","useParams","confirmationModal","setConfirmationModal","avatar","ButtonConatiner","close","NotificationCard","NCard","Notification","HeaderPage","section","Login","setEmailID","password","setPassword","localStorage","setItem","justify","LoginContainer","ButtonContainer","isUserLoggedIn","Navigation","initialRoute","path","exact","component","Topbar","MainTopBarContainer","InnerTopBar","LeftTopbar","logo","RightTopbar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.512df542.chunk.js","sourcesContent":["import {black, dark, purple, transparent, white, light, primary, red, green, yellow, gradients, teal, alpha} from './colors'\n\nexport interface ITheme {\n    borderRadius: number,\n    color: any,\n    siteWidth: number,\n    spacing: object,\n    topBarSize: number,\n}\n\nconst theme = {\n    borderRadius: 12,\n    color: {\n        dark,\n        light,\n        primary,\n        red,\n        green,\n        yellow,\n        purple,\n        transparent,\n        black,\n        white,\n        gradients,\n        teal,\n        alpha\n    },\n    siteWidth: 1200,\n    spacing: {\n        1: 4,\n        2: 8,\n        3: 16,\n        4: 24,\n        5: 32,\n        6: 48,\n        7: 64,\n    },\n    topBarSize: 72,\n}\n\nexport default theme;","export const dark = {\n    500: '#151414',\n    400: '#1F1E1E',\n    300: '#2A2827',\n    200: '#363130',\n    100: '#423B38',\n}\n\nexport const light = {\n    500: '#D9D5D3',\n    400: '#E2DFDF',\n    300: '#EBEAEA',\n    200: '#F5F5F5',\n    100: '#FAFAFA',\n}\n\nexport const primary = {\n    500: '#D74D26',\n    400: '#F7653B',\n    300: '#FF7F57',\n    200: '#FFA981',\n    100: '#FEE2D5',\n}\n\nexport const red = {\n    500: '#BA1E38',\n    400: '#EF3050',\n    300: '#FA4C69',\n    200: '#FF9EAE',\n    100: '#FFDCE2',\n}\n\nexport const green = {\n    500: '#178A50',\n    400: '#11AF60',\n    300: '#20C974',\n    200: '#88E0B4',\n    100: '#C4F7DD',\n}\n\nexport const yellow = {\n    500: '#B87503',\n    400: '#F09700',\n    300: '#FCB400',\n    200: '#FFD66E',\n    100: '#FFEAB6',\n}\n\nexport const purple = {\n    500: '#5427AE',\n    400: '#682AE5',\n    300: '#7A3CF6',\n    200: '#BD9CFF',\n    100: '#DFCFFF',\n}\n\nexport const transparent = {\n    500: '#FFFFFF08',\n    400: '#FFFFFF16',\n    300: '#FFFFFF32',\n    200: '#FFFFFF64',\n    100: '#FFFFFF88',\n}\n\nexport const pink = {\n    200: '#F47F57',\n    300: '#FF7F57',\n    400: '#FD5656'\n}\n\nexport const grey = {\n    100: '#f5f5f5',\n    200: '#eeeeee',\n    300: '#e0e0e0',\n    400: '#bdbdbd',\n    500: '#9e9e9e',\n    600: '#757575',\n    700: '#616161',\n    800: '#424242',\n    900: '#212121',\n}\n\nexport const gradients = {\n    brown_gradient: 'linear-gradient(180deg, #48423E 0%, #373030 100%)',\n    orange_gradient: 'linear-gradient(38.44deg, #F47F57 15.81%, #FD5656 87.57%)',\n    gray_linear: 'linear-gradient(180deg, #2A2827 0%, rgba(42, 40, 39, 0) 100%)',\n    dark_linear: 'linear-gradient(180deg, #2D2D2D 0%, #1C1C1C 100%)',\n}\n\nexport const black = '#000000'\n\nexport const white = '#FFFFFF'\n\nexport const teal = {\n    200: '#64ffda'\n}\n\nexport const alpha = {\n    8: 'rgba(255, 255, 255, 0.08)',\n    32: 'rgba(255, 255, 255, 0.32)',\n    64: 'rgba(255, 255, 255, 0.64)',\n    88: 'rgba(255, 255, 255, 0.88)',\n}\n","import styled from \"styled-components\";\n\ninterface TextWrapperProps {\n    fontFamily?: 'Inter' | 'Syne';\n    fontStyle?: string;\n    fontWeight?: 'bold' | 300 | 600,\n    fontSize?: 24 | 18 | 16 | 14 | 12;\n    FletterSpacing?: string;\n    Fcolor?: string;\n    text: string;\n    Fmargin?: string;\n    Fpadding?: string;\n}\n\nconst TextWrapper = (props: TextWrapperProps) => {\n    const {\n        fontFamily = 'Inter',\n        fontStyle = 'normal',\n        fontWeight = 300,\n        fontSize = 14,\n        FletterSpacing = 'normal',\n        Fcolor = '#FFFFFF',\n        text = '',\n        Fmargin = '0',\n        Fpadding = '0'\n    } = props;\n\n    return (\n        <StyledText\n            fontFamily={fontFamily}\n            fontSize={fontSize}\n            fontWeight={fontWeight}\n            fontStyle={fontStyle}\n            letterSpacing={FletterSpacing}\n            fcolor={Fcolor}\n            margin={Fmargin}\n            padding={Fpadding}\n            style={{color: Fcolor}}\n        >\n            {text}\n        </StyledText>\n    )\n}\n\nexport default TextWrapper;\n\ninterface StyledTextProps {\n    fontFamily: 'Inter' | 'Syne';\n    fontStyle: string;\n    fontWeight: 'bold' | 300 | 600,\n    fontSize: 24 | 18 | 16 | 14 | 12;\n    letterSpacing: string;\n    fcolor: string;\n    margin: string;\n    padding: string;\n}\n\nconst StyledText = styled.p<StyledTextProps>`\n  font-family: ${(props) => props.fontFamily};\n  font-style: ${(props) => props.fontStyle};\n  font-weight: ${(props) => props.fontWeight};\n  font-size: ${(props) => props.fontSize}px;\n  letter-spacing: ${(props) => props.letterSpacing};\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n`","export default __webpack_public_path__ + \"static/media/MAHAToken.c8e236b5.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport theme from '../../theme'\nimport TextWrapper from \"../TextWrapper\";\n\nimport mahaToken from \"../../assets/common/MAHAToken.svg\";\n\ninterface IProps {\n    text: string;\n}\n\nconst PageHeader = (props: IProps) => {\n    return(\n        <MainHeaderContainer>\n            <div className=\"custom-container\">\n                <div className=\"single-line-center-between\">\n                    <InnerHeader>\n                        <UserRole>\n                            <TextWrapper\n                                text={'Admin'}\n                                fontFamily={'Syne'}\n                                fontWeight={'bold'}\n                                fontSize={24}\n                                FletterSpacing={'0.1em'}\n                            />\n                        </UserRole>\n                        <div className=\"single-line-center-start\">\n                            <img src={mahaToken} alt={'MAHADAO'} className=\"marginR12\"/>\n                            <TextWrapper\n                                text={'MAHADAO'}\n                                fontFamily={'Syne'}\n                                fontWeight={'bold'}\n                                fontSize={24}\n                                FletterSpacing={'0.1em'}\n                            />\n                        </div>\n                    </InnerHeader>\n                    <div>\n                        <a href='https://etherscan.io/token/0xb4d930279552397bba2ee473229f89ec245bc365' target={'_blank'}>\n                            <TextWrapper\n                                text={'View on Etherscan'}\n                                Fcolor={theme.color.primary[300]}\n                            />\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </MainHeaderContainer>\n    )\n}\n\nexport default PageHeader;\n\nconst MainHeaderContainer = styled.div`\n  width: 100vw;\n  background: ${theme.color.dark[500]};\n  position: relative;\n  padding: 40px 0;\n`\n\nconst InnerHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst BackgroudContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst UserRole = styled.div`\n  padding-right: 20px;\n  border-right: 1px solid white;\n  margin-right: 20px;\n`","import TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\nimport styled from \"styled-components\";\n\ninterface IData {\n    title: string,\n    toolbarText?: string | null,\n    value: string,\n    percent: string,\n    status: 'positive' | 'negative'\n}\n\ninterface IProps {\n    data1: IData,\n    data2: IData,\n    data3: IData,\n    data4: IData,\n}\n\nconst InfoBox = (props: IProps) => {\n\n    const {data1, data2, data3, data4} = props\n\n    return (\n        <div className=\"custom-mahadao-material2\">\n            <InfoBoxLine className=\"single-line-center-between marginB32\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={data1.title}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"200\"]}\n                        Fmargin={'0 0 4px 0'}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={data1.value}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={data1.percent}\n                        fontSize={12}\n                        Fcolor={theme.color.green[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />\n                </div>\n            </InfoBoxLine>\n            <InfoBoxLine className=\"single-line-center-between marginB32\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={data2.title}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"200\"]}\n                        Fmargin={'0 0 4px 0'}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={data2.value}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={data2.percent}\n                        fontSize={12}\n                        Fcolor={theme.color.green[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />\n                </div>\n            </InfoBoxLine>\n            <InfoBoxLine className=\"single-line-center-between marginB32\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={data3.title}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"200\"]}\n                        Fmargin={'0 0 4px 0'}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={data3.value}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={data3.percent}\n                        fontSize={12}\n                        Fcolor={theme.color.green[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />\n                </div>\n            </InfoBoxLine>\n            <InfoBoxLine className=\"single-line-center-between \">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={data4.title}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"200\"]}\n                        Fmargin={'0 0 4px 0'}\n                    />\n                </div>\n                {data4.value.includes('-')\n                    ? (<div className=\"single-line-baseline-start\">\n                        <TextWrapper\n                            text={data4.value}\n                            fontWeight={600}\n                            fontSize={18}\n                            Fcolor={theme.color.red[\"300\"]}\n                        />\n                        <TextWrapper\n                            text={data4.percent}\n                            fontSize={12}\n                            Fcolor={theme.color.red[\"300\"]}\n                            Fmargin={'0 0 0 4px'}\n                        />\n                    </div>)\n                    : (<div className=\"single-line-baseline-start\">\n                        <TextWrapper\n                            text={data4.value}\n                            fontWeight={600}\n                            fontSize={18}\n                            Fcolor={theme.color.green[\"300\"]}\n                        />\n                        <TextWrapper\n                            text={data4.percent}\n                            fontSize={12}\n                            Fcolor={theme.color.green[\"300\"]}\n                            Fmargin={'0 0 0 4px'}\n                        />\n                    </div>)\n                }\n            </InfoBoxLine>\n        </div>\n    )\n}\n\nexport default InfoBox;\n\nconst InfoBoxLine = styled.div`\n  text-align: left;\n`\n","export default __webpack_public_path__ + \"static/media/Close.372add4c.svg\";","import React from 'react';\nimport { createStyles, makeStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport CloseIcon from '../../assets/icons/Close.svg';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      borderRadius: '12px',\n      padding: theme.spacing(2),\n      color: 'white',\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  titleLogo?: React.ReactNode;\n  children: React.ReactNode;\n  onClose?: () => void;\n  modalTitleStyle?: any;\n  closeButton?: boolean;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, titleLogo, modalTitleStyle, closeButton, ...other } = props;\n  return (\n    <MuiDialogTitle style={modalTitleStyle} disableTypography className={classes.root} {...other}>\n      <div className=\"dialog-class width-100\">\n        {titleLogo && titleLogo}\n        <Typography variant=\"h6\">{children}</Typography>\n      </div>\n      {onClose && closeButton ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <img src={CloseIcon} width=\"24px\" alt=\"\" />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(() => ({\n  root: {\n    minWidth: 500,\n  },\n  dividers: {\n    borderTop: `1px solid rgba(255, 255, 255, 0.08)`,\n  },\n  '@media (max-width: 600px)': {\n    root: {\n      width: '100%',\n      minWidth: '350px',\n      maxHeight: '60%',\n    },\n  },\n}))(MuiDialogContent);\n\ninterface props {\n  children: React.ReactNode;\n  title?: string;\n  handleClose?: Function;\n  open?: boolean;\n  titleLogo?: React.ReactNode;\n  modalContainerStyle?: any;\n  modalTitleStyle?: any;\n  modalBodyStyle?: any;\n  closeButton?: boolean;\n  mobile?: boolean;\n}\n\nconst useStyles = makeStyles({\n  customDialogClass: {\n    background: 'linear-gradient(180deg, #48423e 0%, #373030 100%)',\n    boxShadow: '0px 8px 16px -2px rgba(0, 0, 0, 0.12)',\n    borderRadius: '12px !important',\n  },\n});\n\nconst CustomModal: React.FC<props> = ({\n  children,\n  title,\n  handleClose,\n  open,\n  titleLogo,\n  modalContainerStyle,\n  modalTitleStyle,\n  modalBodyStyle,\n  closeButton,\n  mobile = false,\n}) => {\n  const theme = useTheme();\n  const modalStyles = useStyles();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const [openModal, setOpen] = React.useState(open);\n\n  const handleCloseModal = () => {\n    if (handleClose) {\n      handleClose();\n    }\n  };\n  if (open !== openModal) {\n    setOpen(open);\n  }\n  let modalJsx = <div />;\n  if (openModal) {\n    modalJsx = (\n      <Dialog\n        style={modalContainerStyle}\n        fullScreen={fullScreen}\n        fullWidth={mobile}\n        onClose={handleCloseModal}\n        aria-labelledby=\"customized-dialog-title\"\n        open={openModal}\n        onBackdropClick={handleCloseModal}\n        classes={{\n          paper: modalStyles.customDialogClass,\n        }}\n      >\n        {title && <DialogTitle\n          closeButton={closeButton}\n          modalTitleStyle={{\n            color: 'rgba(255, 255, 255, 0.88)',\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingLeft: '32px',\n            paddingRight: '32px',\n            fontFamily: 'Inter',\n            fontStyle: 'normal',\n            fontWeight: '600',\n            fontSize: '18px',\n            lineHeight: '24px',\n            ...modalTitleStyle\n\n          }}\n          id='customized-dialog-title'\n          onClose={handleCloseModal}\n          titleLogo={titleLogo}\n        >\n          {title}\n        </DialogTitle>}\n        <DialogContent style={{\n          background: 'linear-gradient(180deg, #48423E 0%, #373030 100%)',\n          borderTop: '1px solid rgba(255, 255, 255, 0.15)',\n          padding: '24px 32px',\n          ...modalBodyStyle\n        }} dividers>\n          <div style={{}}>{children}</div>\n        </DialogContent>\n        {/* </div> */}\n      </Dialog>\n    );\n  }\n\n  return modalJsx;\n};\nexport default CustomModal;\n","import React, { CSSProperties, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { InputBase } from '@material-ui/core';\n\ntype props = {\n    ILabelValue: string;\n    value: string;\n    DefaultValue: string;\n    disabled?: boolean;\n    setText: (val: string) => void;\n    inputMode?: 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search' | 'password';\n    DisableMsg?: string;\n\n    dontShowBackgroundContainer?: boolean;\n    backgroundColor?:string;\n\n    Istate?: 'default' | 'error' | 'warning';\n    Imsg?: string;\n    IWarningstate?: 'default' | 'warning';\n    warningMsg?: string;\n    errorCallback?: (flag: boolean) => void;\n\n};\n\nexport interface ICStatesInterface {\n    IState: 'default' | 'error' | 'warning';\n    IMsg: string;\n}\n\nconst CustomInputContainer: React.FC<props> = (props) => {\n    const {\n        ILabelValue,\n        DefaultValue,\n        inputMode = 'text',\n        disabled = false,\n        Istate = 'default',\n        Imsg = '',\n        DisableMsg = '',\n        IWarningstate = 'default',\n        warningMsg = '',\n        dontShowBackgroundContainer = true,\n        backgroundColor = '',\n    } = props;\n\n    const [ICStates, setICStates] = useState<ICStatesInterface>({ IState: Istate, IMsg: Imsg });\n    const [ICWarningStates, setICWarningStates] = useState<ICStatesInterface>({ IState: IWarningstate, IMsg: warningMsg });\n\n    //For ref not to be removed\n   /* const temp: ICStatesInterface = {\n        IState: 'error',\n        IMsg: 'Amount cannot be more than your balance.',\n    };\n    setICStates(temp);\n    props.errorCallback(true);*/\n\n    useEffect(() => {\n        let temp = { IState: Istate, IMsg: Imsg };\n        setICStates(temp);\n    }, [Istate, Imsg]);\n\n\n    const IConatinerStyle = () => {\n        let returnObj: CSSProperties = {}\n        if (dontShowBackgroundContainer) {\n            returnObj['padding'] = '0px';\n            returnObj['backgroundColor'] = 'transparent';\n        }\n        if (DisableMsg !== \"\") {\n            returnObj['opacity'] = \"0.32\";\n        }\n        return returnObj;\n    }\n\n    const onValueChange = (value: string) => {\n        props.setText(value);\n    }\n\n    return (\n        <div style={{ position: 'relative' }}>\n            {DisableMsg !== '' && <TotalDisable><DMsg>{DisableMsg}</DMsg></TotalDisable>}\n            <IConatiner style={IConatinerStyle()}>\n                {ILabelValue !== '' &&\n                    (<ILabelContainer>\n                        <ILabelLeft>\n                            <ILabel>{ILabelValue}</ILabel>\n                        </ILabelLeft>\n                    </ILabelContainer>)\n                }\n                <IFieldConatiner className={`input-${ICStates.IState}`} style={backgroundColor !== ''? {backgroundColor: backgroundColor}: {}}>\n                    <InputBase\n                        // inputMode={props?.inputMode}\n                        placeholder={DefaultValue}\n                        value={props.value}\n                        inputProps={{ 'aria-label': 'naked' }}\n                        style={{\n                            padding: '8px 12px 6px 12px',\n                            color: '#FFFFFF',\n                            flex: 1,\n                            fontFamily: 'Inter !important',\n                        }}\n                        disabled={disabled}\n                        type={inputMode}\n                        onChange={(event) => onValueChange(event.target.value)}\n                    />\n                </IFieldConatiner>\n                {ICStates.IMsg !== '' && (\n                    <p className={`input-font-${ICStates.IState}`}>{ICStates.IMsg}</p>\n                )}\n                {ICWarningStates.IMsg !== '' && (\n                    <p className={`input-font-warning`}>{ICWarningStates.IMsg}</p>\n                )}\n            </IConatiner>\n        </div>\n    );\n};\n\nexport default CustomInputContainer;\n\nconst TotalDisable = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.16);\n  box-sizing: border-box;\n  border-radius: 12px;\n  z-index: 12;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #FFFFFF29;\n`;\n\nconst DMsg = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  color: #FFFFFF;\n  margin-bottom: 0;\n`\n\nconst IConatiner = styled.div`\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 8px;\n  padding: 12px;\n  margin-bottom: 20px;\n`;\nconst ILabelContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 12px;\n`;\nconst ILabelLeft = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst ILabel = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 20px;\n  color: rgba(255, 255, 255, 0.64);\n  margin-bottom: 0;\n`;\n\nconst IFieldConatiner = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #151414;\n  border-radius: 6px;\n  max-height: 44px;\n`;\n\n\n\n\n\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport themeFile from '../../theme'\n\ninterface ButtonProps {\n    children?: React.ReactNode;\n    disabled?: boolean;\n    href?: string;\n    onClick: () => void;\n    size?: 'sm' | 'md' | 'lg';\n    text?: string;\n    to?: string;\n    theme?: 'default' | 'secondary' | 'tertiary';\n    variant?: 'default' | 'transparent' | 'outlined' | 'rounded';\n    loading?: boolean;\n}\n\nfunction variantToStyle(variant: string = 'default', color: any) {\n    if (variant === 'transparent') {\n        return {\n            fg: {\n                normal: color.white,\n            },\n            bg: {\n                normal: 'transparent',\n                hover: color.dark[400],\n                selected: color.dark[200]\n            },\n            border: {\n                normal: `1px solid ${color.alpha[88]}`,\n                hover: `1px solid ${color.white}`,\n                radius: '6px',\n                radiusHover: '6px'\n            }\n        }\n    } else if (variant === 'outlined') {\n        return {\n            fg: { normal: '#F5F5F5', hover: '#F5F5F5' },\n            bg: { normal: 'transparent', hover: 'transparent', disabled: 'transparent' },\n            border: {\n                normal: `1px solid ${color.alpha[32]}`,\n                hover: `1px solid ${color.alpha[64]}`,\n            }\n        }\n    } else if (variant === 'rounded') {\n        return {\n            fg: { normal: color.pink[300] },\n            bg: { normal: color.alpha[8], disabled: 'transparent' },\n            border: { radius: '19px', radiusHover: '19px' }\n        }\n    } else {\n        return {\n            fg: {},\n            bg: {},\n            border: {}\n        }\n    }\n}\n\nconst Button: React.FC<ButtonProps> = ({\n    children,\n    disabled,\n    href,\n    onClick,\n    size,\n    text,\n    to,\n    theme,\n    variant,\n    loading= false,\n}) => {\n    const { color, spacing } = themeFile;\n\n    const variantStyle = variantToStyle(variant, color);\n    let fg = {\n        normal: theme === 'secondary' ? color.teal[200] : color.white,\n        hover: color.white,\n        selected: theme === 'secondary' ? color.teal[200] : color.white,\n        disabled: '',\n        ...variantStyle.fg\n    };\n    let bg = {\n        normal: `linear-gradient(38.44deg, ${color.primary[200]} 15.81%, ${color.primary[400]} 87.57%)`,\n        hover: color.primary[300],\n        selected: `linear-gradient(180deg, ${color.primary[200]} -11.33%, ${color.primary[400]} 100%)`,\n        disabled: 'transparent'[300],\n        ...variantStyle.bg\n    };\n    let border = {\n        normal: '0',\n        hover: '0',\n        radius: '6px',\n        radiusHover: variantStyle.border.radiusHover || '6px',\n        ...variantStyle.border\n    }\n\n    let buttonSize: number;\n    let buttonPadding: number;\n    let fontSize: number;\n    switch (size) {\n        case 'sm':\n            buttonPadding = spacing[3];\n            buttonSize = 36;\n            fontSize = 14;\n            break;\n        case 'lg':\n            buttonPadding = spacing[4];\n            buttonSize = 72;\n            fontSize = 16;\n            break;\n        case 'md':\n        default:\n            buttonPadding = spacing[4];\n            buttonSize = 56;\n            fontSize = 16;\n    }\n\n    const ButtonChild = useMemo(() => {\n        if (to) {\n            return <StyledLink to={to}>{text}</StyledLink>;\n        } else if (href) {\n            return (\n                <StyledExternalLink href={href} target=\"__blank\">\n                    {text}\n                </StyledExternalLink>\n            );\n        } else {\n            return text;\n        }\n    }, [href, text, to]);\n\n    return (\n        <StyledButton\n            boxShadow={'0'}\n            fg={fg}\n            bg={bg}\n            border={border}\n            disabled={disabled || loading}\n            fontSize={fontSize}\n            onClick={() => onClick()}\n            padding={buttonPadding}\n            size={buttonSize}\n        >\n            {!loading && children}\n            {!loading && ButtonChild}\n        </StyledButton>\n    );\n};\n\ninterface StyledButtonProps {\n    fg: { normal: string, hover: string, selected: string, disabled: string }\n    bg: { normal: string, hover: string, selected: string, disabled: string }\n    border: { normal: string, hover: string, radius: string, radiusHover: string }\n    boxShadow: string;\n    disabled?: boolean;\n    fontSize: number;\n    padding: number;\n    size: number;\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  color: ${({ fg }) => fg.normal};\n  background: ${({ bg }) => bg.normal};\n  border: ${({ border }) => border.normal};\n  border-radius: ${({ border }) => border.radius};\n  box-shadow: ${(props) => props.boxShadow};\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n\n  align-items: center;\n  text-align: center;\n  white-space: nowrap;\n  cursor: pointer;\n  display: flex;\n  font-size: 14px;\n  font-weight: 600;\n  height: 44px;\n  justify-content: center;\n  outline: none !important;\n  padding: 10px 22px;\n  width: 100%;\n  font-family: Inter;\n\n  &:hover {\n    color: ${({ fg }) => fg.hover};\n    background: ${({ bg }) => bg.hover};\n    border: ${({ border }) => border.hover};\n    border-radius: ${({ border }) => border.radiusHover}\n  }\n  &:focus {\n    color: ${({ fg }) => fg.selected};\n    background: ${({ bg }) => bg.selected};\n  }\n  /*&:focus: {\n    outline: none;\n  }*/\n  &:disabled {\n    color: ${({ fg }) => fg.disabled};\n    background: ${({ bg }) => bg.disabled};\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 38px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 38px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default Button;\n","export async function callApi(endpoint: string, method: string = 'get', body?: any) {\n    const url = `https://api.mahatracker.com/api/${endpoint}`;\n    const token = (await sessionStorage.getItem('token')) || '';\n    const headers: any = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\n        'content-type': 'application/json',\n    }\n    if (token) {\n        headers['Authorization'] = `Bearer ${token}`\n        headers['x-jwt'] = token\n    }\n    return await fetch(url, {\n        headers,\n        method,\n        body: JSON.stringify(body)\n    })\n        .then(async (response) => {\n            // console.log(response);\n            if (!response.ok) {\n                return response.json()\n                    .then((json) => {\n                        // if (json.message === 'Bad JWT') AsyncStorage.removeItem('@BearerToken')\n                        return Promise.reject(json)\n                    });\n            }\n            return response.json();\n        });\n}\n\nexport async function callApiToOtherHost(endpoint: string, method: string = 'get', body?: any) {\n    const url = `${endpoint}`;\n    const headers: any = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\n        'content-type': 'application/json',\n    }\n    return await fetch(url, {\n        headers,\n        method,\n        body: JSON.stringify(body)\n    })\n        .then(async (response) => {\n            // console.log(response);\n            if (!response.ok) {\n                return response.json()\n                    .then((json) => {\n                        // if (json.message === 'Bad JWT') AsyncStorage.removeItem('@BearerToken')\n                        return Promise.reject(json)\n                    });\n            }\n            return response.json();\n        });\n}","import {callApi} from './apicaller'\n\nexport const getAllInvestorsData = async () => {\n    return await callApi('investor')\n}\n\nexport const getAllocationSummary = async () => {\n    return await callApi('tracker/stats');\n}\n\nexport const addNewInvestor = async (body: any) => {\n    return await callApi('investor', 'post', body)\n}\n\nexport const getParticularInvestorData = async (body: any) => {\n    return await callApi('particular/investor', 'post', body)\n}\n\nexport const deleteParticularInvestor = async (body: any) => {\n    return await callApi('investor', 'delete', body)\n}\n\nexport const getInvestorTransactions = async (body: any) => {\n    return await callApi('investor/alltransactions', 'post', body)\n}","export const NumberInputRegex = /^\\d+(\\.\\d*)?$/;\nexport const mediatoryRegex = /^[0]+\\d+(\\.\\d+)?$/;\nexport const RestrictDecimalsDigitsInputRegex = /^[0-9]{0,18}(\\.[0-9]{0,6})?$/;\nexport const RestrictDecimalsDigitsInputRegexSlippage = /^[0-9]{0,3}(\\.[0-9]{0,3})?$/;\n\nexport const ValidateNumber = (val: string) => {\n    return NumberInputRegex.test(val)\n}\n\nexport const checkForAfterDecimalDigits = (val: string, decimals = 6) => {\n    let regex: RegExp = /^[0-9]{0,14}(\\.[0-9]{0,6})?$/;\n\n    if (decimals === 8) regex = /^[0-9]{0,14}(\\.[0-9]{0,8})?$/;\n    else if (decimals === 9) regex = /^[0-9]{0,14}(\\.[0-9]{0,9})?$/;\n    else if (decimals === 18) regex = /^[0-9]{0,14}(\\.[0-9]{0,18})?$/;\n\n    return regex.test(val)\n}\n\nexport const checkForAfterDecimalDigitsSlippage = (val: string) => {\n    return RestrictDecimalsDigitsInputRegexSlippage.test(val)\n}\n\nexport const initZeroCheck = (val: string) => {\n    return mediatoryRegex.test(val)\n}\n\nexport const removeLeadZeros = (val: string) => {\n    while (val.charAt(0) === '0') val = val.slice(1);\n    return val\n}\n\nexport const correctString = (val: string) => {\n    if (initZeroCheck(val)) return removeLeadZeros(val)\n    return val\n}\n","import CustomModal from \"../../../components/CustomModal\";\nimport CustomInputContainer from \"../../../components/CustomInputConatiner\";\nimport {useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Button from \"../../../components/Button\";\nimport {addNewInvestor} from \"../../../_helpers/serverApi\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\nimport {correctString, ValidateNumber} from \"../../../components/CustomInputConatiner/inputValidation\";\n\n\ninterface IPorps {\n    openModal: boolean;\n    onClose: () => void;\n    onSuccess: () => void;\n}\n\nconst AddInvestorModal = (props: IPorps) => {\n    const {openModal, onSuccess, onClose} = props\n\n    const [name, setName] = useState<string>('');\n    const [walletAddress, setwalletAddress] = useState<string>('');\n    const [emailId, setemailId] = useState<string>('');\n    const [teleId, setteleId] = useState<string>('');\n    const [investmentAtPrivateSale, setinvestmentAtPrivateSale] = useState<string>('0');\n    const [tokenAllocated, settokenAllocated] = useState<string>('0');\n    const [allocatedAtPrice, setallocatedAtPrice] = useState<string>('0');\n\n    const [errorMsg, setErrorMsg] = useState<string>('');\n    const [addingInvestor, setAddingInvestor] = useState<boolean>(false)\n\n    // var disabled: boolean = name !== '' ||\n    //     walletAddress !== '' ||\n    //     emailId !== '' ||\n    //     teleId !== ''\n        // Number(investmentAtPrivateSale) > 0 ||\n        // Number(tokenAllocated) > 0 ||\n        // Number(allocatedAtPrice) > 0\n\n    const resetFields = () => {\n        setName('')\n        setemailId('')\n        setwalletAddress('')\n        setteleId('')\n        settokenAllocated('0')\n        setallocatedAtPrice('0')\n        setinvestmentAtPrivateSale('0')\n        setErrorMsg('')\n    }\n\n    const onNumericalValueChange = (value: string) => {\n        if (value === '') {\n        } else {\n            if (!ValidateNumber(value)) return null\n        }\n\n        if (Number(value) && Number(value) <= 0) return null;\n        return (value.length > 1 ? correctString(value) : value);\n    }\n\n    const validateFields = () => {\n        return true\n    }\n\n    const addInvestor = () => {\n        if (validateFields() && errorMsg === '') {\n            const body = {\n                \"name\": name,\n                \"email\": emailId,\n                \"walletAddress\": walletAddress,\n                \"tokenAllocated\": Number(tokenAllocated) || 0,\n                \"allocatedAtPrice\": Number(allocatedAtPrice) || 0,\n                \"telegramUsername\": teleId,\n                \"investmentAtPrivateSale\": Number(investmentAtPrivateSale) || 0,\n\n                \"currentBalance\": 0,\n                \"tenMinutePriorBalance\": 0,\n                \"countryCode\": 91,\n                \"phoneNumber\": 7756885345,\n                \"profitLoss\": 0,\n                \"proftLossIndicator\": false,\n                \"change\": 0,\n            }\n            setAddingInvestor(true)\n            addNewInvestor(body)\n                .then((data) => {\n                    console.log('addNewInvestor', data)\n                    if (data?.error) {\n                        alert(data?.error)\n                    } else {\n                        onSuccess();\n                    }\n                })\n                .catch((error) => {\n                    console.log('addNewInvestor error', error)\n                    alert('Internal Server Error, Try Again later')\n                })\n                .finally(() => {\n                    resetFields()\n                    setAddingInvestor(false)\n                })\n        }\n\n    }\n\n    return (\n        <CustomModal\n            closeButton\n            handleClose={() => {\n                resetFields()\n                onClose()\n            }}\n            open={openModal}\n            modalTitleStyle={{}}\n            modalContainerStyle={{}}\n            modalBodyStyle={{}}\n            title={`Add Investor`}\n        >\n            <section>\n                <CustomInputContainer\n                    ILabelValue={'Investor Name'}\n                    DefaultValue={'Eg: Elon Musk'}\n                    setText={(data) => setName(data)}\n                    value={name}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Wallet Address'}\n                    DefaultValue={'Eg: 0xcab3e009Ff3d670.....75e81C8E4E2452606E8'}\n                    setText={(data) => setwalletAddress(data)}\n                    value={walletAddress}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Email Id'}\n                    DefaultValue={'Eg: elonmusk@gmail.com'}\n                    setText={(data) => setemailId(data)}\n                    value={emailId}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Telegram Id'}\n                    DefaultValue={'Eg:https://telegram.com/@<InvestorId>'}\n                    setText={(data) => setteleId(data)}\n                    value={teleId}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Total Investment at private sale'}\n                    DefaultValue={'$ Some Dollars'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) setinvestmentAtPrivateSale(data)\n                    }}\n                    value={investmentAtPrivateSale.toString()}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Number of token allocated'}\n                    DefaultValue={'Some MAHA'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) settokenAllocated(data)\n                    }}\n                    value={tokenAllocated.toString()}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Maha Price at Token Allocated'}\n                    DefaultValue={'$ Some Dollars'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) setallocatedAtPrice(data)\n                    }}\n                    value={allocatedAtPrice.toString()}\n                />\n            </section>\n            <section>\n                <TextWrapper\n                    text={errorMsg}\n                    Fcolor={theme.color.red[300]}\n                />\n            </section>\n            <section>\n                <Grid container spacing={2} style={{paddingTop: '12px'}}>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button\n                            variant={'transparent'}\n                            onClick={() => {\n                                resetFields()\n                                onClose()\n                            }}\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button\n                            onClick={() => addInvestor()}\n                            disabled={addingInvestor}\n                        >{addingInvestor? 'Adding Investor': 'Add Investor'}</Button>\n                    </Grid>\n                </Grid>\n            </section>\n        </CustomModal>\n    )\n}\n\nexport default AddInvestorModal;","import { createHashHistory } from 'history';\n\nexport const history = createHashHistory();","// @ts-nocheck\nimport * as _ from 'underscore';\n\nconst millify = (\n    uglyNumber: number | string,\n    decimalPoints: number,\n): string => {\n    // Make sure value is a number\n    const ugly = (num => {\n        if (typeof num !== 'number') {\n            throw new Error('Input value is not a number');\n        } else {\n            return parseFloat(String(num));\n        }\n    })(uglyNumber);\n\n    // Figure out how many digits in the integer\n    const digits = Math.floor(Math.log10(Math.abs(ugly))) + 1;\n\n    // Figure out the appropriate unit for the number\n    const units = ((num, zeroes) => {\n        let zeroes2 = zeroes;\n        const keys = _.keys(suffixes);\n        for (const z of keys) {\n            if (num > Number(z)) {\n                zeroes2 = Number(z);\n            }\n        }\n        return { suffix: suffixes[String(zeroes2)], zeroes: zeroes2 };\n\n    })(digits, 2);\n\n    const pretty = ugly / Math.pow(10, units.zeroes);\n\n    const decimal = pretty % 1 === 0 ? 2 : Math.max(1, decimalPoints + 1) || 3;\n\n    if (ugly > -1000 && ugly < 1000) {\n        return String(ugly);\n    }\n    return `${parseFloat(prettyNumber(pretty, decimal))}${units.suffix}`;\n};\n\n\nexport const formatDecimals = (passedNumber: number | string) => {\n    const formattedBalance = String(passedNumber)\n    const decimalsPointIndex = formattedBalance.indexOf('.');\n    if (decimalsPointIndex === -1) return formattedBalance;\n    return formattedBalance.slice(0, decimalsPointIndex) + '.' + formattedBalance.slice(decimalsPointIndex + 1, decimalsPointIndex + 1 + 3);\n}\n\nexport const prettyNumber = (value: number, decimals = 1) => {\n    // const getFormatDecimals = formatDecimals(value)\n    return Number(value).toLocaleString('en-US', {\n        maximumFractionDigits: decimals,\n    })\n}\n\n// @ts-nocheck\n\nconst suffixes: any = {\n    '3': 'K',\n    '12': 'T',\n    '6': 'M',\n    '9': 'B',\n};\n\nexport const prettify = (_num: number | string) => {\n    const num = Number(_num);\n\n    if (Math.abs(num) >= 10000) return millify(num, 2);\n    if (Math.abs(num) >= 1000) return millify(num, 2);\n\n    // if (Math.abs(num) >= 100) {\n    //   return num.toFixed(2);\n    // }\n    // if (Math.abs(num) >= 1) {\n    //   return num.toFixed(3);\n    // }\n    // if (Math.abs(num) >= 0.1) {\n    //   return num.toFixed(4);\n    // }\n\n    return Math.floor(num) || 0;\n}\n\nexport const truncateMiddle = function (\n    fullStr: string = '12345678922500025',\n    strLen: number,\n    separator?: string,\n) {\n    if (fullStr.length <= strLen) return fullStr;\n\n    separator = separator || '...';\n\n    var sepLen = separator.length,\n        charsToShow = strLen - sepLen,\n        frontChars = Math.ceil(charsToShow / 3),\n        backChars = Math.floor(charsToShow / 3);\n\n    return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n","import React, {useEffect, useState} from 'react'\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport '../../../customCss/Custom-Mahadao-Data-Table.css'\nimport messageIcon from \"../../../assets/icons/Message.svg\";\nimport {history} from \"../../../_helpers/history\";\nimport {prettyNumber} from \"../../../_helpers/formattingNumbers\";\nimport theme from \"../../../theme\";\nimport TextWrapper from \"../../../components/TextWrapper\";\n\n\nexport function SortedDescendingIcon() {\n    return <ArrowDropUpIcon className=\"icon\" style={{color: 'white'}}/>;\n  }\n  \nexport function SortedAscendingIcon() {\n    return <ArrowDropDownIcon className=\"icon\" style={{color: 'white'}}/>;\n}\n\nfunction CustomToolbar() {\n    return (\n        <GridToolbarContainer>\n            <GridToolbarExport />\n        </GridToolbarContainer>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        '& .super-app-theme--header': {\n            cursor: 'pointer',\n        },\n        '& .super-app.negative': {\n            color: theme.color.red[300],\n            fontWeight: '600',\n        },\n        '& .super-app.positive': {\n            color: theme.color.green[300],\n            fontWeight: '600',\n        },\n        '& .super-app.loss': {\n            color: theme.color.red[300],\n            fontWeight: '600',\n        },\n        '& .super-app.profit': {\n            color: theme.color.green[300],\n            fontWeight: '600',\n        },\n    },\n    gridStyle: {\n        color: 'white'\n    }\n});\n\ninterface IProps {\n    data: []\n}\n\nconst DataTable = (props: IProps) => {\n    const {data = []} = props\n\n    const classes = useStyles();\n\n    const columns = [\n        {\n            field: 'investorRanking', headerName: 'Rank', flex: 0.05, sortable: true,\n        },\n        {\n            field: 'investor', headerName: 'INVESTORS', flex: 0.2, sortable: true,\n            cellClassName: 'fontWeight300'\n        },\n        { field: 'allocatedPercentage', headerName: 'ALLOCATED', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return `${prettyNumber(params.row.tokenAllocated)} (${prettyNumber(params.value, 2)}%)`\n            })\n        },\n        {\n            field: 'currentBalance', headerName: 'WALLET BALANCE ', flex: 0.15, sortable:true,\n            renderCell: ((params: any) => {\n                return prettyNumber(params.value)\n            })\n        },\n\n        {\n            field: 'tokenSold', headerName: 'Token Sold', flex: 0.15, sortable: true,\n            cellClassName: (params: any) => clsx('super-app', {\n                negative: true,\n            }),\n            renderCell: ((params: any) => {\n                return prettyNumber(params.value)\n            })\n\n        },\n        {\n            field: 'profitLoss', headerName: 'PROFIT/LOSS', flex: 0.15, sortable: true,\n            cellClassName: (params: any) => clsx('super-app', {\n                negative: !params.row.profitLossIndicator,\n                positive: params.row.profitLossIndicator,\n            }),\n            renderCell: ((params: any) => {\n                return prettyNumber(params.value)\n            })\n            // cellClassName: (params: any) => clsx('super-app', {\n            //     loss: parseFloat(params.value) < 0,\n            //     profit: parseFloat(params.value) > 0,\n            // }),\n            // valueFormatter: (params : any) => {\n            //     return `$ ${parseFloat(params.value)}`\n            // }\n        },\n        { field: 'changePercentage', headerName: 'CHANGE', flex: 0.1, sortable: true,\n            cellClassName: (params: any) => clsx('super-app', {\n                negative: true,\n            }),\n            renderCell: ((params: any) => {\n                return `${prettyNumber(params.value)} %`\n            })\n        },\n        // { field: 'mail', headerName: ' ', flex: 0.1, sortable: false,\n        //     renderCell: (params: any) => (\n        //     <div style={{textAlign: 'center'}} className=\"w-100\">\n        //         <img src={messageIcon} alt={'icon'} height={20} className=\"pointer\"/>\n        //     </div>),\n        // }\n    ];\n\n    const [rows, setRows] = useState<number>(10);\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.root} style={{position: 'relative'}}>\n                <div className=\"viewAll\" onClick={() => setRows(data.length)}>\n                    <TextWrapper text={'View All'}/>\n                </div>\n                <DataGrid className={classes.gridStyle}\n                    getRowId={(rows) => {\n                        return rows.id\n                    }}\n                    rows={data}\n                    columns={columns}\n                    pageSize={rows}\n                    disableMultipleSelection={true}\n                    // onRowClick={(newSelection) => {\n                    //     const win = window.open(`${newSelection.row.videoUrl}`, \"_blank\");\n                    //     win.focus()\n                    // }}\n                    onCellClick={async (params) => {\n                        if (params.field === 'investor') {\n                            history.push(`/investor-profile/${params.row.walletAddress}`)\n                            history.go(0)\n\n                        }\n                    }}\n                    autoHeight={true}\n                    disableColumnMenu={true}\n                    components={{\n                        Toolbar: CustomToolbar,\n                        ColumnSortedDescendingIcon: SortedDescendingIcon,\n                        ColumnSortedAscendingIcon: SortedAscendingIcon,\n                    }}\n                  disableColumnSelector={true}\n                  disableSelectionOnClick={true}\n                />\n            </div>\n\n        </React.Fragment>\n    )\n}\n\nexport default DataTable\n","export default __webpack_public_path__ + \"static/media/Search.09f0359d.svg\";","import React, {CSSProperties, useEffect, useState} from \"react\";\nimport {InputBase} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nimport searchIcon from '../../assets/icons/Search.svg';\nimport themee from \"../../theme\";\n\ntype props = {\n    ILabelValue: string;\n    value: string;\n    DefaultValue: string;\n    disabled?: boolean;\n    setText: (val: string) => void;\n    inputMode?: 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n    DisableMsg?: string;\n\n    Istate?: 'default' | 'error';\n    Imsg?: string;\n    IWarningstate?: 'default' | 'warning';\n    warningMsg?: string;\n    errorCallback?: (flag: boolean) => void;\n};\n\ninterface ICStatesInterface {\n    IState: 'default' | 'error' | 'warning';\n    IMsg: string;\n}\n\nconst SearchBar: React.FC<props> = (props) => {\n    const {\n        ILabelValue,\n        DefaultValue,\n        disabled = false,\n        Istate = 'default',\n        Imsg = '',\n        DisableMsg = '',\n        IWarningstate = 'default',\n        warningMsg = '',\n    } = props;\n\n    const [ICStates, setICStates] = useState<ICStatesInterface>({ IState: Istate, IMsg: Imsg });\n    const [ICWarningStates, setICWarningStates] = useState<ICStatesInterface>({ IState: IWarningstate, IMsg: warningMsg });\n\n    //For ref not to be removed\n    /* const temp: ICStatesInterface = {\n         IState: 'error',\n         IMsg: 'Amount cannot be more than your balance.',\n     };\n     setICStates(temp);\n     props.errorCallback(true);*/\n\n    useEffect(() => {\n        let temp = { IState: Istate, IMsg: Imsg };\n        setICStates(temp);\n    }, [Istate, Imsg]);\n\n\n    const IConatinerStyle = () => {\n        let returnObj: CSSProperties = {}\n        if (DisableMsg !== \"\") {\n            returnObj['opacity'] = \"0.32\";\n        }\n        return returnObj;\n    }\n\n    const onValueChange = (value: string) => {\n        props.setText(value);\n    }\n\n    return (\n        <div style={{ position: 'relative' }}>\n            {DisableMsg !== '' && <TotalDisable><DMsg>{DisableMsg}</DMsg></TotalDisable>}\n            <IConatiner style={IConatinerStyle()}>\n                {ILabelValue !== '' &&\n                (<ILabelContainer>\n                    <ILabelLeft>\n                        <ILabel>{ILabelValue}</ILabel>\n                    </ILabelLeft>\n                </ILabelContainer>)\n                }\n                <IFieldConatiner className={`input-${ICStates.IState}`}>\n                    <img src={searchIcon} alt={'search'} className=\"marginR12\"/>\n                    <InputBase\n                        inputMode={props?.inputMode}\n                        placeholder={DefaultValue}\n                        value={props.value}\n                        inputProps={{ 'aria-label': 'naked' }}\n                        style={{\n                            padding: '0',\n                            fontFamily: 'Inter',\n                            fontStyle: 'normal',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                            color: themee.color.transparent[\"200\"],\n                            flex: 1,\n                        }}\n                        disabled={disabled}\n                        type={'string'}\n                        onChange={(event) => onValueChange(event.target.value)}\n                    />\n                </IFieldConatiner>\n                {ICStates.IMsg !== '' && (\n                    <p className={`input-font-${ICStates.IState}`}>{ICStates.IMsg}</p>\n                )}\n                {ICWarningStates.IMsg !== '' && (\n                    <p className={`input-font-warning`}>{ICWarningStates.IMsg}</p>\n                )}\n            </IConatiner>\n        </div>\n    );\n};\n\nexport default SearchBar;\n\nconst TotalDisable = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.16);\n  box-sizing: border-box;\n  border-radius: 12px;\n  z-index: 12;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #FFFFFF29;\n`;\n\nconst DMsg = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  color: #FFFFFF;\n  margin-bottom: 0;\n`\n\nconst IConatiner = styled.div`\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 8px;\n  padding: 0;\n  margin-bottom: 0;\n`;\nconst ILabelContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 12px;\n`;\nconst ILabelLeft = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst ILabel = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 20px;\n  color: rgba(255, 255, 255, 0.64);\n  margin-bottom: 0;\n`;\n\nconst IFieldConatiner = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: ${themee.color.dark[300]};\n  border-radius: 6px;\n  max-height: 44px;\n  padding: 8px 12px;\n`;\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/Plus.9c6df0aa.svg\";","import React, {useEffect, useMemo, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\n\nimport AddInvestorModal from \"../modal/AddInvestorModal\";\nimport DataTable from \"./DataTable\";\nimport FilterSelection from \"./FilterSelection\";\nimport Button from \"../../../components/Button\";\nimport SearchBar from \"../../../components/SearchBar\";\n\nimport plus from '../../../assets/icons/Plus.svg';\nimport {getAllInvestorsData} from \"../../../_helpers/serverApi\";\nimport {prettyNumber} from \"../../../_helpers/formattingNumbers\";\n\ninterface IIndiviualInvestor {\n    allocatedAtPrice: number,\n    allocatedPercentage: number,\n    change: number,\n    changePercentage: number,\n    currentBalance: number,\n    email: string,\n    id: string,\n    investmentAtPrivateSale: number\n    investor: string\n    investorRanking: number\n    profitLoss: number\n    profitLossIndicator: true\n    telegramUsername: string\n    tokenAllocated: number\n    tokenSold: number\n    transfers: number\n    walletAddress: string\n}\n\nconst TableConatiner = () => {\n    const [addInvestor, setAddInvestor] = useState<boolean>(false);\n\n    const [selectedFilter, setSelectedFilter] = useState<'All' | 'Dumpers' | 'Holders'>('All')\n    const [searchText, setSearchText] = useState<string>('');\n    const [refreshData, setRefreshData] = useState<boolean>(true);\n\n    const [data, setData] = useState<any>([])\n\n    useEffect(() => {\n        if (refreshData) {\n            getAllInvestorsData()\n                .then((d: { investors: any }) => {\n                    console.log('getAllInvestorsData', d.investors);\n                    setData(d.investors)\n                    setRefreshData(false)\n                })\n                .catch((error) => {\n                    console.log('getAllInvestorsData error', error);\n                })\n        }\n    }, [refreshData])\n\n\n    const filteredDataTemp = useMemo(() => {\n        if (searchText === \"\") return data\n        else {\n            return data.filter((d: any) => {\n                return (\n                    d.investor.toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.allocatedPercentage).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.currentBalance).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.tokenSold).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    d.profitLoss.toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.change).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.allocatedMAHA).toString().toLowerCase().includes(searchText.toLowerCase())\n                )})\n        }\n    }, [searchText, data])\n\n    return (\n        <MainTableContainer>\n            <AddInvestorModal\n                openModal={addInvestor}\n                onClose={() => setAddInvestor(false)}\n                onSuccess={() => {\n                    setRefreshData(true)\n                    setAddInvestor(false)\n                }}\n            />\n            <section className=\"marginB16\">\n                <Grid container spacing={2}>\n                    <Grid item lg={5} xl={5} md={5} sm={12} xs={12}>\n                        {/*<FilterSelection*/}\n                        {/*    selectedFilter={selectedFilter}*/}\n                        {/*    onChange={(data) => setSelectedFilter(data)}*/}\n                        {/*/>*/}\n                    </Grid>\n                    <Grid item lg={1} xl={1} md={1} sm={12} xs={12}>\n                    </Grid>\n                    <Grid item lg={4} xl={4} md={4} sm={12} xs={12}>\n                        <SearchBar\n                            ILabelValue={''}\n                            value={searchText}\n                            DefaultValue={'Search by Investor name, Address, Balance, etc.'}\n                            setText={(val) => setSearchText(val)}\n                            />\n                    </Grid>\n                    <Grid item lg={2} xl={2} md={2} sm={12} xs={12}>\n                        <Button onClick={() => setAddInvestor(true)} variant={'outlined'} size={\"sm\"}>\n                            <div className=\"single-line\">\n                                <img src={plus} alt={'plus'}/>\n                                <div style={{marginLeft: '5px'}}>Add Investor</div>\n                            </div>\n                        </Button>\n                    </Grid>\n                </Grid>\n            </section>\n\n            <DataTable\n                data={filteredDataTemp}\n            />\n        </MainTableContainer>\n    )\n}\n\nexport default TableConatiner\n\nconst MainTableContainer = styled.div`\n  margin-bottom: 40px;\n`","import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell } from 'recharts';\nimport theme from \"../../theme\";\n\ninterface IProps {\n    balances: {\n        name: string;\n        amount: number;\n        percentage: number;\n    }[];\n}\n\nconst colorList = [theme.color.primary[500],\n    theme.color.primary[400],\n    theme.color.primary[300],\n    theme.color.primary[200],\n    theme.color.primary[100]\n]\n\nexport default class CustomPieChart extends PureComponent<IProps> {\n    render() {\n        const data = this.props.balances.map((b, i) => {\n            return ({\n                name: b.name,\n                value: b.percentage,\n                color: colorList[i],\n            })\n        });\n\n        return (\n            <PieChart width={160} height={160}>\n                <Pie\n                    data={data}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    innerRadius={60}\n                    outerRadius={80}\n                    fill=\"#82ca9d\"\n                >\n                    {\n                        data.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={entry.color} stroke={entry.color} />\n                        ))\n                    }\n                </Pie>\n            </PieChart>\n        );\n    }\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\nimport CustomPieChart from \"../../../components/Piechart\";\nimport {Grid} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {IAllocationSummaryData} from \"../index\";\nimport {prettify, prettyNumber} from \"../../../_helpers/formattingNumbers\";\nimport {callApiToOtherHost} from \"../../../_helpers/apicaller\";\n\nconst dummy = [{\n    name: 'USDC',\n    amount: 100,\n    percentage: 50,\n},{\n    name: 'USDT',\n    amount: 1000,\n    percentage: 50,\n},\n]\n\ninterface IAllocationOverview {\n    data: IAllocationSummaryData\n}\n\nexport const colorList = [theme.color.primary[500],\n    theme.color.primary[400],\n    theme.color.primary[300],\n    theme.color.primary[200],\n    theme.color.primary[100]\n]\n\nconst AllocationOverview = (props: IAllocationOverview) => {\n    const { data } = props;\n\n    const [mahaPriceUsd, setMahaPriceUsd] = useState<number>(0);\n\n    useEffect(() => {\n        callApiToOtherHost('https://api.coingecko.com/api/v3/simple/price?ids=mahadao&vs_currencies=usd')\n            .then((data: any) => {\n                console.log('MAHA price', data?.mahadao?.usd);\n                setMahaPriceUsd(data?.mahadao?.usd);\n            })\n    }, [])\n\n    const dataTotal = data.totalTokenSold + data.tokenAllocated + data.totalWalletBalance\n\n    const calculatedData = [{\n        name: 'Total Tokens allocated',\n        amount: data.tokenAllocated,\n        amountInUsd: data.totalTokensAllocatedPrice,\n        percentage: data.tokenAllocated/dataTotal,\n        color: colorList[0],\n    },{\n        name: 'Total Wallet Balance',\n        amount: data.totalWalletBalance,\n        amountInUsd: data.totalWalletBalancePrice,\n        percentage:  data.totalWalletBalance/dataTotal,\n        color: colorList[1],\n    },{\n        name: 'Total Tokens Sold',\n        amount: data.totalTokenSold,\n        amountInUsd: data.totalTokenSoldPrice,\n        percentage:  data.totalTokenSold/dataTotal,\n        color: colorList[2],\n    },\n    ]\n\n    return (\n        <div className=\"custom-mahadao-material2\">\n            <div className=\"single-line-center-start marginB16\">\n                <TextWrapper\n                    text={'Investor Allocation Overview'}\n                    fontSize={16}\n                    Fcolor={theme.color.transparent[200]}\n                />\n            </div>\n            <div className=\"single-line-center-between\">\n                <Grid container>\n                    <Grid item lg={12} md={12} sm={6} xs={12}>\n                        <CustomPieChart\n                            balances={calculatedData}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item lg={12} md={12} sm={6} xs={12}>\n                        {calculatedData.map((data) => {\n                            return (\n                                <div className=\"single-line-center-start marginB16\">\n                                    <Indicator color={data.color}/>\n                                    <div className=\"marginL12\">\n                                        <div className=\"single-line-baseline-start\">\n                                            <TextWrapper\n                                                text={`${prettyNumber(data.amount).toString()} MAHA`}\n                                                fontWeight={600}\n                                                fontSize={16}\n                                            />\n                                            <TextWrapper\n                                                text={`($${prettyNumber(data.amountInUsd).toString()})`}\n                                                fontSize={16}\n                                                Fcolor={theme.color.transparent[200]}\n                                            />\n                                        </div>\n                                        <TextWrapper\n                                            text={data.name}\n                                            fontSize={12}\n                                            Fcolor={theme.color.transparent[200]}\n                                        />\n                                    </div>\n                                </div>\n                            )})\n                        }\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default AllocationOverview;\n\nconst Indicator = styled.div<{color: string}>`\n  height: 14px;\n  width: 14px;\n  background: ${(props) => props.color};\n  border-radius: 50%;\n`\n\n\n\n\n","import styled from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport InfoBox from \"./components/InfoBox\";\nimport TableConatiner from \"./components/TableConatiner\";\nimport AllocationOverview from \"./components/AllocationOverview\";\nimport {useEffect, useState} from \"react\";\nimport {getAllocationSummary} from \"../../_helpers/serverApi\";\nimport {prettyNumber} from \"../../_helpers/formattingNumbers\";\n\nexport interface IAllocationSummaryData {\n    \"investorsCount\": number,\n    \"totalInvestment\": number,\n    \"currentValue\": number,\n    \"investorProfit\": number,\n    \"investorProfitPercentage\": number,\n    \"tokenAllocated\": number,\n    \"totalTokensAllocatedPrice\": number,\n    \"totalTokenSold\": number,\n    \"totalTokenSoldPrice\": number,\n    \"totalWalletBalance\": number,\n    \"totalWalletBalancePrice\": number\n}\n\nconst InitAllocationSummaryData = {\n    \"investorsCount\": 0,\n    \"totalInvestment\": 0,\n    \"currentValue\": 0,\n    \"investorProfit\": 0,\n    \"investorProfitPercentage\": 0,\n    \"tokenAllocated\": 0,\n    \"totalTokensAllocatedPrice\": 0,\n    \"totalTokenSold\": 0,\n    \"totalTokenSoldPrice\": 0,\n    \"totalWalletBalance\": 0,\n    \"totalWalletBalancePrice\": 0\n}\n\nconst Dashboard = () => {\n    const [allocationSummaryData , setAllocationSummaryData] = useState<IAllocationSummaryData>(InitAllocationSummaryData);\n\n    useEffect(() => {\n        getAllocationSummary()\n            .then((data: IAllocationSummaryData) => {\n                console.log('getAllocationSummary', data)\n                setAllocationSummaryData(data);\n            })\n    }, [])\n\n\n    return (\n        <Page>\n            <PageHeader text={'MahaDAO Investors Tracker'}/>\n            <div className=\"custom-container\">\n                <section className=\"marginB16\">\n                    <Grid container spacing={2}>\n                        <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                            <AllocationOverview\n                                data={allocationSummaryData}\n                            />\n                        </Grid>\n                        <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                            <InfoBox\n                                data1={{\n                                    title: 'Active Investors',\n                                    value: `${prettyNumber(allocationSummaryData.investorsCount)}`,\n                                    percent: '',\n                                    status: 'positive'\n                                }}\n                                data2={{\n                                    title: 'Total Investment',\n                                    value: `$${prettyNumber(allocationSummaryData.totalInvestment)}`,\n                                    percent: '',\n                                    status: 'positive',\n                                }}\n                                data3={{\n                                    title: 'Current Value',\n                                    value: `$${prettyNumber(allocationSummaryData.currentValue)}`,\n                                    percent: '',\n                                    status: 'positive'\n                                }}\n                                data4={{\n                                    title: 'Total Investor Profit',\n                                    value: `$${prettyNumber(allocationSummaryData.investorProfit)}`,\n                                    percent: '',\n                                    status: 'positive'\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </section>\n                <TableConatiner/>\n            </div>\n        </Page>\n    )\n}\n\nexport default Dashboard;\n\nexport const Page = styled.div`\n  margin-top: 80px;\n  min-height: calc(100vh - 80px);\n`\n\n","export default __webpack_public_path__ + \"static/media/avatar.82f61dd2.svg\";","export default __webpack_public_path__ + \"static/media/LeftArrowIcon.b7d38792.svg\";","export default __webpack_public_path__ + \"static/media/Graph.92488185.svg\";","import React, {useEffect, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\n\nimport CustomPieChart from \"../../../../components/Piechart\";\nimport theme from \"../../../../theme\";\nimport TextWrapper from \"../../../../components/TextWrapper\";\nimport styled from \"styled-components\";\nimport {prettyNumber} from \"../../../../_helpers/formattingNumbers\";\nimport {colorList} from \"../../../Dashboard/components/AllocationOverview\";\nimport {callApiToOtherHost} from \"../../../../_helpers/apicaller\";\n\ninterface IProps {\n    balances: {\n        name: string;\n        amount: number;\n        percentage: number;\n        amountInUsd: number,\n        color: string,\n    }[];\n}\n\nconst PieRepresentation = (props: IProps) => {\n    const {balances} = props;\n\n    const pieData = balances.map((b, i) => {\n        return ({\n            name: b.name,\n            amount: b.amount,\n            percentage: b.percentage,\n        })\n    });\n\n    const [mahaPriceUsd, setMahaPriceUsd] = useState<number>(0);\n\n    useEffect(() => {\n        callApiToOtherHost('https://api.coingecko.com/api/v3/simple/price?ids=mahadao&vs_currencies=usd')\n            .then((data: any) => {\n                console.log('MAHA price', data?.mahadao?.usd);\n                setMahaPriceUsd(data?.mahadao?.usd);\n            })\n    }, [])\n\n    return (\n        <div className=\"single-line-center-between\">\n            <Grid container>\n                <Grid item lg={12} md={12} sm={6} xs={12}>\n                    <CustomPieChart\n                        balances={pieData}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} md={12} sm={6} xs={12}>\n                    {balances.map((data) => {\n                        return (\n                            <div className=\"single-line-center-start marginB16\">\n                                <Indicator color={data.color}/>\n                                <div className=\"marginL12\">\n                                    <div className=\"single-line-baseline-start\">\n                                        <TextWrapper\n                                            text={`${prettyNumber(data.amount).toString()} MAHA`}\n                                            fontWeight={600}\n                                            fontSize={16}\n                                        />\n                                        <TextWrapper\n                                            text={`($${prettyNumber(data.amount * mahaPriceUsd).toString()})`}\n                                            fontSize={16}\n                                            Fcolor={theme.color.transparent[200]}\n                                        />\n                                    </div>\n                                    <TextWrapper\n                                        text={data.name}\n                                        fontSize={12}\n                                        Fcolor={theme.color.transparent[200]}\n                                    />\n                                </div>\n                            </div>\n                        )})\n                    }\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default PieRepresentation;\n\nconst Indicator = styled.div<{color: string}>`\n  height: 14px;\n  width: 14px;\n  background: ${(props) => props.color};\n  border-radius: 50%;\n`","import TextWrapper from \"../../../../components/TextWrapper\";\nimport theme from \"../../../../theme\";\nimport React from \"react\";\nimport {prettyNumber} from \"../../../../_helpers/formattingNumbers\";\nimport {IParticularInvestor} from \"../../index\";\n\ninterface Iprops {\n    data: { data: IParticularInvestor }\n}\n\nconst LineFormatRepresentation = (props: Iprops) => {\n    const {data} = props\n    return (\n        <div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Number of Token allocated'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={`${prettyNumber(data.data.tokenAllocated)} MAHA`}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={`($${prettyNumber(data.data.allocatedAtPrice)})`}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[200]}\n                    />\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Current Wallet Balance'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={`${prettyNumber(data.data.currentBalance)} MAHA`}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={`($${prettyNumber(data.data.currentBalancePrice)})`}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[200]}\n                    />\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'No of Tokens Sold'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={`${prettyNumber(data.data.tokenSold)}`}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={`-${prettyNumber(data.data.changePercentage)}%`}\n                        fontSize={12}\n                        Fcolor={theme.color.red[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Total Profit/ Loss'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={`${prettyNumber(data.data.profitLoss)}`}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    {data.data.profitLossPercentage !== 0 &&\n                        (data.data.profitLossIndicator?\n                            (<TextWrapper\n                                text={`+${prettyNumber(data.data.profitLossPercentage)}`}\n                                fontSize={12}\n                                Fcolor={theme.color.green[\"300\"]}\n                                Fmargin={'0 0 0 4px'}\n                            />):\n                            (<TextWrapper\n                                text={`-${prettyNumber(data.data.profitLossPercentage)}%`}\n                                fontSize={12}\n                                Fcolor={theme.color.red[\"300\"]}\n                                Fmargin={'0 0 0 4px'}\n                            />))\n                    }\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default LineFormatRepresentation;","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\n\nimport theme from \"../../../../theme\";\nimport leftIcon from \"../../../../assets/icons/LeftArrowIcon.svg\";\nimport chartIcon from \"../../../../assets/icons/Graph.svg\";\nimport TextWrapper from \"../../../../components/TextWrapper\";\nimport PieRepresentation from \"./PieRepresentation\";\nimport LineFormatRepresentation from \"./LineFormatRepresentation\";\nimport {IParticularInvestor} from \"../../index\";\nimport {colorList} from \"../../../Dashboard/components/AllocationOverview\";\n\nconst dummy = [{\n    name: 'USDC',\n    amount: 100,\n    percentage: 50,\n},{\n    name: 'USDT',\n    amount: 1000,\n    percentage: 50,\n},\n]\n\ninterface Iprops {\n    data: { data: IParticularInvestor }\n}\n\nconst Index = (props: Iprops) => {\n    const {data} = props\n    const [chartFormat, setChartFormat] = useState<boolean>(false);\n\n    const dataTotal = data.data.tokenSold + data.data.tokenAllocated + data.data.currentBalance\n\n    const calculatedData = [{\n        name: 'Total Tokens allocated',\n        amount: data.data.tokenAllocated,\n        amountInUsd: data.data.allocationPrice,\n        percentage: data.data.tokenAllocated/dataTotal,\n        color: colorList[0],\n\n    },{\n        name: 'Total Wallet Balance',\n        amount: data.data.currentBalance,\n        amountInUsd: data.data.currentBalance,\n\n        percentage:  data.data.currentBalance/dataTotal,\n        color: colorList[1],\n\n    },{\n        name: 'Total Tokens Sold',\n        amount: data.data.tokenSold,\n        amountInUsd: data.data.tokenSold,\n        percentage:  data.data.tokenSold/dataTotal,\n        color: colorList[2],\n\n    },\n    ]\n\n    return (\n        <MainCardContainer className=\"custom-mahadao-material1\">\n            <section className=\"marginB20\">\n                <SwitchButton className=\"single-line-center-start\" onClick={() => setChartFormat(!chartFormat)}>\n                    <img src={chartFormat? leftIcon: chartIcon} alt={'icon'} className=\"marginR08\"/>\n                    <TextWrapper\n                        text={chartFormat? 'Back to normal view': 'View Chart to analyze Investor allocation'}\n                        fontSize={12}\n                        fontWeight={600}\n                    />\n                </SwitchButton>\n            </section>\n            <section>\n                {chartFormat? (<PieRepresentation\n                    balances={calculatedData}\n                />): (\n                    <LineFormatRepresentation\n                        data={{data: data.data}}\n                    />\n                )}\n            </section>\n        </MainCardContainer>\n    )\n}\n\nexport default Index;\n\nconst MainCardContainer = styled.div`\n  padding: 24px;\n`\n\nconst SwitchButton = styled.div`\n  padding: 4px 6px;\n  background: ${theme.color.transparent[500]};\n  border-radius: 4px;\n  width: max-content;\n  cursor: pointer;\n`","export default __webpack_public_path__ + \"static/media/Telegram.72a660ab.svg\";","import React from \"react\";\n\nimport TextWrapper from \"../../../../components/TextWrapper\";\nimport theme from \"../../../../theme\";\nimport TelegramIcon from \"../../../../assets/icons/Telegram.svg\"\nimport {IParticularInvestor} from \"../../index\";\nimport {truncateMiddle} from \"../../../../_helpers/formattingNumbers\";\n\ninterface Iprops {\n    data: { data: IParticularInvestor }\n}\n\nconst TopRightCard = (props: Iprops) => {\n    const {data} = props\n\n    return (\n        <div className=\"custom-mahadao-material1\" style={{padding: '24px'}}>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Wallet Address'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-center-start\">\n                    <div className=\"marginR08\">\n                        <a href={`https://etherscan.io/address/${data.data.walletAddress}`} target={'_blank'}>\n                            <TextWrapper\n                                text={`${truncateMiddle(data.data.walletAddress, 15)}`}\n                                fontSize={16}\n                            />\n                        </a>\n                    </div>\n\n                    {/*<img src={ClipboardIcon} alt={'img'} height={20}/>*/}\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Social Profile'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-center-start\">\n                    <a href={`https://t.me/${data.data.telegramUsername}`} target={'_blank'}><img src={TelegramIcon} alt={'img'} height={20}/></a>\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Investor Ranking'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={`${data.data.investorRanking}`}\n                        fontSize={16}\n                    />\n                    <TextWrapper\n                        text={`(${data.data.investorRanking} out of ${data.data.investorOutOf})`}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[100]}\n                    />\n                </div>\n            </div>\n            {/*<div className=\"single-line-center-between marginB20\">*/}\n            {/*    <div className=\"single-line-center-start\">*/}\n            {/*        <TextWrapper*/}\n            {/*            text={'Avg Token Buying Price'}*/}\n            {/*            fontSize={16}*/}\n            {/*            Fcolor={theme.color.transparent[\"100\"]}*/}\n            {/*        />*/}\n            {/*    </div>*/}\n            {/*    <div className=\"single-line-center-start\">*/}\n            {/*        <TextWrapper*/}\n            {/*            text={`${data.data.tokenAllocated}`}*/}\n            {/*            fontSize={16}*/}\n            {/*        />*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Transfers'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={`${data.data.transfers}`}\n                        fontSize={16}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TopRightCard;","import React, {useState} from 'react'\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from \"clsx\";\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport '../../../customCss/Custom-Mahadao-Data-Table.css'\nimport {prettyNumber, truncateMiddle} from \"../../../_helpers/formattingNumbers\";\nimport theme from \"../../../theme\";\nimport {format} from \"timeago.js\";\nimport {ITransaction} from \"./TableContainer\";\nimport TextWrapper from \"../../../components/TextWrapper\";\n\n\nexport function SortedDescendingIcon() {\n    return <ArrowDropUpIcon className=\"icon\" style={{color: 'white'}}/>;\n}\n  \nexport function SortedAscendingIcon() {\n    return <ArrowDropDownIcon className=\"icon\" style={{color: 'white'}}/>;\n}\n\nfunction CustomToolbar() {\n    return (\n        <GridToolbarContainer>\n            <GridToolbarExport />\n        </GridToolbarContainer>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        '& .super-app-theme--header': {\n            cursor: 'pointer',\n        },\n        '& .super-app.negative': {\n            color: theme.color.red[300],\n        },\n        '& .super-app.positive': {\n            color: theme.color.green[300],\n        },\n        '& .super-app.loss': {\n            color: theme.color.red[300],\n        },\n        '& .super-app.profit': {\n            color: theme.color.green[300],\n        },\n    },\n    gridStyle: {\n        color: 'white'\n    }\n});\n\ninterface Iprops {\n    data: ITransaction[]\n}\n\nconst DataTable = (props: Iprops) => {\n\n    const {data = []} = props;\n    const classes = useStyles();\n\n    const columns = [\n        {\n            field: 'transactionHash', headerName: 'TRANSACTION HASH', flex: 0.2, sortable: true,\n            renderCell: ((params: any) => {\n                return `${truncateMiddle(params.value, 15, '...')}`\n            }),\n            cellClassName: 'fontWeight300'\n        },\n        {\n            field: 'timestamp', headerName: 'Time', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return format(params.value)\n            }),\n            cellClassName: 'fontWeight300'\n        },\n        { field: 'action', headerName: 'ACTION', flex: 0.1, sortable: true,\n            cellClassName: (params: any) => clsx('fontWeight300','super-app', {\n                negative: params.value === 'sell',\n                positive: params.value === 'buy',\n            }),\n            renderCell: ((params: any) => {\n                return `${params.value.toUpperCase()}`\n            }),\n        },\n        {\n            field: 'balance', headerName: 'BALANCE', flex: 0.1, sortable:true,\n            renderCell: ((params: any) => {\n                return prettyNumber(params.value)\n            })\n        },\n\n        {\n            field: 'price', headerName: 'PRICE', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return `$${prettyNumber(params.value)}`\n            })\n            // cellClassName: (params: any) => clsx('super-app', {\n            //     negative: parseFloat(params.value) < 0,\n            //     positive: parseFloat(params.value) > 0,\n            // }),\n\n        },\n        {\n            field: 'value', headerName: 'VALUE', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return `$${prettyNumber(params.value)}`\n            })\n            // cellClassName: (params: any) => clsx('super-app', {\n            //     loss: parseFloat(params.value) < 0,\n            //     profit: parseFloat(params.value) > 0,\n            // }),\n            // valueFormatter: (params : any) => {\n            //     return `$ ${parseFloat(params.value)}`\n            // }\n        },\n        {\n            field: 'mahaAmount', headerName: 'MAHA', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return `${prettyNumber(params.value)}`\n            }),\n            // cellClassName: (params: any) => clsx('super-app', {\n            //     negative: params.row.action === 'sell' || params.row.action === 'swap',\n            //     positive: params.row.action === 'buy',\n            // }),\n        },\n        { field: 'changeInBalance', headerName: 'CHANGE', flex: 0.15, sortable: true,\n            cellClassName: (params: any) => clsx('super-app', {\n                negative: params.row.action === 'sell' || params.row.action === 'swap',\n                positive: params.row.action === 'buy',\n            }),\n            renderCell: ((params: any) => {\n                return `${prettyNumber(params.value)} %`\n            })\n        },\n    ];\n\n    const [rows, setRows] = useState<number>(10);\n\n    return (\n        <React.Fragment>\n            <div className={classes.root} style={{position: 'relative'}}>\n                <div className=\"viewAll\" onClick={() => setRows(data.length)}>\n                    <TextWrapper text={'View All'}/>\n                </div>\n                <DataGrid className={classes.gridStyle}\n                    getRowId={(rows) => {\n                        return rows.id\n                    }}\n                    rows={data}\n                    columns={columns}\n                    pageSize={rows}\n                    disableMultipleSelection={true}\n                    onRowClick={(newSelection) => {\n                        window.open(`https://etherscan.io/tx/${newSelection.row.transactionHash}`, \"_blank\");\n                    }}\n                    // onCellClick={async (params) => {\n                    //     if (params.field === 'highlightURL') {\n                    //         setUrl(params?.value)\n                    //     }\n\n                    // }}\n                    autoHeight={true}\n                    disableColumnMenu={true}\n                    components={{\n                        Toolbar: CustomToolbar,\n                        ColumnSortedDescendingIcon: SortedDescendingIcon,\n                        ColumnSortedAscendingIcon: SortedAscendingIcon,\n                    }}\n                  disableColumnSelector={true}\n                  disableSelectionOnClick={true}\n                />\n            </div>\n\n        </React.Fragment>\n    )\n}\n\nexport default DataTable\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nimport SearchBar from \"../../../components/SearchBar\";\nimport Button from \"../../../components/Button\";\nimport chartIcon from \"../../../assets/icons/Graph.svg\";\nimport ProfileDataTable from \"./ProfileDataTable\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport {getInvestorTransactions} from \"../../../_helpers/serverApi\";\nimport {prettyNumber} from \"../../../_helpers/formattingNumbers\";\nimport {format} from \"timeago.js\";\n\ninterface Iprops {\n    walletAddress: string;\n}\n\nexport interface ITransaction {\n    action: \"buy\" | \"sell\" | \"swap\",\n    balance: number,\n    changeInBalance: number,\n    mahaAmount: number,\n    price: number\n    timestamp: number,\n    transactionHash: string,\n    value: number,\n    walletAddress: string,\n}\n\nconst TableContainer = (props: Iprops) => {\n    const {walletAddress} = props\n\n    const [searchText, setSearchText] = useState<string>('');\n\n    const [data, setData] = useState<ITransaction[]>([])\n\n    useEffect(() => {\n        getInvestorTransactions({walletAddress: walletAddress})\n            .then((data) => {\n                console.log('getInvestorTransactions', data.transactions);\n                setData(data.transactions);\n            })\n    }, [walletAddress])\n\n    const CleanedData = data.map((d: any) => {\n        return {\n            ...d,\n            'id': d.transactionHash\n        }\n    })\n\n    const filteredDataTemp = useMemo(() => {\n        if (searchText === \"\") return CleanedData\n        else {\n            return CleanedData.filter((d: any) => {\n                return (\n                    d.transactionHash.toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    format(d.timestamp).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    d.action.toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.balance).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.price).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.value).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.changeInBalance).toString().toLowerCase().includes(searchText.toLowerCase())\n                )})\n        }\n    }, [searchText, data])\n\n    return (\n        <MainTableContainer>\n            <section className=\"marginB16\">\n                <Grid container spacing={2}>\n                    <Grid item lg={5} xl={5} md={5} sm={12} xs={12}>\n                        <div style={{marginTop: '8.5px'}}>\n                            <TextWrapper\n                                text={'Transactions'}\n                                fontWeight={600}\n                                fontSize={18}\n                            />\n                        </div>\n                    </Grid>\n                    <Grid item lg={2} xl={2} md={2} sm={12} xs={12}>\n                    </Grid>\n                    <Grid item lg={5} xl={5} md={5} sm={12} xs={12}>\n                        <SearchBar\n                            ILabelValue={''}\n                            value={searchText}\n                            DefaultValue={'Search by Investor name, Address, Balance, etc.'}\n                            setText={(val) => setSearchText(val)}\n                        />\n                    </Grid>\n                    {/*<Grid item lg={2} xl={2} md={2} sm={12} xs={12}>*/}\n                    {/*    <Button onClick={() => {}} variant={'outlined'} size={\"sm\"}>*/}\n                    {/*        <div className=\"single-line\">*/}\n                    {/*            <img src={chartIcon} alt={'chart'}/>*/}\n                    {/*            <div style={{marginLeft: '5px'}}>Visual Map</div>*/}\n                    {/*        </div>*/}\n                    {/*    </Button>*/}\n                    {/*</Grid>*/}\n                </Grid>\n            </section>\n\n            <ProfileDataTable\n                data={filteredDataTemp}\n            />\n        </MainTableContainer>\n    )\n}\n\nexport default TableContainer;\n\nconst MainTableContainer = styled.div`\n  margin-bottom: 40px;\n`","import React, {useEffect, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport { useParams } from 'react-router-dom';\n\nimport avatar from '../../assets/common/avatar.svg'\nimport TextWrapper from \"../../components/TextWrapper\";\nimport styled from \"styled-components\";\nimport Button from \"../../components/Button\";\nimport plus from \"../../assets/icons/Plus.svg\";\nimport close from \"../../assets/icons/Close.svg\";\nimport LeftTopCard from \"./Components/TopLeftCard\";\nimport TopRightCard from \"./Components/TopRightCard\";\nimport TableContainer from \"./Components/TableContainer\";\nimport {deleteParticularInvestor, getParticularInvestorData} from \"../../_helpers/serverApi\";\nimport {history} from \"../../_helpers/history\";\nimport CustomModal from \"../../components/CustomModal\";\n\nexport interface IParticularInvestor {\n    allocatedAtPrice: number,\n    allocatedPercentage: number,\n    change: number,\n    changePercentage: number,\n    currentBalance: number,\n    email: string,\n    id: string,\n    investmentAtPrivateSale: number,\n    investor: string,\n    investorRanking: number,\n    profitLoss: number,\n    profitLossIndicator: boolean\n    telegramUsername: string,\n    tokenAllocated: number,\n    tokenSold: number,\n    transfers: number,\n    walletAddress: string,\n    currentBalancePrice: number,\n    investorOutOf: number,\n    profitLossPercentage: number,\n    allocationPrice: number,\n}\n\nconst InitParticularInvestor = {\n    allocatedAtPrice: 0,\n    allocatedPercentage: 0,\n    change: 0,\n    changePercentage: 0,\n    currentBalance: 0,\n    email: '',\n    id: '',\n    investmentAtPrivateSale: 0,\n    investor: '',\n    investorRanking: 0,\n    profitLoss: 0,\n    profitLossIndicator: true,\n    telegramUsername: '',\n    tokenAllocated: 0,\n    tokenSold: 0,\n    transfers: 0,\n    walletAddress: '',\n    currentBalancePrice: 0,\n    investorOutOf: 0,\n    profitLossPercentage: 0,\n    allocationPrice: 0,\n}\n\nconst InvestorProfile = () => {\n    // @ts-ignore\n    const { walletAddress } = useParams();\n    const [data, setData] = useState<IParticularInvestor>(InitParticularInvestor)\n    const [confirmationModal, setConfirmationModal] = useState<boolean>(false);\n\n    useEffect(() => {\n        getParticularInvestorData({walletAddress: walletAddress})\n            .then((data) => {\n                console.log('getParticularInvestorData', data)\n                setData(data)\n            })\n            .catch((error) => {\n                console.log('getParticularInvestorData error', error)\n                alert('internal server error')\n            })\n    }, [])\n\n    const removeInvestor = () => {\n        deleteParticularInvestor({walletAddress: walletAddress})\n            .then((data) => {\n                console.log('deleteParticularInvestor', data)\n                setData(data)\n                history.push('/dashboard')\n                history.go(0)\n            })\n            .catch((error) => {\n                console.log('deleteParticularInvestor error', error)\n                alert('internal server error')\n            })\n    }\n\n    return (\n        <Page>\n            <CustomModal\n                title={'Are you sure you want to delete this investor?'}\n                handleClose={() => setConfirmationModal(false)}\n                open={confirmationModal}\n            >\n                <Grid container spacing={2}>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button onClick={() => setConfirmationModal(false)} variant={'transparent'}>Cancel</Button>\n                    </Grid>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button onClick={() => removeInvestor()}>Yes</Button>\n                    </Grid>\n                </Grid>\n\n            </CustomModal>\n            <div className=\"custom-container\">\n                <section style={{marginTop: '120px'}}>\n                    <div className=\"single-line-center-start\">\n                        <img src={avatar} alt={'img'} height={88} className=\"rounded-circle\"/>\n                        <div className=\"marginL32\">\n                            <TextWrapper\n                                text={data.investor}\n                                fontWeight={'bold'}\n                                fontSize={24}\n                            />\n                            <ButtonConatiner>\n                                <a href={`mailto:${data.email}`} >\n                                    <Button onClick={() => {}} variant={\"outlined\"}>\n                                        <img src={plus} alt={'plus'}/>\n                                        <div style={{marginLeft: '5px'}}>Message</div>\n                                    </Button>\n                                </a>\n                                <div className=\"marginL12\">\n                                    <Button onClick={() => setConfirmationModal(true)} variant={\"outlined\"}>\n                                        <img src={close} alt={'remove'}/>\n                                        <div style={{marginLeft: '5px'}}>Remove</div>\n                                    </Button>\n                                </div>\n                            </ButtonConatiner>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"marginT40\">\n                    <Grid container spacing={2}>\n                        <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                            <LeftTopCard\n                                data={{data: data}}\n                            />\n                        </Grid>\n                        <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                            <TopRightCard\n                                data={{data: data}}\n                            />\n                        </Grid>\n                    </Grid>\n                </section>\n\n                <section className=\"marginT40\">\n                    <TableContainer\n                        walletAddress={walletAddress}\n                    />\n                </section>\n            </div>\n        </Page>\n    )\n}\n\nexport default InvestorProfile\n\nconst Page = styled.div`\n  margin-top: 80px;\n  min-height: calc(100vh - 80px);\n`\n\nconst ButtonConatiner = styled.div`\n  max-width: 122px;\n  margin-top: 8px;\n  display: flex;\n`\n","import styled from \"styled-components\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\n\nconst NotificationCard = () => {\n    return (\n        <NCard className=\"marginB08\">\n            <div className=\"single-line-center-between\">\n                <TextWrapper\n                    text={'Ajeet Khurana'}\n                    fontWeight={600}\n                />\n                <TextWrapper\n                    text={'-$27,432'}\n                    fontWeight={600}\n                    fontSize={18}\n                />\n            </div>\n            <div className=\"single-line-center-between\">\n                <TextWrapper\n                    text={'Sold 5000 MAHA to 0x564...534'}\n                />\n                <TextWrapper\n                    text={'-15'}\n                    fontWeight={600}\n                    fontSize={12}\n                    Fcolor={theme.color.red[300]}\n                />\n            </div>\n            <div>\n                <TextWrapper\n                    text={'July 5'}\n                    fontSize={12}\n                    Fcolor={theme.color.transparent[100]}\n                />\n            </div>\n        </NCard>\n    )\n}\n\nexport default NotificationCard;\n\nconst NCard = styled.div`\n  background: linear-gradient(180deg, #2D2D2D 0%, #1C1C1C 100%);\n  padding: 24px;\n  border: 1px solid ${theme.color.transparent[400]};\n  box-sizing: border-box;\n  border-radius: 6px;\n`","import styled from \"styled-components\";\nimport TextWrapper from \"../../components/TextWrapper\";\nimport {Page} from \"../Dashboard\";\nimport {Grid} from \"@material-ui/core\";\nimport NotificationCard from \"./components/NotificationCard\";\n\nconst Notification = () => {\n    return (\n        <Page>\n            <HeaderPage>\n                <TextWrapper\n                    text={'NOTIFICATION'}\n                    fontFamily={'Syne'}\n                    fontSize={24}\n                    fontWeight={'bold'}\n                />\n            </HeaderPage>\n            <section className=\"custom-container\">\n                <Grid container>\n                    <Grid item lg={3} md={3} sm={12} xs={12}>\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                        <NotificationCard/>\n                        <NotificationCard/>\n                        <NotificationCard/>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={12} xs={12}>\n                    </Grid>\n                </Grid>\n            </section>\n        </Page>\n    )\n}\n\nexport default Notification;\n\nconst HeaderPage = styled.section`\n  padding: 40px 0;\n  text-align: center;\n`","import { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nimport CustomInputContainer, {\n  ICStatesInterface,\n} from \"../../../components/CustomInputConatiner\";\nimport { Page } from \"../../Dashboard\";\nimport Button from \"../../../components/Button\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport { history } from \"../../../_helpers/history\";\n\nconst Login = () => {\n  const [emailId, setEmailID] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [ICStates, setICStates] = useState<ICStatesInterface>({\n    IState: \"default\",\n    IMsg: \"\",\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"userLoggedIn\", \"false\");\n  }, []);\n\n  const loginUser = () => {\n    if (emailId === \"admin@mahadao.com\" && password === \"mahadao\") {\n      localStorage.setItem(\"userLoggedIn\", \"true\");\n      history.push(\"/dashboard\");\n      history.go(0);\n      setICStates({\n        IState: \"default\",\n        IMsg: \"\",\n      });\n    } else {\n      setICStates({\n        IState: \"error\",\n        IMsg: \"Invalid emailid or password\",\n      });\n    }\n    setPassword(\"\");\n    setEmailID(\"\");\n  };\n\n  return (\n    <Page>\n      <section className=\"paddingT40\">\n        <Grid container justify={\"center\"}>\n          <Grid item lg={4} sm={10} xs={12}>\n            <LoginContainer className=\"custom-mahadao-material1\">\n              <div className=\"text-center marginB40\">\n                <TextWrapper\n                  text={\"Sign In\"}\n                  fontFamily={\"Syne\"}\n                  fontSize={24}\n                  fontWeight={\"bold\"}\n                />\n              </div>\n              <CustomInputContainer\n                ILabelValue={\"Email id\"}\n                value={emailId}\n                DefaultValue={\"eg: john@xyz.com\"}\n                setText={(data) => setEmailID(data)}\n                Istate={ICStates.IState}\n                Imsg={ICStates.IMsg}\n              />\n              <CustomInputContainer\n                ILabelValue={\"Password\"}\n                value={password}\n                DefaultValue={\"*******\"}\n                setText={(data) => setPassword(data)}\n                inputMode={\"password\"}\n              />\n              <ButtonContainer>\n                <Button onClick={() => loginUser()}>Login</Button>\n              </ButtonContainer>\n            </LoginContainer>\n          </Grid>\n        </Grid>\n      </section>\n    </Page>\n  );\n};\n\nexport default Login;\n\nconst LoginContainer = styled.div`\n  padding: 32px;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 32px;\n`;\n","export const isUserLoggedIn = localStorage.getItem('userLoggedIn') === 'true'","import React, { useEffect } from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport InvestorProfile from \"./pages/InvestorProfile\";\nimport Notification from \"./pages/Notification\";\nimport Login from \"./pages/Auth/login\";\nimport { isUserLoggedIn } from \"./_helpers/checkUserLogin\";\n\nconst Navigation = () => {\n  let initialRoute = \"/auth/login\";\n  if (isUserLoggedIn) {\n    initialRoute = \"/dashboard\";\n  }\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/auth/login\" exact component={Login} />\n        {isUserLoggedIn && (\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n        )}\n        {isUserLoggedIn && (\n          <Route\n            path=\"/investor-profile/:walletAddress\"\n            exact\n            component={InvestorProfile}\n          />\n        )}\n        {isUserLoggedIn && (\n          <Route path=\"/notifications\" exact component={Notification} />\n        )}\n        <Route exact path=\"/\">\n          <Redirect to={initialRoute} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/logo.c35e51c2.svg\";","import styled from \"styled-components\";\n\nimport logo from '../../assets/common/logo.svg'\nimport avatar from '../../assets/common/avatar.svg'\nimport notificationIcon from '../../assets/icons/Notification.svg'\nimport {isUserLoggedIn} from \"../../_helpers/checkUserLogin\";\n\nconst Topbar = () => {\n    return(\n        <MainTopBarContainer>\n            <div className=\"custom-container\">\n                <InnerTopBar>\n                    <LeftTopbar>\n                        <a href={'/'}>\n                            <img src={logo} alt={'Mahatracker'} height={44} className=\"pointer\"/>\n                        </a>\n                    </LeftTopbar>\n                    <RightTopbar>\n                        {/*<a href={'/notifications'}>\n                            <img src={notificationIcon} alt={'icon'} height={20} style={{marginRight: '28px'}} className=\"pointer\"/>\n                        </a>*/}\n                        {isUserLoggedIn && <img src={avatar} alt={'avatar'} height={44} className=\"pointer rounded-circle\"/>}\n                    </RightTopbar>\n                </InnerTopBar>\n            </div>\n        </MainTopBarContainer>\n    )\n}\n\nexport default Topbar;\n\nconst MainTopBarContainer = styled.div`\n  width: 100vw;\n  background: rgba(0, 0, 0);\n  backdrop-filter: blur(70px);\n  position: fixed;\n  top: 0;\n  z-index: 100;\n`\n\nconst InnerTopBar = styled.div`\n  width: 100%;\n  height: 80px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst LeftTopbar = styled.div`\n  \n`\n\nconst RightTopbar = styled.div`\n\n`","import React from \"react\";\n\nimport Navigation from \"./navigation\";\nimport Topbar from \"./components/TopBar\";\n\nfunction App() {\n  return (\n    <div>\n      <Topbar />\n      <Navigation />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}