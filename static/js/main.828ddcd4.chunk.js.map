{"version":3,"sources":["theme/index.ts","theme/colors.ts","components/TextWrapper/index.tsx","assets/common/MAHAToken.svg","components/PageHeader/index.tsx","components/HtmlTooltip/index.ts","components/CustomTooltip/index.tsx","pages/Dashboard/components/InfoBox.tsx","assets/icons/Close.svg","components/CustomModal/index.tsx","components/CustomInputConatiner/index.tsx","components/Button/index.tsx","_helpers/apicaller.ts","_helpers/serverApi.ts","components/CustomInputConatiner/inputValidation.ts","_helpers/validators.ts","pages/Dashboard/modal/AddInvestorModal.tsx","_helpers/history.ts","_helpers/formattingNumbers.ts","assets/icons/Download.svg","components/ImportCSV/modal/UploadingModal.tsx","assets/icons/Success.svg","components/CustomSuccessModal/index.tsx","components/ImportCSV/index.tsx","components/ExportCSV/index.tsx","pages/Dashboard/components/DataTable.tsx","assets/icons/Search.svg","components/SearchBar/index.tsx","assets/icons/Plus.svg","pages/Dashboard/components/TableConatiner.tsx","components/Piechart/index.tsx","pages/Dashboard/components/AllocationOverview.tsx","pages/Dashboard/index.tsx","assets/common/avatar.svg","assets/icons/Message.svg","assets/icons/Edit.svg","assets/icons/Delete.svg","assets/icons/LeftArrowIcon.svg","assets/icons/Graph.svg","pages/InvestorProfile/Components/TopLeftCard/PieRepresentation.tsx","pages/InvestorProfile/Components/TopLeftCard/LineFormatRepresentation.tsx","pages/InvestorProfile/Components/TopLeftCard/index.tsx","assets/icons/Telegram.svg","pages/InvestorProfile/Components/TopRightCard/index.tsx","pages/InvestorProfile/Components/ProfileDataTable.tsx","pages/InvestorProfile/Components/Neo4jChart.tsx","components/CustomDateRangePicker/index.tsx","pages/InvestorProfile/Components/TableContainer.tsx","pages/InvestorProfile/modal/EditInvestorModal.tsx","pages/InvestorProfile/index.tsx","pages/Notification/components/NotificationCard.tsx","pages/Notification/index.tsx","_helpers/checkUserLogin.ts","pages/Auth/login/index.tsx","navigation.tsx","assets/common/logo.svg","assets/icons/Logout.svg","components/TopBar/modal/AccountOptionsModal.tsx","components/TopBar/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","borderRadius","color","dark","500","400","300","200","100","light","primary","red","green","yellow","purple","transparent","black","white","gradients","brown_gradient","orange_gradient","gray_linear","dark_linear","teal","alpha","8","32","64","88","siteWidth","spacing","1","2","3","4","5","6","7","topBarSize","TextWrapper","props","fontFamily","fontStyle","fontWeight","fontSize","FletterSpacing","Fcolor","text","Fmargin","Fpadding","StyledText","letterSpacing","fcolor","margin","padding","style","styled","p","PageHeader","MainHeaderContainer","className","InnerHeader","UserRole","src","mahaToken","alt","href","target","div","HtmlTooltip","withStyles","theme1","tooltip","backgroundColor","Tooltip","CustomToolTip","toolTipText","title","Fragment","ToolTipFont","transform","cursor","marginBottom","InfoBox","data1","data2","data3","data4","InfoBoxLine","value","percent","DialogTitle","createStyles","root","closeButton","position","right","top","palette","grey","children","classes","onClose","titleLogo","modalTitleStyle","other","disableTypography","Typography","variant","IconButton","aria-label","onClick","CloseIcon","width","DialogContent","minWidth","dividers","borderTop","maxHeight","MuiDialogContent","useStyles","makeStyles","customDialogClass","background","boxShadow","CustomModal","handleClose","open","modalContainerStyle","modalBodyStyle","mobile","useTheme","modalStyles","fullScreen","useMediaQuery","breakpoints","down","React","useState","openModal","setOpen","handleCloseModal","modalJsx","Dialog","fullWidth","aria-labelledby","onBackdropClick","paper","alignItems","justifyContent","paddingLeft","paddingRight","lineHeight","id","CustomInputContainer","ILabelValue","DefaultValue","inputMode","disabled","Istate","Imsg","DisableMsg","IWarningstate","warningMsg","dontShowBackgroundContainer","IState","IMsg","ICStates","setICStates","ICWarningStates","useEffect","TotalDisable","DMsg","IConatiner","returnObj","IConatinerStyle","ILabelContainer","ILabelLeft","ILabel","IFieldConatiner","InputBase","placeholder","inputProps","flex","type","onChange","event","setText","StyledButton","button","fg","normal","bg","border","radius","undefined","hover","radiusHover","selected","StyledLink","Link","StyledExternalLink","a","Button","buttonSize","buttonPadding","size","to","loading","themeFile","variantStyle","pink","variantToStyle","ButtonChild","useMemo","Host","callApi","endpoint","method","body","url","localStorage","getItem","token","headers","console","log","Date","getMinutes","getSeconds","getMilliseconds","toUpperCase","fetch","JSON","stringify","then","response","ok","json","Promise","reject","callApiToOtherHost","callFileApi","getAllInvestorsData","getAllocationSummary","addNewInvestor","editExcitingInvestor","getParticularInvestorData","deleteParticularInvestor","getInvestorTransactions","authloginUser","importInvestorsData","NumberInputRegex","mediatoryRegex","ValidateNumber","val","test","correctString","initZeroCheck","charAt","slice","removeLeadZeros","emailRegex","isAddress","getAddress","isEmailId","initInputField","status","msg","AddInvestorModal","onSuccess","name","setName","walletAddress","setwalletAddress","emailId","setemailId","teleId","setteleId","investmentAtPrivateSale","setinvestmentAtPrivateSale","tokenAllocated","settokenAllocated","allocatedAtPrice","setallocatedAtPrice","errorMsg","setErrorMsg","addingInvestor","setAddingInvestor","resetFields","onNumericalValueChange","Number","length","blankFields","validateFields","data","onTotalInvestmentChange","toString","temp","onTokenAllocatedChange","onAllocatedAtPriceChange","Grid","container","paddingTop","item","lg","xl","md","sm","xs","error","alert","catch","finally","addInvestor","history","createHashHistory","prettyNumber","decimals","toLocaleString","maximumFractionDigits","truncateMiddle","fullStr","strLen","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","UploadingModal","success","CustomSuccessModal","buttonRedirection","modalOpen","setModalOpen","subTitle","subTitleLink","buttonText","subsubTitle","buttonType","buttonHref","buttonTo","MainContainer","CloseButton","Close","height","TickContainer","TickBackgroundWave","TickImg","Tick","ContentConatiner","ContentTitle","ContentSubSubtitle","ContentSubtitle","TickAnimation","keyframes","TickBackground","img","ImportCSV","selectedFile","setSelectedFile","uploadFileModal","setUploadFileModal","successModal","setSuccessModal","hiddenFileInput","useRef","handleChange","fileUploaded","files","FormData","formData","append","setTimeout","current","click","handleClick","downloadIcon","ref","display","accept","window","location","reload","ExportCSV","csvData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","SortedDescendingIcon","SortedAscendingIcon","gridStyle","DataTable","columns","field","headerName","sortable","cellClassName","renderCell","params","row","clsx","negative","profitLossIndicator","positive","rows","setRows","getRowId","pageSize","disableMultipleSelection","onCellClick","push","go","autoHeight","disableColumnMenu","components","ColumnSortedDescendingIcon","ColumnSortedAscendingIcon","disableColumnSelector","disableSelectionOnClick","SearchBar","searchIcon","themee","TableConatiner","setAddInvestor","searchText","setSearchText","refreshData","setRefreshData","setData","d","investors","filteredDataTemp","filter","investor","toLowerCase","includes","allocatedPercentage","currentBalance","tokenSold","profitLoss","change","allocatedMAHA","MainTableContainer","plus","marginLeft","colorList","CustomPieChart","this","balances","map","b","i","percentage","PieChart","Pie","dataKey","nameKey","cx","cy","innerRadius","outerRadius","fill","entry","index","Cell","stroke","PureComponent","AllocationOverview","setMahaPriceUsd","mahadao","usd","dataTotal","totalTokenSold","totalWalletBalance","calculatedData","amount","amountInUsd","totalTokensAllocatedPrice","totalWalletBalancePrice","totalTokenSoldPrice","Indicator","InitAllocationSummaryData","Dashboard","allocationSummaryData","setAllocationSummaryData","Page","investorsCount","totalInvestment","currentValue","abs","investorProfit","PieRepresentation","pieData","mahaPriceUsd","LineFormatRepresentation","currentBalancePrice","profitLossPercentage","Index","chartFormat","setChartFormat","allocationPrice","MainCardContainer","SwitchButton","leftIcon","chartIcon","TopRightCard","telegramUsername","TelegramIcon","investorRanking","investorOutOf","transfers","format","action","onRowClick","newSelection","transactionHash","NEO4J_URI","NEO4J_USER","NEO4J_PASSWORD","Neo4jChart","config","container_id","server_url","server_user","server_password","labels","Troll","caption","community","relationships","RETWEETS","thickness","arrows","initial_cypher","Neovis","render","CustomDateRangePicker","selectedDates","onApplyPressCallback","onClearPressCallback","startDate","endDate","key","setValue","showDateModal","setShowDateModal","toDateString","ButtonContainer","selection","showSelectionPreview","moveRangeOnFirstSelection","months","ranges","direction","scroll","enabled","maxDate","TableContainer","showVisualData","filteringDate","setFilteringDate","transactions","CleanedData","timestamp","balance","price","changeInBalance","marginTop","ProfileDataTable","EditInvestorModal","editingInvestor","setEditingInvestor","email","editInvestor","InitParticularInvestor","changePercentage","InvestorProfile","useParams","confirmationModal","setConfirmationModal","setEditInvestor","avatar","ButtonConatiner","messageIcon","editIcon","deleteIcon","NotificationCard","NCard","Notification","HeaderPage","section","isUserLoggedIn","Login","setEmailID","password","setPassword","setItem","removeItem","justify","LoginContainer","accessToken","Navigation","initialRoute","path","exact","component","AccountOptionsModal","ModalStyle","Options","logoutIcon","Topbar","showOptionModal","setShowOptionModal","MainTopBarContainer","InnerTopBar","LeftTopbar","logo","RightTopbar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.828ddcd4.chunk.js","sourcesContent":["import {black, dark, purple, transparent, white, light, primary, red, green, yellow, gradients, teal, alpha} from './colors'\n\nexport interface ITheme {\n    borderRadius: number,\n    color: any,\n    siteWidth: number,\n    spacing: object,\n    topBarSize: number,\n}\n\nconst theme = {\n    borderRadius: 12,\n    color: {\n        dark,\n        light,\n        primary,\n        red,\n        green,\n        yellow,\n        purple,\n        transparent,\n        black,\n        white,\n        gradients,\n        teal,\n        alpha\n    },\n    siteWidth: 1200,\n    spacing: {\n        1: 4,\n        2: 8,\n        3: 16,\n        4: 24,\n        5: 32,\n        6: 48,\n        7: 64,\n    },\n    topBarSize: 72,\n}\n\nexport default theme;","export const dark = {\n    500: '#151414',\n    400: '#1F1E1E',\n    300: '#2A2827',\n    200: '#363130',\n    100: '#423B38',\n}\n\nexport const light = {\n    500: '#D9D5D3',\n    400: '#E2DFDF',\n    300: '#EBEAEA',\n    200: '#F5F5F5',\n    100: '#FAFAFA',\n}\n\nexport const primary = {\n    500: '#D74D26',\n    400: '#F7653B',\n    300: '#FF7F57',\n    200: '#FFA981',\n    100: '#FEE2D5',\n}\n\nexport const red = {\n    500: '#BA1E38',\n    400: '#EF3050',\n    300: '#FA4C69',\n    200: '#FF9EAE',\n    100: '#FFDCE2',\n}\n\nexport const green = {\n    500: '#178A50',\n    400: '#11AF60',\n    300: '#20C974',\n    200: '#88E0B4',\n    100: '#C4F7DD',\n}\n\nexport const yellow = {\n    500: '#B87503',\n    400: '#F09700',\n    300: '#FCB400',\n    200: '#FFD66E',\n    100: '#FFEAB6',\n}\n\nexport const purple = {\n    500: '#5427AE',\n    400: '#682AE5',\n    300: '#7A3CF6',\n    200: '#BD9CFF',\n    100: '#DFCFFF',\n}\n\nexport const transparent = {\n    500: '#FFFFFF08',\n    400: '#FFFFFF16',\n    300: '#FFFFFF32',\n    200: '#FFFFFF64',\n    100: '#FFFFFF88',\n}\n\nexport const pink = {\n    200: '#F47F57',\n    300: '#FF7F57',\n    400: '#FD5656'\n}\n\nexport const grey = {\n    100: '#f5f5f5',\n    200: '#eeeeee',\n    300: '#e0e0e0',\n    400: '#bdbdbd',\n    500: '#9e9e9e',\n    600: '#757575',\n    700: '#616161',\n    800: '#424242',\n    900: '#212121',\n}\n\nexport const gradients = {\n    brown_gradient: 'linear-gradient(180deg, #48423E 0%, #373030 100%)',\n    orange_gradient: 'linear-gradient(38.44deg, #F47F57 15.81%, #FD5656 87.57%)',\n    gray_linear: 'linear-gradient(180deg, #2A2827 0%, rgba(42, 40, 39, 0) 100%)',\n    dark_linear: 'linear-gradient(180deg, #2D2D2D 0%, #1C1C1C 100%)',\n}\n\nexport const black = '#000000'\n\nexport const white = '#FFFFFF'\n\nexport const teal = {\n    200: '#64ffda'\n}\n\nexport const alpha = {\n    8: 'rgba(255, 255, 255, 0.08)',\n    32: 'rgba(255, 255, 255, 0.32)',\n    64: 'rgba(255, 255, 255, 0.64)',\n    88: 'rgba(255, 255, 255, 0.88)',\n}\n","import styled from \"styled-components\";\n\ninterface TextWrapperProps {\n    fontFamily?: 'Inter' | 'Syne';\n    fontStyle?: string;\n    fontWeight?: 'bold' | 300 | 600,\n    fontSize?: 24 | 18 | 16 | 14 | 12;\n    FletterSpacing?: string;\n    Fcolor?: string;\n    text: string;\n    Fmargin?: string;\n    Fpadding?: string;\n}\n\nconst TextWrapper = (props: TextWrapperProps) => {\n    const {\n        fontFamily = 'Inter',\n        fontStyle = 'normal',\n        fontWeight = 300,\n        fontSize = 14,\n        FletterSpacing = 'normal',\n        Fcolor = '#FFFFFF',\n        text = '',\n        Fmargin = '0',\n        Fpadding = '0'\n    } = props;\n\n    return (\n        <StyledText\n            fontFamily={fontFamily}\n            fontSize={fontSize}\n            fontWeight={fontWeight}\n            fontStyle={fontStyle}\n            letterSpacing={FletterSpacing}\n            fcolor={Fcolor}\n            margin={Fmargin}\n            padding={Fpadding}\n            style={{color: Fcolor}}\n        >\n            {text}\n        </StyledText>\n    )\n}\n\nexport default TextWrapper;\n\ninterface StyledTextProps {\n    fontFamily: 'Inter' | 'Syne';\n    fontStyle: string;\n    fontWeight: 'bold' | 300 | 600,\n    fontSize: 24 | 18 | 16 | 14 | 12;\n    letterSpacing: string;\n    fcolor: string;\n    margin: string;\n    padding: string;\n}\n\nconst StyledText = styled.p<StyledTextProps>`\n  font-family: ${(props) => props.fontFamily};\n  font-style: ${(props) => props.fontStyle};\n  font-weight: ${(props) => props.fontWeight};\n  font-size: ${(props) => props.fontSize}px;\n  letter-spacing: ${(props) => props.letterSpacing};\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n`","export default __webpack_public_path__ + \"static/media/MAHAToken.c8e236b5.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport theme from '../../theme'\nimport TextWrapper from \"../TextWrapper\";\n\nimport mahaToken from \"../../assets/common/MAHAToken.svg\";\n\ninterface IProps {\n    text: string;\n}\n\nconst PageHeader = (props: IProps) => {\n    return(\n        <MainHeaderContainer>\n            <div className=\"custom-container\">\n                <div className=\"single-line-center-between\">\n                    <InnerHeader>\n                        <UserRole>\n                            <TextWrapper\n                                text={'Admin'}\n                                fontFamily={'Syne'}\n                                fontWeight={'bold'}\n                                fontSize={24}\n                                FletterSpacing={'0.1em'}\n                            />\n                        </UserRole>\n                        <div className=\"single-line-center-start\">\n                            <img src={mahaToken} alt={'MAHADAO'} className=\"marginR12\"/>\n                            <TextWrapper\n                                text={'MAHADAO'}\n                                fontFamily={'Syne'}\n                                fontWeight={'bold'}\n                                fontSize={24}\n                                FletterSpacing={'0.1em'}\n                            />\n                        </div>\n                    </InnerHeader>\n                    <div>\n                        <a href='https://etherscan.io/token/0xb4d930279552397bba2ee473229f89ec245bc365' target={'_blank'}>\n                            <TextWrapper\n                                text={'View on Etherscan'}\n                                Fcolor={theme.color.primary[300]}\n                            />\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </MainHeaderContainer>\n    )\n}\n\nexport default PageHeader;\n\nconst MainHeaderContainer = styled.div`\n  width: 100vw;\n  background: ${theme.color.dark[500]};\n  position: relative;\n  padding: 40px 0;\n`\n\nconst InnerHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`\n\nconst BackgroudContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst UserRole = styled.div`\n  padding-right: 20px;\n  border-right: 1px solid white;\n  margin-right: 20px;\n`","import { withStyles, Theme } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport theme from '../../theme';\r\n\r\n\r\nconst HtmlTooltip = withStyles((theme1: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.color.dark[200],\r\n    color: 'white',\r\n    fontWeight: 300,\r\n    fontSize: '13px',\r\n    borderRadius: '6px',\r\n    padding: '20px',\r\n    // paddingRight: 0\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default HtmlTooltip;","import React  from 'react';\nimport styled from 'styled-components';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HtmlTooltip from '../HtmlTooltip';\n\ntype props = {\n  toolTipText?: string;\n  iconStyle?: object;\n};\n\nconst CustomToolTip: React.FC<props> = (props) => {\n  const { toolTipText } = props;\n\n  if (!toolTipText) {\n    return <InfoIcon fontSize=\"default\" style={{ transform: 'scale(0.6)' }} />;\n  }\n\n  return (\n    <HtmlTooltip\n      title={\n        <React.Fragment>\n          <ToolTipFont>{toolTipText}</ToolTipFont>\n        </React.Fragment>\n      }\n    >\n      <InfoIcon\n        fontSize=\"default\"\n        style={{ transform: 'scale(0.6)', cursor: 'pointer', marginBottom: '2px', color: '#ffffff80' }}\n      />\n    </HtmlTooltip>\n  );\n};\n\nexport default CustomToolTip;\n\nconst ToolTipFont = styled.p`\n  padding: 0;\n  margin: 0;\n`;\n","import TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\nimport styled from \"styled-components\";\nimport CustomToolTip from \"../../../components/CustomTooltip\";\n\ninterface IData {\n    title: string,\n    toolbarText?: string | null,\n    value: string,\n    percent: string,\n    status: 'positive' | 'negative'\n}\n\ninterface IProps {\n    data1: IData,\n    data2: IData,\n    data3: IData,\n    data4: IData,\n}\n\nconst InfoBox = (props: IProps) => {\n\n    const {data1, data2, data3, data4} = props\n\n    return (\n        <div className=\"custom-mahadao-material2\">\n            <InfoBoxLine className=\"single-line-center-between marginB32\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={data1.title}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"200\"]}\n                        Fmargin={'0 0 4px 0'}\n                    />\n                    <CustomToolTip toolTipText={'No of total Investors'}/>\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={data1.value}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={data1.percent}\n                        fontSize={12}\n                        Fcolor={theme.color.green[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />\n                </div>\n            </InfoBoxLine>\n            <InfoBoxLine className=\"single-line-center-between marginB32\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={data2.title}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"200\"]}\n                        Fmargin={'0 0 4px 0'}\n                    />\n                    <CustomToolTip toolTipText=\"Overall amount invested by all investors\"/>\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={data2.value}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n\n                    <TextWrapper\n                        text={data2.percent}\n                        fontSize={12}\n                        Fcolor={theme.color.green[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />\n                </div>\n            </InfoBoxLine>\n            <InfoBoxLine className=\"single-line-center-between marginB32\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={data3.title}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"200\"]}\n                        Fmargin={'0 0 4px 0'}\n                    />\n                    <CustomToolTip toolTipText=\"Current value of the total tokens allocated\"/>\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={data3.value}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={data3.percent}\n                        fontSize={12}\n                        Fcolor={theme.color.green[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />\n                </div>\n            </InfoBoxLine>\n            <InfoBoxLine className=\"single-line-center-between \">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={data4.title}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"200\"]}\n                        Fmargin={'0 0 4px 0'}\n                    />\n                    <CustomToolTip toolTipText=\"Worth of all tokens sold by investors till date\"/>\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={data4.value}\n                        fontWeight={600}\n                        fontSize={18}\n                        // Fcolor={theme.color.green[\"300\"]}\n                    />\n                    <TextWrapper\n                        text={data4.percent}\n                        fontSize={12}\n                        // Fcolor={theme.color.green[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />\n                </div>\n                {/*{data4.value.includes('-')\n                    ? (<div className=\"single-line-baseline-start\">\n                        <TextWrapper\n                            text={data4.value}\n                            fontWeight={600}\n                            fontSize={18}\n                            Fcolor={theme.color.red[\"300\"]}\n                        />\n                        <TextWrapper\n                            text={data4.percent}\n                            fontSize={12}\n                            Fcolor={theme.color.red[\"300\"]}\n                            Fmargin={'0 0 0 4px'}\n                        />\n                    </div>)\n                    : (<div className=\"single-line-baseline-start\">\n                        <TextWrapper\n                            text={data4.value}\n                            fontWeight={600}\n                            fontSize={18}\n                            Fcolor={theme.color.green[\"300\"]}\n                        />\n                        <TextWrapper\n                            text={data4.percent}\n                            fontSize={12}\n                            Fcolor={theme.color.green[\"300\"]}\n                            Fmargin={'0 0 0 4px'}\n                        />\n                    </div>)\n                }*/}\n            </InfoBoxLine>\n        </div>\n    )\n}\n\nexport default InfoBox;\n\nconst InfoBoxLine = styled.div`\n  text-align: left;\n`\n","export default __webpack_public_path__ + \"static/media/Close.372add4c.svg\";","import React from 'react';\nimport { createStyles, makeStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport CloseIcon from '../../assets/icons/Close.svg';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      borderRadius: '12px',\n      padding: theme.spacing(2),\n      color: 'white',\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  titleLogo?: React.ReactNode;\n  children: React.ReactNode;\n  onClose?: () => void;\n  modalTitleStyle?: any;\n  closeButton?: boolean;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, titleLogo, modalTitleStyle, closeButton, ...other } = props;\n  return (\n    <MuiDialogTitle style={modalTitleStyle} disableTypography className={classes.root} {...other}>\n      <div className=\"dialog-class width-100\">\n        {titleLogo && titleLogo}\n        <Typography variant=\"h6\">{children}</Typography>\n      </div>\n      {onClose && closeButton ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <img src={CloseIcon} width=\"24px\" alt=\"\" />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(() => ({\n  root: {\n    minWidth: 500,\n  },\n  dividers: {\n    borderTop: `1px solid rgba(255, 255, 255, 0.08)`,\n  },\n  '@media (max-width: 600px)': {\n    root: {\n      width: '100%',\n      minWidth: '350px',\n      maxHeight: '60%',\n    },\n  },\n}))(MuiDialogContent);\n\ninterface props {\n  children: React.ReactNode;\n  title?: string;\n  handleClose?: Function;\n  open?: boolean;\n  titleLogo?: React.ReactNode;\n  modalContainerStyle?: any;\n  modalTitleStyle?: any;\n  modalBodyStyle?: any;\n  closeButton?: boolean;\n  mobile?: boolean;\n}\n\nconst useStyles = makeStyles({\n  customDialogClass: {\n    background: 'linear-gradient(180deg, #48423e 0%, #373030 100%)',\n    boxShadow: '0px 8px 16px -2px rgba(0, 0, 0, 0.12)',\n    borderRadius: '12px !important',\n  },\n});\n\nconst CustomModal: React.FC<props> = ({\n  children,\n  title,\n  handleClose,\n  open,\n  titleLogo,\n  modalContainerStyle,\n  modalTitleStyle,\n  modalBodyStyle,\n  closeButton,\n  mobile = false,\n}) => {\n  const theme = useTheme();\n  const modalStyles = useStyles();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const [openModal, setOpen] = React.useState(open);\n\n  const handleCloseModal = () => {\n    if (handleClose) {\n      handleClose();\n    }\n  };\n  if (open !== openModal) {\n    setOpen(open);\n  }\n  let modalJsx = <div />;\n  if (openModal) {\n    modalJsx = (\n      <Dialog\n        style={modalContainerStyle}\n        fullScreen={fullScreen}\n        fullWidth={mobile}\n        onClose={handleCloseModal}\n        aria-labelledby=\"customized-dialog-title\"\n        open={openModal}\n        onBackdropClick={handleCloseModal}\n        classes={{\n          paper: modalStyles.customDialogClass,\n        }}\n      >\n        {title && <DialogTitle\n          closeButton={closeButton}\n          modalTitleStyle={{\n            color: 'rgba(255, 255, 255, 0.88)',\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingLeft: '32px',\n            paddingRight: '32px',\n            fontFamily: 'Inter',\n            fontStyle: 'normal',\n            fontWeight: '600',\n            fontSize: '18px',\n            lineHeight: '24px',\n            ...modalTitleStyle\n\n          }}\n          id='customized-dialog-title'\n          onClose={handleCloseModal}\n          titleLogo={titleLogo}\n        >\n          {title}\n        </DialogTitle>}\n        <DialogContent style={{\n          background: 'linear-gradient(180deg, #48423E 0%, #373030 100%)',\n          borderTop: '1px solid rgba(255, 255, 255, 0.15)',\n          padding: '24px 32px',\n          ...modalBodyStyle\n        }} dividers>\n          <div style={{}}>{children}</div>\n        </DialogContent>\n        {/* </div> */}\n      </Dialog>\n    );\n  }\n\n  return modalJsx;\n};\nexport default CustomModal;\n","import React, { CSSProperties, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { InputBase } from '@material-ui/core';\n\ntype props = {\n    ILabelValue: string;\n    value: string;\n    DefaultValue: string;\n    disabled?: boolean;\n    setText: (val: string) => void;\n    inputMode?: 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search' | 'password';\n    DisableMsg?: string;\n\n    dontShowBackgroundContainer?: boolean;\n    backgroundColor?:string;\n\n    Istate?: 'default' | 'error' | 'warning';\n    Imsg?: string;\n    IWarningstate?: 'default' | 'warning';\n    warningMsg?: string;\n    errorCallback?: (flag: boolean) => void;\n\n};\n\nexport interface ICStatesInterface {\n    IState: 'default' | 'error' | 'warning';\n    IMsg: string;\n}\n\nconst CustomInputContainer: React.FC<props> = (props) => {\n    const {\n        ILabelValue,\n        DefaultValue,\n        inputMode = 'text',\n        disabled = false,\n        Istate = 'default',\n        Imsg = '',\n        DisableMsg = '',\n        IWarningstate = 'default',\n        warningMsg = '',\n        dontShowBackgroundContainer = true,\n        backgroundColor = '',\n    } = props;\n\n    const [ICStates, setICStates] = useState<ICStatesInterface>({ IState: Istate, IMsg: Imsg });\n    const [ICWarningStates, setICWarningStates] = useState<ICStatesInterface>({ IState: IWarningstate, IMsg: warningMsg });\n\n    //For ref not to be removed\n   /* const temp: ICStatesInterface = {\n        IState: 'error',\n        IMsg: 'Amount cannot be more than your balance.',\n    };\n    setICStates(temp);\n    props.errorCallback(true);*/\n\n    useEffect(() => {\n        let temp = { IState: Istate, IMsg: Imsg };\n        setICStates(temp);\n    }, [Istate, Imsg]);\n\n\n    const IConatinerStyle = () => {\n        let returnObj: CSSProperties = {}\n        if (dontShowBackgroundContainer) {\n            returnObj['padding'] = '0px';\n            returnObj['backgroundColor'] = 'transparent';\n        }\n        if (DisableMsg !== \"\") {\n            returnObj['opacity'] = \"0.32\";\n        }\n        return returnObj;\n    }\n\n    const onValueChange = (value: string) => {\n        props.setText(value);\n    }\n\n    return (\n        <div style={{ position: 'relative' }}>\n            {DisableMsg !== '' && <TotalDisable><DMsg>{DisableMsg}</DMsg></TotalDisable>}\n            <IConatiner style={IConatinerStyle()}>\n                {ILabelValue !== '' &&\n                    (<ILabelContainer>\n                        <ILabelLeft>\n                            <ILabel>{ILabelValue}</ILabel>\n                        </ILabelLeft>\n                    </ILabelContainer>)\n                }\n                <IFieldConatiner className={`input-${ICStates.IState}`} style={backgroundColor !== ''? {backgroundColor: backgroundColor}: {}}>\n                    <InputBase\n                        // inputMode={props?.inputMode}\n                        placeholder={DefaultValue}\n                        value={props.value}\n                        inputProps={{ 'aria-label': 'naked' }}\n                        style={{\n                            padding: '8px 12px 6px 12px',\n                            color: '#FFFFFF',\n                            flex: 1,\n                            fontFamily: 'Inter !important',\n                        }}\n                        disabled={disabled}\n                        type={inputMode}\n                        onChange={(event) => onValueChange(event.target.value)}\n                    />\n                </IFieldConatiner>\n                {ICStates.IMsg !== '' && (\n                    <p className={`input-font-${ICStates.IState}`}>{ICStates.IMsg}</p>\n                )}\n                {ICWarningStates.IMsg !== '' && (\n                    <p className={`input-font-warning`}>{ICWarningStates.IMsg}</p>\n                )}\n            </IConatiner>\n        </div>\n    );\n};\n\nexport default CustomInputContainer;\n\nconst TotalDisable = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.16);\n  box-sizing: border-box;\n  border-radius: 12px;\n  z-index: 12;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #FFFFFF29;\n`;\n\nconst DMsg = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  color: #FFFFFF;\n  margin-bottom: 0;\n`\n\nconst IConatiner = styled.div`\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 8px;\n  padding: 12px;\n  margin-bottom: 20px;\n`;\nconst ILabelContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 12px;\n`;\nconst ILabelLeft = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst ILabel = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 20px;\n  color: rgba(255, 255, 255, 0.64);\n  margin-bottom: 0;\n`;\n\nconst IFieldConatiner = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #151414;\n  border-radius: 6px;\n  max-height: 44px;\n`;\n\n\n\n\n\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport themeFile from '../../theme'\n\ninterface ButtonProps {\n    children?: React.ReactNode;\n    disabled?: boolean;\n    href?: string;\n    onClick: () => void;\n    size?: 'sm' | 'md' | 'lg';\n    text?: string;\n    to?: string;\n    theme?: 'default' | 'secondary' | 'tertiary';\n    variant?: 'default' | 'transparent' | 'outlined' | 'rounded';\n    loading?: boolean;\n}\n\nfunction variantToStyle(variant: string = 'default', color: any) {\n    if (variant === 'transparent') {\n        return {\n            fg: {\n                normal: color.white,\n            },\n            bg: {\n                normal: 'transparent',\n                hover: color.dark[400],\n                selected: color.dark[200]\n            },\n            border: {\n                normal: `1px solid ${color.alpha[88]}`,\n                hover: `1px solid ${color.white}`,\n                radius: '6px',\n                radiusHover: '6px'\n            }\n        }\n    } else if (variant === 'outlined') {\n        return {\n            fg: { normal: '#F5F5F5', hover: '#F5F5F5' },\n            bg: { normal: 'transparent', hover: 'transparent', disabled: 'transparent' },\n            border: {\n                normal: `1px solid ${color.alpha[32]}`,\n                hover: `1px solid ${color.alpha[64]}`,\n            }\n        }\n    } else if (variant === 'rounded') {\n        return {\n            fg: { normal: color.pink[300] },\n            bg: { normal: color.alpha[8], disabled: 'transparent' },\n            border: { radius: '19px', radiusHover: '19px' }\n        }\n    } else {\n        return {\n            fg: {},\n            bg: {},\n            border: {}\n        }\n    }\n}\n\nconst Button: React.FC<ButtonProps> = ({\n    children,\n    disabled,\n    href,\n    onClick,\n    size,\n    text,\n    to,\n    theme,\n    variant,\n    loading= false,\n}) => {\n    const { color, spacing } = themeFile;\n\n    const variantStyle = variantToStyle(variant, color);\n    let fg = {\n        normal: theme === 'secondary' ? color.teal[200] : color.white,\n        hover: color.white,\n        selected: theme === 'secondary' ? color.teal[200] : color.white,\n        disabled: '',\n        ...variantStyle.fg\n    };\n    let bg = {\n        normal: `linear-gradient(38.44deg, ${color.primary[200]} 15.81%, ${color.primary[400]} 87.57%)`,\n        hover: color.primary[300],\n        selected: `linear-gradient(180deg, ${color.primary[200]} -11.33%, ${color.primary[400]} 100%)`,\n        disabled: 'transparent'[300],\n        ...variantStyle.bg\n    };\n    let border = {\n        normal: '0',\n        hover: '0',\n        radius: '6px',\n        radiusHover: variantStyle.border.radiusHover || '6px',\n        ...variantStyle.border\n    }\n\n    let buttonSize: number;\n    let buttonPadding: number;\n    let fontSize: number;\n    switch (size) {\n        case 'sm':\n            buttonPadding = spacing[3];\n            buttonSize = 36;\n            fontSize = 14;\n            break;\n        case 'lg':\n            buttonPadding = spacing[4];\n            buttonSize = 72;\n            fontSize = 16;\n            break;\n        case 'md':\n        default:\n            buttonPadding = spacing[4];\n            buttonSize = 56;\n            fontSize = 16;\n    }\n\n    const ButtonChild = useMemo(() => {\n        if (to) {\n            return <StyledLink to={to}>{text}</StyledLink>;\n        } else if (href) {\n            return (\n                <StyledExternalLink href={href} target=\"__blank\">\n                    {text}\n                </StyledExternalLink>\n            );\n        } else {\n            return text;\n        }\n    }, [href, text, to]);\n\n    return (\n        <StyledButton\n            boxShadow={'0'}\n            fg={fg}\n            bg={bg}\n            border={border}\n            disabled={disabled || loading}\n            fontSize={fontSize}\n            onClick={() => onClick()}\n            padding={buttonPadding}\n            size={buttonSize}\n        >\n            {!loading && children}\n            {!loading && ButtonChild}\n        </StyledButton>\n    );\n};\n\ninterface StyledButtonProps {\n    fg: { normal: string, hover: string, selected: string, disabled: string }\n    bg: { normal: string, hover: string, selected: string, disabled: string }\n    border: { normal: string, hover: string, radius: string, radiusHover: string }\n    boxShadow: string;\n    disabled?: boolean;\n    fontSize: number;\n    padding: number;\n    size: number;\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  color: ${({ fg }) => fg.normal};\n  background: ${({ bg }) => bg.normal};\n  border: ${({ border }) => border.normal};\n  border-radius: ${({ border }) => border.radius};\n  box-shadow: ${(props) => props.boxShadow};\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n\n  align-items: center;\n  text-align: center;\n  white-space: nowrap;\n  cursor: pointer;\n  display: flex;\n  font-size: 14px;\n  font-weight: 600;\n  height: 40px;\n  justify-content: center;\n  outline: none !important;\n  padding: 10px 22px;\n  width: 100%;\n  font-family: Inter;\n\n  &:hover {\n    color: ${({ fg }) => fg.hover};\n    background: ${({ bg }) => bg.hover};\n    border: ${({ border }) => border.hover};\n    border-radius: ${({ border }) => border.radiusHover}\n  }\n  &:focus {\n    color: ${({ fg }) => fg.selected};\n    background: ${({ bg }) => bg.selected};\n  }\n  /*&:focus: {\n    outline: none;\n  }*/\n  &:disabled {\n    color: ${({ fg }) => fg.disabled};\n    background: ${({ bg }) => bg.disabled};\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 38px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 38px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default Button;\n","export const Host = 'https://api.mahatracker.com'\nexport const isProduction = true\n\nexport async function callApi(endpoint: string, method: string = 'get', body?: any) {\n    const url = `${Host}/api/${endpoint}`;\n    const token = (await localStorage.getItem('token')) || '';\n    const headers: any = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\n        'content-type': 'application/json',\n    }\n    if (token) {\n        headers['Authorization'] = `Bearer ${token}`\n        headers['x-jwt'] = token\n    }\n    console.log('api start callApi', new Date().getMinutes(),'min', new Date().getSeconds(),'s', new Date().getMilliseconds(),'ms', method.toUpperCase(), endpoint, body);\n    return await fetch(url, {\n        headers,\n        method,\n        body: JSON.stringify(body)\n    })\n        .then(async (response) => {\n            console.log('api done callApi', new Date().getMinutes(),'min', new Date().getSeconds(),'s', new Date().getMilliseconds(),'ms', response.ok, method.toUpperCase(), endpoint);\n            // console.log(response);\n            if (!response.ok) {\n                return response.json()\n                    .then((json) => {\n                        // if (json.message === 'Bad JWT') AsyncStorage.removeItem('@BearerToken')\n                        return Promise.reject(json)\n                    });\n            }\n            return response.json();\n        });\n}\n\nexport async function callApiToOtherHost(endpoint: string, method: string = 'get', body?: any) {\n    const url = `${endpoint}`;\n    const headers: any = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\n        'content-type': 'application/json',\n    }\n    return await fetch(url, {\n        headers,\n        method,\n        body: JSON.stringify(body)\n    })\n        .then(async (response) => {\n            // console.log(response);\n            if (!response.ok) {\n                return response.json()\n                    .then((json) => {\n                        // if (json.message === 'Bad JWT') AsyncStorage.removeItem('@BearerToken')\n                        return Promise.reject(json)\n                    });\n            }\n            return response.json();\n        });\n}\n\nexport async function callFileApi(endpoint: string, method: string = 'post', body?: any) {\n    const url = `${Host}/api/${endpoint}`;\n    const token = (await localStorage.getItem('token')) || '';\n    const headers: any = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\n        // 'content-type': 'multipart/form-data',\n    }\n    if (token) {\n        headers['Authorization'] = `Bearer ${token}`\n        headers['x-jwt'] = token\n    }\n    console.log('api start callFileApi', new Date().getMinutes(),'min', new Date().getSeconds(),'s', new Date().getMilliseconds(),'ms', method.toUpperCase(), endpoint, body);\n    return await fetch(url, {\n        headers,\n        method,\n        body: body\n    })\n        .then(async (response) => {\n            console.log('api done callFileApi', new Date().getMinutes(),'min', new Date().getSeconds(),'s', new Date().getMilliseconds(),'ms', response.ok, method.toUpperCase(), endpoint);\n            // console.log(response);\n            if (!response.ok) {\n                return response.json()\n                    .then((json) => {\n                        // if (json.message === 'Bad JWT') AsyncStorage.removeItem('@BearerToken')\n                        return Promise.reject(json)\n                    });\n            }\n            return response.json();\n        });\n}","import {callApi, callFileApi} from './apicaller'\n\nexport const getAllInvestorsData = async () => {\n    return await callApi('investor')\n}\n\nexport const getAllocationSummary = async () => {\n    return await callApi('tracker/stats');\n}\n\nexport const addNewInvestor = async (body: any) => {\n    return await callApi('investor', 'post', body)\n}\n\nexport const editExcitingInvestor = async (body: any) => {\n    return await callApi('investor', 'put', body)\n}\n\nexport const getParticularInvestorData = async (body: any) => {\n    return await callApi('particular/investor', 'post', body)\n}\n\nexport const deleteParticularInvestor = async (body: any) => {\n    return await callApi('investor', 'delete', body)\n}\n\nexport const getInvestorTransactions = async (body: any) => {\n    return await callApi('investor/alltransactions', 'post', body)\n}\n\nexport const authloginUser = async (body: any) => {\n    return await callApi('investor/admin', 'post', body)\n}\n\nexport const importInvestorsData = async (body: any) => {\n    return await callFileApi('xl', 'post', body)\n}","export const NumberInputRegex = /^\\d+(\\.\\d*)?$/;\nexport const mediatoryRegex = /^[0]+\\d+(\\.\\d+)?$/;\nexport const RestrictDecimalsDigitsInputRegex = /^[0-9]{0,18}(\\.[0-9]{0,6})?$/;\nexport const RestrictDecimalsDigitsInputRegexSlippage = /^[0-9]{0,3}(\\.[0-9]{0,3})?$/;\n\nexport const ValidateNumber = (val: string) => {\n    return NumberInputRegex.test(val)\n}\n\nexport const checkForAfterDecimalDigits = (val: string, decimals = 6) => {\n    let regex: RegExp = /^[0-9]{0,14}(\\.[0-9]{0,6})?$/;\n\n    if (decimals === 8) regex = /^[0-9]{0,14}(\\.[0-9]{0,8})?$/;\n    else if (decimals === 9) regex = /^[0-9]{0,14}(\\.[0-9]{0,9})?$/;\n    else if (decimals === 18) regex = /^[0-9]{0,14}(\\.[0-9]{0,18})?$/;\n\n    return regex.test(val)\n}\n\nexport const checkForAfterDecimalDigitsSlippage = (val: string) => {\n    return RestrictDecimalsDigitsInputRegexSlippage.test(val)\n}\n\nexport const initZeroCheck = (val: string) => {\n    return mediatoryRegex.test(val)\n}\n\nexport const removeLeadZeros = (val: string) => {\n    while (val.charAt(0) === '0') val = val.slice(1);\n    return val\n}\n\nexport const correctString = (val: string) => {\n    if (initZeroCheck(val)) return removeLeadZeros(val)\n    return val\n}\n","import { getAddress } from '@ethersproject/address'\nconst emailRegex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n    try {\n        return getAddress(value)\n    } catch {\n        return false\n    }\n}\n\nexport function isEmailId(value: string) {\n    return emailRegex.test(value);\n}\n","import CustomModal from \"../../../components/CustomModal\";\nimport CustomInputContainer from \"../../../components/CustomInputConatiner\";\nimport {useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Button from \"../../../components/Button\";\nimport {addNewInvestor} from \"../../../_helpers/serverApi\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\nimport {correctString, ValidateNumber} from \"../../../components/CustomInputConatiner/inputValidation\";\nimport {isAddress, isEmailId} from \"../../../_helpers/validators\";\n\n\ninterface IPorps {\n    openModal: boolean;\n    onClose: () => void;\n    onSuccess: () => void;\n}\n\ninterface IInputField {\n    value: string;\n    status: 'default' | 'error' | 'warning';\n    msg: string;\n}\n\nconst initInputField: IInputField = {\n    value: '',\n    status: 'default',\n    msg: '',\n}\n\nconst AddInvestorModal = (props: IPorps) => {\n    const {openModal, onSuccess, onClose} = props\n\n    const [name, setName] = useState<IInputField>(initInputField);\n    const [walletAddress, setwalletAddress] = useState<IInputField>(initInputField);\n    const [emailId, setemailId] = useState<IInputField>(initInputField);\n    const [teleId, setteleId] = useState<IInputField>(initInputField);\n    const [investmentAtPrivateSale, setinvestmentAtPrivateSale] = useState<IInputField>(initInputField);\n    const [tokenAllocated, settokenAllocated] = useState<IInputField>(initInputField);\n    const [allocatedAtPrice, setallocatedAtPrice] = useState<IInputField>(initInputField);\n\n    const [errorMsg, setErrorMsg] = useState<string>('');\n    const [addingInvestor, setAddingInvestor] = useState<boolean>(false)\n\n    // var disabled: boolean = name !== '' ||\n    //     walletAddress !== '' ||\n    //     emailId !== '' ||\n    //     teleId !== ''\n        // Number(investmentAtPrivateSale) > 0 ||\n        // Number(tokenAllocated) > 0 ||\n        // Number(allocatedAtPrice) > 0\n\n    const resetFields = () => {\n        setName(initInputField)\n        setemailId(initInputField)\n        setwalletAddress(initInputField)\n        setteleId(initInputField)\n        settokenAllocated(initInputField)\n        setallocatedAtPrice(initInputField)\n        setinvestmentAtPrivateSale(initInputField)\n        setErrorMsg('')\n    }\n\n    const onNumericalValueChange = (value: string) => {\n        if (value === '') {\n        } else {\n            if (!ValidateNumber(value)) return null\n        }\n\n        if (Number(value) && Number(value) <= 0) return null;\n        return (value.length > 1 ? correctString(value) : value);\n    }\n\n    const blankFields = () => {\n        let status = true;\n        if (name.value === '') {\n            setName({\n                value: name.value,\n                status: 'error',\n                msg: 'name is required',\n            })\n            status = false;\n        }\n        if (walletAddress.value === '') {\n            setwalletAddress({\n                value: walletAddress.value,\n                status: 'error',\n                msg: 'walletAddress is required',\n            })\n            status = false;\n        }\n        if (emailId.value === '') {\n            setemailId({\n                value: emailId.value,\n                status: 'error',\n                msg: 'emailid is required',\n            })\n            status = false;\n        }\n        if (teleId.value === '') {\n            setteleId({\n                value: teleId.value,\n                status: 'error',\n                msg: 'telegram id is required',\n            })\n            status = false;\n        }\n        if (investmentAtPrivateSale.value === '') {\n            setinvestmentAtPrivateSale({\n                value: investmentAtPrivateSale.value,\n                status: 'error',\n                msg: 'Total Investment at private sale is required',\n            })\n            status = false;\n        }\n        if (tokenAllocated.value === '') {\n            settokenAllocated({\n                value: tokenAllocated.value,\n                status: 'error',\n                msg: 'Number of token allocated cannot is required',\n            })\n            status = false;\n        }\n        if (allocatedAtPrice.value === '') {\n            setallocatedAtPrice({\n                value: allocatedAtPrice.value,\n                status: 'error',\n                msg: 'Price at Token Allocated cannot is required',\n            })\n            status = false;\n        }\n        console.log('blankFields', status)\n        return status\n\n    }\n\n    const validateFields = () => {\n        let status = true;\n        if (!isAddress(walletAddress.value)) {\n            setwalletAddress({\n                value: walletAddress.value,\n                status: 'error',\n                msg: 'Invalid Wallet Address',\n            })\n            status = false;\n        }\n        if (!isEmailId(emailId.value)) {\n            setemailId({\n                value: emailId.value,\n                status: 'error',\n                msg: 'Invalid Email Id',\n            })\n            status = false;\n        }\n        if (investmentAtPrivateSale.value === '0') {\n            setinvestmentAtPrivateSale({\n                value: investmentAtPrivateSale.value,\n                status: 'error',\n                msg: 'Total Investment at private sale cannot be 0',\n            })\n            status = false;\n        }\n        if (tokenAllocated.value === '0') {\n            settokenAllocated({\n                value: tokenAllocated.value,\n                status: 'error',\n                msg: 'Number of token allocated cannot be 0',\n            })\n            status = false;\n        }\n        if (allocatedAtPrice.value === '0') {\n            setallocatedAtPrice({\n                value: allocatedAtPrice.value,\n                status: 'error',\n                msg: 'Price at Token Allocated cannot be 0',\n            })\n            status = false;\n        }\n        console.log('validateFields', status)\n        return status\n    }\n\n    const addInvestor = () => {\n        if (blankFields()) {\n            console.log('addInvestor blankFields', blankFields())\n            if (validateFields() && errorMsg === '') {\n                const body = {\n                    \"name\": name.value,\n                    \"email\": emailId.value,\n                    \"walletAddress\": walletAddress.value,\n                    \"tokenAllocated\": Number(tokenAllocated.value) || 0,\n                    \"allocatedAtPrice\": Number(allocatedAtPrice.value) || 0,\n                    \"telegramUsername\": teleId.value,\n                    \"investmentAtPrivateSale\": Number(investmentAtPrivateSale.value) || 0,\n\n                    \"currentBalance\": 0,\n                    \"tenMinutePriorBalance\": 0,\n                    \"countryCode\": 91,\n                    \"phoneNumber\": 7756885345,\n                    \"profitLoss\": 0,\n                    \"proftLossIndicator\": false,\n                    \"change\": 0,\n                }\n                setAddingInvestor(true)\n                console.log('addInvestor', validateFields(), errorMsg, body)\n                addNewInvestor(body)\n                    .then((data) => {\n                        console.log('addNewInvestor', data)\n                        if (data?.error) {\n                            alert(data?.error)\n                        } else {\n                            onSuccess();\n                        }\n                    })\n                    .catch((error) => {\n                        console.log('addNewInvestor error', error)\n                        alert('Internal Server Error, Try Again later')\n                    })\n                    .finally(() => {\n                        resetFields()\n                        setAddingInvestor(false)\n                    })\n            }\n        }\n    }\n\n    const onAllocatedAtPriceChange = (data: string) => {\n        if (Number(investmentAtPrivateSale.value) && Number(data)) {\n            const temp = Number(investmentAtPrivateSale.value) / Number(data)\n            settokenAllocated({\n                value: temp.toString(),\n                status: 'default',\n                msg: '',\n            })\n        } else {\n            settokenAllocated({\n                value: '0',\n                status: 'default',\n                msg: '',\n            })\n        }\n        setallocatedAtPrice({\n            value: data,\n            status: 'default',\n            msg: '',\n        });\n    }\n\n    const onTokenAllocatedChange = (data: string) => {\n        if (Number(investmentAtPrivateSale.value) && Number(data)) {\n            const temp = Number(investmentAtPrivateSale.value) / Number(data)\n            setallocatedAtPrice({\n                value: temp.toString(),\n                status: 'default',\n                msg: '',\n            });\n        } else {\n            setallocatedAtPrice({\n                value: '0',\n                status: 'default',\n                msg: '',\n            });\n        }\n        settokenAllocated({\n            value: data,\n            status: 'default',\n            msg: '',\n        })\n    }\n\n    const onTotalInvestmentChange = (data: string) => {\n        setallocatedAtPrice({\n            value: '',\n            status: 'default',\n            msg: '',\n        });\n        settokenAllocated({\n            value: '',\n            status: 'default',\n            msg: '',\n        })\n        setinvestmentAtPrivateSale({\n            value: data,\n            status: 'default',\n            msg: '',\n        })\n    }\n\n    return (\n        <CustomModal\n            closeButton\n            handleClose={() => {\n                resetFields()\n                onClose()\n            }}\n            open={openModal}\n            modalTitleStyle={{}}\n            modalContainerStyle={{}}\n            modalBodyStyle={{}}\n            title={`Add Investor`}\n        >\n            <section>\n                <CustomInputContainer\n                    ILabelValue={'Investor Name'}\n                    DefaultValue={'Eg: Elon Musk'}\n                    setText={(data) => setName({\n                        value: data,\n                        status: 'default',\n                        msg: '',\n                    })}\n                    value={name.value}\n                    Istate={name.status}\n                    Imsg={name.msg}\n\n                />\n                <CustomInputContainer\n                    ILabelValue={'Wallet Address'}\n                    DefaultValue={'Eg: 0xcab3e009Ff3d670.....75e81C8E4E2452606E8'}\n                    setText={(data) => setwalletAddress({\n                        value: data,\n                        status: 'default',\n                        msg: '',\n                    })}\n                    value={walletAddress.value}\n                    Istate={walletAddress.status}\n                    Imsg={walletAddress.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Email Id'}\n                    DefaultValue={'Eg: elonmusk@gmail.com'}\n                    setText={(data) => setemailId({\n                        value: data,\n                        status: 'default',\n                        msg: '',\n                    })}\n                    value={emailId.value}\n                    Istate={emailId.status}\n                    Imsg={emailId.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Telegram Id'}\n                    DefaultValue={'Eg:https://telegram.com/@<InvestorId>'}\n                    setText={(data) => setteleId({\n                        value: data,\n                        status: 'default',\n                        msg: '',\n                    })}\n                    value={teleId.value}\n                    Istate={teleId.status}\n                    Imsg={teleId.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Total Investment at private sale'}\n                    DefaultValue={'$ Some Dollars'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) onTotalInvestmentChange(data)\n                    }}\n                    value={investmentAtPrivateSale.value.toString()}\n                    Istate={investmentAtPrivateSale.status}\n                    Imsg={investmentAtPrivateSale.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Number of token allocated'}\n                    DefaultValue={'Some MAHA'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) onTokenAllocatedChange(data)\n                    }}\n                    value={tokenAllocated.value.toString()}\n                    Istate={tokenAllocated.status}\n                    Imsg={tokenAllocated.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Price at Token Allocated'}\n                    DefaultValue={'$ Some Dollars'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) onAllocatedAtPriceChange(data)\n                    }}\n                    value={allocatedAtPrice.value.toString()}\n                    Istate={allocatedAtPrice.status}\n                    Imsg={allocatedAtPrice.msg}\n                />\n            </section>\n            <section>\n                <TextWrapper\n                    text={errorMsg}\n                    Fcolor={theme.color.red[300]}\n                />\n            </section>\n            <section>\n                <Grid container spacing={2} style={{paddingTop: '12px'}}>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button\n                            variant={'transparent'}\n                            onClick={() => {\n                                resetFields()\n                                onClose()\n                            }}\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button\n                            onClick={() => addInvestor()}\n                            disabled={addingInvestor}\n                        >{addingInvestor? 'Adding Investor': 'Add Investor'}</Button>\n                    </Grid>\n                </Grid>\n            </section>\n        </CustomModal>\n    )\n}\n\nexport default AddInvestorModal;","import { createHashHistory } from 'history';\n\nexport const history = createHashHistory();","// @ts-nocheck\nimport * as _ from 'underscore';\n\nconst millify = (\n    uglyNumber: number | string,\n    decimalPoints: number,\n): string => {\n    // Make sure value is a number\n    const ugly = (num => {\n        if (typeof num !== 'number') {\n            throw new Error('Input value is not a number');\n        } else {\n            return parseFloat(String(num));\n        }\n    })(uglyNumber);\n\n    // Figure out how many digits in the integer\n    const digits = Math.floor(Math.log10(Math.abs(ugly))) + 1;\n\n    // Figure out the appropriate unit for the number\n    const units = ((num, zeroes) => {\n        let zeroes2 = zeroes;\n        const keys = _.keys(suffixes);\n        for (const z of keys) {\n            if (num > Number(z)) {\n                zeroes2 = Number(z);\n            }\n        }\n        return { suffix: suffixes[String(zeroes2)], zeroes: zeroes2 };\n\n    })(digits, 2);\n\n    const pretty = ugly / Math.pow(10, units.zeroes);\n\n    const decimal = pretty % 1 === 0 ? 2 : Math.max(1, decimalPoints + 1) || 3;\n\n    if (ugly > -1000 && ugly < 1000) {\n        return String(ugly);\n    }\n    return `${parseFloat(prettyNumber(pretty, decimal))}${units.suffix}`;\n};\n\n\nexport const formatDecimals = (passedNumber: number | string) => {\n    const formattedBalance = String(passedNumber)\n    const decimalsPointIndex = formattedBalance.indexOf('.');\n    if (decimalsPointIndex === -1) return formattedBalance;\n    return formattedBalance.slice(0, decimalsPointIndex) + '.' + formattedBalance.slice(decimalsPointIndex + 1, decimalsPointIndex + 1 + 3);\n}\n\nexport const prettyNumber = (value: number, decimals = 1) => {\n    // const getFormatDecimals = formatDecimals(value)\n    return Number(value).toLocaleString('en-US', {\n        maximumFractionDigits: decimals,\n    })\n}\n\n// @ts-nocheck\n\nconst suffixes: any = {\n    '3': 'K',\n    '12': 'T',\n    '6': 'M',\n    '9': 'B',\n};\n\nexport const prettify = (_num: number | string) => {\n    const num = Number(_num);\n\n    if (Math.abs(num) >= 10000) return millify(num, 2);\n    if (Math.abs(num) >= 1000) return millify(num, 2);\n\n    // if (Math.abs(num) >= 100) {\n    //   return num.toFixed(2);\n    // }\n    // if (Math.abs(num) >= 1) {\n    //   return num.toFixed(3);\n    // }\n    // if (Math.abs(num) >= 0.1) {\n    //   return num.toFixed(4);\n    // }\n\n    return Math.floor(num) || 0;\n}\n\nexport const truncateMiddle = function (\n    fullStr: string = '12345678922500025',\n    strLen: number,\n    separator?: string,\n) {\n    if (fullStr.length <= strLen) return fullStr;\n\n    separator = separator || '...';\n\n    var sepLen = separator.length,\n        charsToShow = strLen - sepLen,\n        frontChars = Math.ceil(charsToShow / 3),\n        backChars = Math.floor(charsToShow / 3);\n\n    return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n","export default __webpack_public_path__ + \"static/media/Download.193851c9.svg\";","import React, {useEffect, useState} from \"react\";\n\nimport CustomModal from \"../../CustomModal\";\nimport TextWrapper from \"../../TextWrapper\";\nimport Loader from 'react-spinners/BeatLoader';\nimport {importInvestorsData} from \"../../../_helpers/serverApi\";\n\ninterface IPorps {\n    openModal: boolean;\n    onClose: () => void;\n    onSuccess: () => void;\n    data: any;\n}\n\nconst UploadingModal = (props: IPorps) => {\n    const {openModal, onSuccess, onClose, data} = props\n\n    const [UploadingData, setUploadingData] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (openModal) {\n            importInvestorsData(data)\n                .then((data) => {\n                    console.log('importInvestorsData', data);\n                    if (data?.success) {\n                        onSuccess()\n                    }\n                    if (data?.error) {\n                        alert('Something went wrong');\n                    }\n                })\n                .catch((error) => {\n                    console.log('error importInvestorsData', error);\n                    alert('Internal Server Error');\n                })\n                .finally(() => {\n                })\n        }\n    }, [openModal])\n\n    return (\n        <CustomModal\n            handleClose={() => {}}\n            open={openModal}\n            modalTitleStyle={{}}\n            modalContainerStyle={{}}\n            modalBodyStyle={{}}\n            title={`Import Investors by CSV`}\n        >\n            <div className=\"text-center\">\n                <Loader color={'#ffffff'} loading={true} size={12} margin={2} />\n                <TextWrapper\n                    text={`Please wait few minutes while file is uploading.`}\n                    Fmargin={'12px 0 0 0'}\n                />\n            </div>\n        </CustomModal>\n    )\n}\n\nexport default UploadingModal;","export default __webpack_public_path__ + \"static/media/Success.44a6546b.svg\";","import React from 'react';\nimport CustomModal from '../CustomModal';\nimport styled, { keyframes } from 'styled-components';\nimport Tick from '../../assets/icons/Success.svg';\nimport Close from '../../assets/icons/Close.svg';\nimport Button from '../Button';\n\nexport interface InputProps {\n    modalOpen: boolean;\n    setModalOpen: () => void;\n\n    //title\n    title: string;\n\n    //Subtitle props\n    subTitle?: string;\n    subTitleLink?: string; /* if want to redirect to other website only */\n\n    //test below title and above subtitle\n    subsubTitle?: string;\n\n    //Buttons Props\n    buttonText?: string;\n    buttonType?: 'default' | 'transparent' | 'outlined' | 'rounded';\n    buttonHref?: string; /* if want to redirect button to other website */\n    buttonTo?: string; /* if want to redirect to other page */\n}\n\nconst CustomSuccessModal: React.FC<InputProps> = (props) => {\n    const { modalOpen, setModalOpen, title, subTitle, subTitleLink, buttonText, subsubTitle, buttonType = 'transparent', buttonHref, buttonTo } = props;\n\n    let buttonRedirection: object;\n\n    if (buttonHref) {\n        buttonRedirection = {\n            href: buttonHref\n        }\n    } else if (buttonTo) {\n        buttonRedirection = {\n            to: buttonTo\n        }\n    } else {\n        buttonRedirection = {}\n    }\n\n    return (\n        <CustomModal\n            closeButton\n            handleClose={() => setModalOpen()}\n            open={modalOpen}\n            modalTitleStyle={{}}\n            modalContainerStyle={{}}\n            modalBodyStyle={{}}>\n            <MainContainer>\n                <CloseButton src={Close} height={20} onClick={() => setModalOpen()} />\n                <TickContainer>\n                    <TickBackgroundWave />\n                    <TickImg src={Tick} height={100} />\n                </TickContainer>\n                <ContentConatiner>\n                    <ContentTitle>\n                        {title}\n                    </ContentTitle>\n                    <ContentSubSubtitle>\n                        {subsubTitle}\n                    </ContentSubSubtitle>\n                    <ContentSubtitle href={subTitleLink} target={\"__blank\"}>\n                        {subTitle}\n                    </ContentSubtitle>\n                </ContentConatiner>\n                {buttonText && <Button text={buttonText} size={'lg'} variant={buttonType} onClick={() => setModalOpen()} {...buttonRedirection} />}\n            </MainContainer>\n\n        </CustomModal>\n    );\n}\n\nexport default CustomSuccessModal;\n\nconst TickAnimation = keyframes`\n  0%   {transform: scale(0)}\n  60%  {transform: scale(1.4)}\n  100% {transform: scale(1)}\n`;\n\nconst TickBackground = keyframes`\n  from {\n    transform: scale(0);\n    background: #20C97450;\n  }\n  to {\n    transform: scale(1);\n    background: #20C97400;\n  }\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  right: 32px;\n  top: 32px;\n  cursor: pointer;\n`\n\nconst MainContainer = styled.div`\n`\n\nconst TickContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  margin-bottom: 24px;\n  position: relative;\n`\n\nconst TickImg = styled.img`\n  animation: ${TickAnimation} 0.5s linear;\n  z-index: 1;\n`\n\nconst TickBackgroundWave = styled.div`\n  width: 300px;\n  height: 300px;\n  border-radius: 50%;\n  background: transparent;\n  position: absolute;\n  z-index: 0;\n  animation: ${TickBackground} 1s linear;\n`\n\nconst ContentConatiner = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`\nconst ContentTitle = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  color: rgba(255, 255, 255);\n  margin: 0 0 10px;\n`\n\nconst ContentSubtitle = styled.a`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 14px;\n  line-height: 140%;\n  text-align: center;\n  color: #F7653B;\n  margin: 0;\n  cursor: pointer;\n  &:hover {\n    color: #F7653B;\n  }\n`\n\nconst ContentSubSubtitle = styled.p`\n  /* Text-BodySmall */\n\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 14px;\n  line-height: 140%;\n  text-align: center;\n  color: rgba(255, 255, 255, 0.88);\n  margin-bottom: 4px;\n\n`\n\n\n\n","import downloadIcon from \"../../assets/icons/Download.svg\";\nimport React, {useState} from \"react\";\nimport UploadingModal from \"./modal/UploadingModal\";\nimport CustomSuccessModal from \"../CustomSuccessModal\";\n\ninterface Iprops {\n    type: 'investors'\n}\n\nconst ImportCSV = (props: Iprops) => {\n    const {type} = props;\n\n    const [selectedFile, setSelectedFile] = useState<any>(null);\n    const [uploadFileModal, setUploadFileModal] = useState<boolean>(false)\n    const [successModal, setSuccessModal] = useState<boolean>(false);\n\n    const hiddenFileInput = React.useRef(null);\n\n    const handleClick = () => {\n        //@ts-ignore\n        hiddenFileInput?.current?.click();\n    };\n\n    const handleChange = async (event: any) => {\n        const fileUploaded = event.target.files[0];\n\n        const formData = await new FormData();\n        await formData.append(\n            \"file\",\n            fileUploaded,\n        );\n\n        console.log('formData', formData, fileUploaded)\n        setSelectedFile(formData);\n        setTimeout(() => {\n            setUploadFileModal(true)\n        }, 1000)\n    };\n\n    const sendCsv = () => {\n        const formData = new FormData();\n        formData.append(\n            \"file\",\n            selectedFile,\n            selectedFile.name\n        );\n\n    }\n\n    return (\n        <>\n            <div onClick={() => handleClick()} className=\"single-line-center-start pointer\">\n                Import Excel\n                <img src={downloadIcon} alt={'download'} height={18} className=\"marginL04 \"/>\n                <input\n                    type=\"file\"\n                    ref={hiddenFileInput}\n                    onChange={handleChange}\n                    style={{display: 'none'}}\n                    accept='.xls, .xlsx'\n                />\n            </div>\n                <UploadingModal\n                    openModal={uploadFileModal}\n                    onClose={() => setUploadFileModal(false)}\n                    onSuccess={() => {\n                        setUploadFileModal(false)\n                        setSuccessModal(true)\n                    }}\n                    data={selectedFile}\n                />\n                <CustomSuccessModal\n                    modalOpen={successModal}\n                    setModalOpen={() => {\n                        window.location.reload();\n                        setSuccessModal(false)\n                    }}\n                    title={'Your file is uploaded you can now track your investors investments'}\n                />\n            </>\n    )\n}\n\nexport default ImportCSV;","import * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport downloadIcon from '../../assets/icons/Download.svg'\n\ninterface Iprops {\n    csvData: any;\n    fileName: any;\n}\n\nexport const ExportCSV = (props: Iprops) => {\n    const {csvData, fileName} = props;\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    const exportToCSV = () => {\n        const ws = XLSX.utils.json_to_sheet(csvData);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    return (\n        <div onClick={() => exportToCSV()} className=\"single-line-center-start pointer\">\n            Excel Export\n            <img src={downloadIcon} alt={'download'} height={18} className=\"marginL04 \"/>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport '../../../customCss/Custom-Mahadao-Data-Table.css'\nimport messageIcon from \"../../../assets/icons/Message.svg\";\nimport {history} from \"../../../_helpers/history\";\nimport {prettyNumber} from \"../../../_helpers/formattingNumbers\";\nimport theme from \"../../../theme\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport ImportCSV from \"../../../components/ImportCSV\";\nimport {ExportCSV} from \"../../../components/ExportCSV\";\n\n\nexport function SortedDescendingIcon() {\n    return <ArrowDropUpIcon className=\"icon\" style={{color: 'white'}}/>;\n  }\n  \nexport function SortedAscendingIcon() {\n    return <ArrowDropDownIcon className=\"icon\" style={{color: 'white'}}/>;\n}\n\nfunction CustomToolbar() {\n    return (\n        <GridToolbarContainer>\n            <GridToolbarExport />\n        </GridToolbarContainer>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        '& .super-app-theme--header': {\n            cursor: 'pointer',\n        },\n        '& .super-app.negative': {\n            color: theme.color.red[300],\n            fontWeight: '600',\n        },\n        '& .super-app.positive': {\n            color: theme.color.green[300],\n            fontWeight: '600',\n        },\n        '& .super-app.loss': {\n            color: theme.color.red[300],\n            fontWeight: '600',\n        },\n        '& .super-app.profit': {\n            color: theme.color.green[300],\n            fontWeight: '600',\n        },\n    },\n    gridStyle: {\n        color: 'white'\n    }\n});\n\ninterface IProps {\n    data: []\n}\n\nconst DataTable = (props: IProps) => {\n    const {data = []} = props\n\n    const classes = useStyles();\n\n    const columns = [\n        {\n            field: 'investorRanking', headerName: 'Rank', flex: 0.05, sortable: true,\n        },\n        {\n            field: 'investor', headerName: 'INVESTORS', flex: 0.2, sortable: true,\n            cellClassName: 'fontWeight300'\n        },\n        { field: 'allocatedPercentage', headerName: 'ALLOCATED', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return `${prettyNumber(params.row.tokenAllocated)} (${prettyNumber(params.value, 2)}%)`\n            })\n        },\n        {\n            field: 'currentBalance', headerName: 'WALLET BALANCE ', flex: 0.15, sortable:true,\n            renderCell: ((params: any) => {\n                return prettyNumber(params.value)\n            })\n        },\n\n        {\n            field: 'tokenSold', headerName: 'Token Sold', flex: 0.15, sortable: true,\n            cellClassName: (params: any) => clsx('super-app', {\n                negative: true,\n            }),\n            renderCell: ((params: any) => {\n                return prettyNumber(params.value)\n            })\n\n        },\n        {\n            field: 'profitLoss', headerName: 'PROFIT/LOSS', flex: 0.15, sortable: true,\n            cellClassName: (params: any) => clsx('super-app', {\n                negative: !params.row.profitLossIndicator,\n                positive: params.row.profitLossIndicator,\n            }),\n            renderCell: ((params: any) => {\n                return prettyNumber(params.value)\n            })\n            // cellClassName: (params: any) => clsx('super-app', {\n            //     loss: parseFloat(params.value) < 0,\n            //     profit: parseFloat(params.value) > 0,\n            // }),\n            // valueFormatter: (params : any) => {\n            //     return `$ ${parseFloat(params.value)}`\n            // }\n        },\n        { field: 'changePercentage', headerName: 'CHANGE', flex: 0.1, sortable: true,\n            cellClassName: (params: any) => clsx('super-app', {\n                negative: true,\n            }),\n            renderCell: ((params: any) => {\n                return `${prettyNumber(params.value)} %`\n            })\n        },\n        // { field: 'mail', headerName: ' ', flex: 0.1, sortable: false,\n        //     renderCell: (params: any) => (\n        //     <div style={{textAlign: 'center'}} className=\"w-100\">\n        //         <img src={messageIcon} alt={'icon'} height={20} className=\"pointer\"/>\n        //     </div>),\n        // }\n    ];\n\n    const [rows, setRows] = useState<number>(10);\n\n    return (\n        <div>\n\n            <div className={classes.root} style={{position: 'relative'}}>\n                <div className=\"viewAll\" onClick={() => setRows(data.length)}>\n                    <TextWrapper text={'View All'}/>\n                </div>\n                <DataGrid className={classes.gridStyle}\n                    getRowId={(rows) => {\n                        return rows.id\n                    }}\n                    rows={data}\n                    columns={columns}\n                    pageSize={rows}\n                    disableMultipleSelection={true}\n                    // onRowClick={(newSelection) => {\n                    //     const win = window.open(`${newSelection.row.videoUrl}`, \"_blank\");\n                    //     win.focus()\n                    // }}\n                    onCellClick={async (params) => {\n                        if (params.field === 'investor') {\n                            history.push(`/investor-profile/${params.row.walletAddress}`)\n                            history.go(0)\n\n                        }\n                    }}\n                    autoHeight={true}\n                    disableColumnMenu={true}\n                    components={{\n                        ColumnSortedDescendingIcon: SortedDescendingIcon,\n                        ColumnSortedAscendingIcon: SortedAscendingIcon,\n                    }}\n                  disableColumnSelector={true}\n                  disableSelectionOnClick={true}\n                />\n            </div>\n            <div className=\"marginT16 single-line-center-end\">\n                <div className=\"marginR12\">\n                    <ImportCSV type={'investors'}/>\n                </div>\n                <ExportCSV csvData={data} fileName={'test'}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default DataTable\n","export default __webpack_public_path__ + \"static/media/Search.09f0359d.svg\";","import React, {CSSProperties, useEffect, useState} from \"react\";\nimport {InputBase} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nimport searchIcon from '../../assets/icons/Search.svg';\nimport themee from \"../../theme\";\n\ntype props = {\n    ILabelValue: string;\n    value: string;\n    DefaultValue: string;\n    disabled?: boolean;\n    setText: (val: string) => void;\n    inputMode?: 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n    DisableMsg?: string;\n\n    Istate?: 'default' | 'error';\n    Imsg?: string;\n    IWarningstate?: 'default' | 'warning';\n    warningMsg?: string;\n    errorCallback?: (flag: boolean) => void;\n};\n\ninterface ICStatesInterface {\n    IState: 'default' | 'error' | 'warning';\n    IMsg: string;\n}\n\nconst SearchBar: React.FC<props> = (props) => {\n    const {\n        ILabelValue,\n        DefaultValue,\n        disabled = false,\n        Istate = 'default',\n        Imsg = '',\n        DisableMsg = '',\n        IWarningstate = 'default',\n        warningMsg = '',\n    } = props;\n\n    const [ICStates, setICStates] = useState<ICStatesInterface>({ IState: Istate, IMsg: Imsg });\n    const [ICWarningStates, setICWarningStates] = useState<ICStatesInterface>({ IState: IWarningstate, IMsg: warningMsg });\n\n    //For ref not to be removed\n    /* const temp: ICStatesInterface = {\n         IState: 'error',\n         IMsg: 'Amount cannot be more than your balance.',\n     };\n     setICStates(temp);\n     props.errorCallback(true);*/\n\n    useEffect(() => {\n        let temp = { IState: Istate, IMsg: Imsg };\n        setICStates(temp);\n    }, [Istate, Imsg]);\n\n\n    const IConatinerStyle = () => {\n        let returnObj: CSSProperties = {}\n        if (DisableMsg !== \"\") {\n            returnObj['opacity'] = \"0.32\";\n        }\n        return returnObj;\n    }\n\n    const onValueChange = (value: string) => {\n        props.setText(value);\n    }\n\n    return (\n        <div style={{ position: 'relative' }}>\n            {DisableMsg !== '' && <TotalDisable><DMsg>{DisableMsg}</DMsg></TotalDisable>}\n            <IConatiner style={IConatinerStyle()}>\n                {ILabelValue !== '' &&\n                (<ILabelContainer>\n                    <ILabelLeft>\n                        <ILabel>{ILabelValue}</ILabel>\n                    </ILabelLeft>\n                </ILabelContainer>)\n                }\n                <IFieldConatiner className={`input-${ICStates.IState}`}>\n                    <img src={searchIcon} alt={'search'} className=\"marginR12\"/>\n                    <InputBase\n                        inputMode={props?.inputMode}\n                        placeholder={DefaultValue}\n                        value={props.value}\n                        inputProps={{ 'aria-label': 'naked' }}\n                        style={{\n                            padding: '0',\n                            fontFamily: 'Inter',\n                            fontStyle: 'normal',\n                            fontWeight: 'bold',\n                            fontSize: '14px',\n                            color: themee.color.transparent[\"200\"],\n                            flex: 1,\n                        }}\n                        disabled={disabled}\n                        type={'string'}\n                        onChange={(event) => onValueChange(event.target.value)}\n                    />\n                </IFieldConatiner>\n                {ICStates.IMsg !== '' && (\n                    <p className={`input-font-${ICStates.IState}`}>{ICStates.IMsg}</p>\n                )}\n                {ICWarningStates.IMsg !== '' && (\n                    <p className={`input-font-warning`}>{ICWarningStates.IMsg}</p>\n                )}\n            </IConatiner>\n        </div>\n    );\n};\n\nexport default SearchBar;\n\nconst TotalDisable = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.16);\n  box-sizing: border-box;\n  border-radius: 12px;\n  z-index: 12;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #FFFFFF29;\n`;\n\nconst DMsg = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  color: #FFFFFF;\n  margin-bottom: 0;\n`\n\nconst IConatiner = styled.div`\n  background: rgba(255, 255, 255, 0.08);\n  border-radius: 8px;\n  padding: 0;\n  margin-bottom: 0;\n`;\nconst ILabelContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 12px;\n`;\nconst ILabelLeft = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst ILabel = styled.p`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 20px;\n  color: rgba(255, 255, 255, 0.64);\n  margin-bottom: 0;\n`;\n\nconst IFieldConatiner = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: ${themee.color.dark[300]};\n  border-radius: 6px;\n  max-height: 44px;\n  padding: 8px 12px;\n`;\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/Plus.9c6df0aa.svg\";","import React, {useEffect, useMemo, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\n\nimport AddInvestorModal from \"../modal/AddInvestorModal\";\nimport DataTable from \"./DataTable\";\nimport FilterSelection from \"./FilterSelection\";\nimport Button from \"../../../components/Button\";\nimport SearchBar from \"../../../components/SearchBar\";\n\nimport plus from '../../../assets/icons/Plus.svg';\nimport {getAllInvestorsData} from \"../../../_helpers/serverApi\";\nimport {prettyNumber} from \"../../../_helpers/formattingNumbers\";\n\ninterface IIndiviualInvestor {\n    allocatedAtPrice: number,\n    allocatedPercentage: number,\n    change: number,\n    changePercentage: number,\n    currentBalance: number,\n    email: string,\n    id: string,\n    investmentAtPrivateSale: number\n    investor: string\n    investorRanking: number\n    profitLoss: number\n    profitLossIndicator: true\n    telegramUsername: string\n    tokenAllocated: number\n    tokenSold: number\n    transfers: number\n    walletAddress: string\n}\n\nconst TableConatiner = () => {\n    const [addInvestor, setAddInvestor] = useState<boolean>(false);\n\n    const [selectedFilter, setSelectedFilter] = useState<'All' | 'Dumpers' | 'Holders'>('All')\n    const [searchText, setSearchText] = useState<string>('');\n    const [refreshData, setRefreshData] = useState<boolean>(true);\n\n    const [data, setData] = useState<any>([])\n\n    useEffect(() => {\n        if (refreshData) {\n            getAllInvestorsData()\n                .then((d: { investors: any }) => {\n                    console.log('getAllInvestorsData', d.investors);\n                    setData(d.investors)\n                    setRefreshData(false)\n                })\n                .catch((error) => {\n                    console.log('getAllInvestorsData error', error);\n                })\n        }\n    }, [refreshData])\n\n\n    const filteredDataTemp = useMemo(() => {\n        if (searchText === \"\") return data\n        else {\n            return data.filter((d: any) => {\n                return (\n                    d.investor.toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.allocatedPercentage).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.currentBalance).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.tokenSold).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    d.profitLoss.toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.change).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.allocatedMAHA).toString().toLowerCase().includes(searchText.toLowerCase())\n                )})\n        }\n    }, [searchText, data])\n\n    return (\n        <MainTableContainer>\n            <AddInvestorModal\n                openModal={addInvestor}\n                onClose={() => setAddInvestor(false)}\n                onSuccess={() => {\n                    setRefreshData(true)\n                    setAddInvestor(false)\n                }}\n            />\n            <section className=\"marginB16\">\n                <Grid container spacing={2}>\n                    <Grid item lg={5} xl={5} md={5} sm={12} xs={12}>\n                        {/*<FilterSelection*/}\n                        {/*    selectedFilter={selectedFilter}*/}\n                        {/*    onChange={(data) => setSelectedFilter(data)}*/}\n                        {/*/>*/}\n                    </Grid>\n                    <Grid item lg={1} xl={1} md={1} sm={12} xs={12}>\n                    </Grid>\n                    <Grid item lg={4} xl={4} md={4} sm={12} xs={12}>\n                        <SearchBar\n                            ILabelValue={''}\n                            value={searchText}\n                            DefaultValue={'Search by Investor name, Address, Balance, etc.'}\n                            setText={(val) => setSearchText(val)}\n                            />\n                    </Grid>\n                    <Grid item lg={2} xl={2} md={2} sm={12} xs={12}>\n                        <Button onClick={() => setAddInvestor(true)} variant={'outlined'} size={\"sm\"}>\n                            <div className=\"single-line\">\n                                <img src={plus} alt={'plus'}/>\n                                <div style={{marginLeft: '5px'}}>Add Investor</div>\n                            </div>\n                        </Button>\n                    </Grid>\n                </Grid>\n            </section>\n\n            <DataTable\n                data={filteredDataTemp}\n            />\n        </MainTableContainer>\n    )\n}\n\nexport default TableConatiner\n\nconst MainTableContainer = styled.div`\n  margin-bottom: 40px;\n`","import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell } from 'recharts';\nimport theme from \"../../theme\";\n\ninterface IProps {\n    balances: {\n        name: string;\n        amount: number;\n        percentage: number;\n    }[];\n}\n\nconst colorList = [theme.color.primary[100],\n    theme.color.primary[300],\n    theme.color.primary[500]\n]\n\nexport default class CustomPieChart extends PureComponent<IProps> {\n    render() {\n        const data = this.props.balances.map((b, i) => {\n            return ({\n                name: b.name,\n                value: b.percentage,\n                color: colorList[i],\n            })\n        });\n\n        return (\n            <PieChart width={160} height={160}>\n                <Pie\n                    data={data}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    innerRadius={60}\n                    outerRadius={80}\n                    fill=\"#82ca9d\"\n                >\n                    {\n                        data.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={entry.color} stroke={entry.color} />\n                        ))\n                    }\n                </Pie>\n            </PieChart>\n        );\n    }\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\nimport CustomPieChart from \"../../../components/Piechart\";\nimport {Grid} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {IAllocationSummaryData} from \"../index\";\nimport {prettify, prettyNumber} from \"../../../_helpers/formattingNumbers\";\nimport {callApiToOtherHost} from \"../../../_helpers/apicaller\";\n\nconst dummy = [{\n    name: 'USDC',\n    amount: 100,\n    percentage: 50,\n},{\n    name: 'USDT',\n    amount: 1000,\n    percentage: 50,\n},\n]\n\ninterface IAllocationOverview {\n    data: IAllocationSummaryData\n}\n\nexport const colorList = [theme.color.primary[500],\n    theme.color.primary[400],\n    theme.color.primary[300],\n    theme.color.primary[200],\n    theme.color.primary[100]\n]\n\nconst AllocationOverview = (props: IAllocationOverview) => {\n    const { data } = props;\n\n    const [mahaPriceUsd, setMahaPriceUsd] = useState<number>(0);\n\n    useEffect(() => {\n        callApiToOtherHost('https://api.coingecko.com/api/v3/simple/price?ids=mahadao&vs_currencies=usd')\n            .then((data: any) => {\n                console.log('MAHA price', data?.mahadao?.usd);\n                setMahaPriceUsd(data?.mahadao?.usd);\n            })\n    }, [])\n\n    const dataTotal = data.totalTokenSold + data.tokenAllocated + data.totalWalletBalance\n\n    const calculatedData = [{\n        name: 'Total Tokens allocated',\n        amount: data.tokenAllocated,\n        amountInUsd: data.totalTokensAllocatedPrice,\n        percentage: data.tokenAllocated/dataTotal,\n        color: colorList[4],\n    },{\n        name: 'Total Wallet Balance',\n        amount: data.totalWalletBalance,\n        amountInUsd: data.totalWalletBalancePrice,\n        percentage:  data.totalWalletBalance/dataTotal,\n        color: colorList[2],\n    },{\n        name: 'Total Tokens Sold',\n        amount: data.totalTokenSold,\n        amountInUsd: data.totalTokenSoldPrice,\n        percentage:  data.totalTokenSold/dataTotal,\n        color: colorList[0],\n    },\n    ]\n\n    return (\n        <div className=\"custom-mahadao-material2\">\n            <div className=\"single-line-center-start marginB16\">\n                <TextWrapper\n                    text={'Investor Allocation Overview'}\n                    fontSize={16}\n                    Fcolor={theme.color.transparent[200]}\n                />\n            </div>\n            <div className=\"single-line-center-between\">\n                <Grid container>\n                    <Grid item lg={12} md={12} sm={6} xs={12}>\n                        <CustomPieChart\n                            balances={calculatedData}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item lg={12} md={12} sm={6} xs={12}>\n                        {calculatedData.map((data) => {\n                            return (\n                                <div className=\"single-line-center-start marginB16\">\n                                    <Indicator color={data.color}/>\n                                    <div className=\"marginL12\">\n                                        <div className=\"single-line-baseline-start\">\n                                            <TextWrapper\n                                                text={`${prettyNumber(data.amount).toString()} MAHA`}\n                                                fontWeight={600}\n                                                fontSize={16}\n                                            />\n                                            <TextWrapper\n                                                text={`($${prettyNumber(data.amountInUsd).toString()})`}\n                                                fontSize={16}\n                                                Fcolor={theme.color.transparent[200]}\n                                            />\n                                        </div>\n                                        <TextWrapper\n                                            text={data.name}\n                                            fontSize={12}\n                                            Fcolor={theme.color.transparent[200]}\n                                        />\n                                    </div>\n                                </div>\n                            )})\n                        }\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default AllocationOverview;\n\nconst Indicator = styled.div<{color: string}>`\n  height: 14px;\n  width: 14px;\n  background: ${(props) => props.color};\n  border-radius: 50%;\n`\n\n\n\n\n","import styled from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\n\nimport PageHeader from \"../../components/PageHeader\";\nimport InfoBox from \"./components/InfoBox\";\nimport TableConatiner from \"./components/TableConatiner\";\nimport AllocationOverview from \"./components/AllocationOverview\";\nimport {useEffect, useState} from \"react\";\nimport {getAllocationSummary} from \"../../_helpers/serverApi\";\nimport {prettyNumber} from \"../../_helpers/formattingNumbers\";\n\nexport interface IAllocationSummaryData {\n    \"investorsCount\": number,\n    \"totalInvestment\": number,\n    \"currentValue\": number,\n    \"investorProfit\": number,\n    \"investorProfitPercentage\": number,\n    \"tokenAllocated\": number,\n    \"totalTokensAllocatedPrice\": number,\n    \"totalTokenSold\": number,\n    \"totalTokenSoldPrice\": number,\n    \"totalWalletBalance\": number,\n    \"totalWalletBalancePrice\": number\n}\n\nconst InitAllocationSummaryData = {\n    \"investorsCount\": 0,\n    \"totalInvestment\": 0,\n    \"currentValue\": 0,\n    \"investorProfit\": 0,\n    \"investorProfitPercentage\": 0,\n    \"tokenAllocated\": 0,\n    \"totalTokensAllocatedPrice\": 0,\n    \"totalTokenSold\": 0,\n    \"totalTokenSoldPrice\": 0,\n    \"totalWalletBalance\": 0,\n    \"totalWalletBalancePrice\": 0\n}\n\nconst Dashboard = () => {\n    const [allocationSummaryData , setAllocationSummaryData] = useState<IAllocationSummaryData>(InitAllocationSummaryData);\n\n    useEffect(() => {\n        getAllocationSummary()\n            .then((data: IAllocationSummaryData) => {\n                console.log('getAllocationSummary', data)\n                setAllocationSummaryData(data);\n            })\n            .catch((error) => {\n                console.log('getAllocationSummary error', error)\n            })\n    }, [])\n\n\n    return (\n        <Page>\n            <PageHeader text={'MahaDAO Investors Tracker'}/>\n            <div className=\"custom-container\">\n                <section className=\"marginB16\">\n                    <Grid container spacing={2}>\n                        <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                            <AllocationOverview\n                                data={allocationSummaryData}\n                            />\n                        </Grid>\n                        <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                            <InfoBox\n                                data1={{\n                                    title: 'Active Investors',\n                                    value: `${prettyNumber(allocationSummaryData.investorsCount)}`,\n                                    percent: '',\n                                    status: 'positive'\n                                }}\n                                data2={{\n                                    title: 'Total Investment',\n                                    value: `$${prettyNumber(allocationSummaryData.totalInvestment)}`,\n                                    percent: '',\n                                    status: 'positive',\n                                }}\n                                data3={{\n                                    title: 'Allocated Current Value',\n                                    value: `$${prettyNumber(allocationSummaryData.currentValue)}`,\n                                    percent: '',\n                                    status: 'positive'\n                                }}\n                                data4={{\n                                    title: 'Total Investor Earnings',\n                                    value: `$${prettyNumber(Math.abs(allocationSummaryData.investorProfit))}`,\n                                    percent: '',\n                                    status: 'positive'\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </section>\n                <section className=\"page-height\">\n                    <TableConatiner/>\n                </section>\n            </div>\n        </Page>\n    )\n}\n\nexport default Dashboard;\n\nexport const Page = styled.div`\n  margin-top: 80px;\n  min-height: calc(100vh - 80px);\n`\n\n","export default __webpack_public_path__ + \"static/media/avatar.82f61dd2.svg\";","export default __webpack_public_path__ + \"static/media/Message.b82d6d8e.svg\";","export default __webpack_public_path__ + \"static/media/Edit.203110ab.svg\";","export default __webpack_public_path__ + \"static/media/Delete.c2ed0240.svg\";","export default __webpack_public_path__ + \"static/media/LeftArrowIcon.b7d38792.svg\";","export default __webpack_public_path__ + \"static/media/Graph.92488185.svg\";","import React, {useEffect, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\n\nimport CustomPieChart from \"../../../../components/Piechart\";\nimport theme from \"../../../../theme\";\nimport TextWrapper from \"../../../../components/TextWrapper\";\nimport styled from \"styled-components\";\nimport {prettyNumber} from \"../../../../_helpers/formattingNumbers\";\nimport {colorList} from \"../../../Dashboard/components/AllocationOverview\";\nimport {callApiToOtherHost} from \"../../../../_helpers/apicaller\";\n\ninterface IProps {\n    balances: {\n        name: string;\n        amount: number;\n        percentage: number;\n        amountInUsd: number,\n        color: string,\n    }[];\n}\n\nconst PieRepresentation = (props: IProps) => {\n    const {balances} = props;\n\n    const pieData = balances.map((b, i) => {\n        return ({\n            name: b.name,\n            amount: b.amount,\n            percentage: b.percentage,\n        })\n    });\n\n    const [mahaPriceUsd, setMahaPriceUsd] = useState<number>(0);\n\n    useEffect(() => {\n        callApiToOtherHost('https://api.coingecko.com/api/v3/simple/price?ids=mahadao&vs_currencies=usd')\n            .then((data: any) => {\n                console.log('MAHA price', data?.mahadao?.usd);\n                setMahaPriceUsd(data?.mahadao?.usd);\n            })\n    }, [])\n\n    return (\n        <div className=\"single-line-center-between\">\n            <Grid container>\n                <Grid item lg={12} md={12} sm={6} xs={12}>\n                    <CustomPieChart\n                        balances={pieData}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item lg={12} md={12} sm={6} xs={12}>\n                    {balances.map((data) => {\n                        return (\n                            <div className=\"single-line-center-start marginB16\">\n                                <Indicator color={data.color}/>\n                                <div className=\"marginL12\">\n                                    <div className=\"single-line-baseline-start\">\n                                        <TextWrapper\n                                            text={`${prettyNumber(data.amount).toString()} MAHA`}\n                                            fontWeight={600}\n                                            fontSize={16}\n                                        />\n                                        <TextWrapper\n                                            text={`($${prettyNumber(data.amount * mahaPriceUsd).toString()})`}\n                                            fontSize={16}\n                                            Fcolor={theme.color.transparent[200]}\n                                        />\n                                    </div>\n                                    <TextWrapper\n                                        text={data.name}\n                                        fontSize={12}\n                                        Fcolor={theme.color.transparent[200]}\n                                    />\n                                </div>\n                            </div>\n                        )})\n                    }\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default PieRepresentation;\n\nconst Indicator = styled.div<{color: string}>`\n  height: 14px;\n  width: 14px;\n  background: ${(props) => props.color};\n  border-radius: 50%;\n`","import TextWrapper from \"../../../../components/TextWrapper\";\nimport theme from \"../../../../theme\";\nimport React from \"react\";\nimport {prettyNumber} from \"../../../../_helpers/formattingNumbers\";\nimport {IParticularInvestor} from \"../../index\";\nimport CustomToolTip from \"../../../../components/CustomTooltip\";\n\ninterface Iprops {\n    data: { data: IParticularInvestor }\n}\n\nconst LineFormatRepresentation = (props: Iprops) => {\n    const {data} = props\n    return (\n        <div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Number of Token allocated'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={`${prettyNumber(data.data.tokenAllocated)} MAHA`}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={`($${prettyNumber(data.data.allocatedAtPrice)})`}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[200]}\n                    />\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Current Wallet Balance'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={`${prettyNumber(data.data.currentBalance)} MAHA`}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    <TextWrapper\n                        text={`($${prettyNumber(data.data.currentBalancePrice)})`}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[200]}\n                    />\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'No of Tokens Sold'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                    <CustomToolTip toolTipText=\"Note - This is Inclusive of the amount of tokens bought/ transferred apart from the initial allocation of tokens during pre-sale\"/>\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={`${prettyNumber(data.data.tokenSold)} MAHA`}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    {/*<TextWrapper\n                        text={`-${prettyNumber(data.data.changePercentage)}%`}\n                        fontSize={12}\n                        Fcolor={theme.color.red[\"300\"]}\n                        Fmargin={'0 0 0 4px'}\n                    />*/}\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Total Investor Earning'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-baseline-start\">\n                    <TextWrapper\n                        text={`$ ${prettyNumber(data.data.profitLoss)}`}\n                        fontWeight={600}\n                        fontSize={18}\n                    />\n                    {data.data.profitLossPercentage !== 0 &&\n                        (data.data.profitLossIndicator?\n                            (<TextWrapper\n                                text={`+${prettyNumber(data.data.profitLossPercentage)}`}\n                                fontSize={12}\n                                Fcolor={theme.color.green[\"300\"]}\n                                Fmargin={'0 0 0 4px'}\n                            />):\n                            (<TextWrapper\n                                text={`-${prettyNumber(data.data.profitLossPercentage)}%`}\n                                fontSize={12}\n                                Fcolor={theme.color.red[\"300\"]}\n                                Fmargin={'0 0 0 4px'}\n                            />))\n                    }\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default LineFormatRepresentation;","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\n\nimport theme from \"../../../../theme\";\nimport leftIcon from \"../../../../assets/icons/LeftArrowIcon.svg\";\nimport chartIcon from \"../../../../assets/icons/Graph.svg\";\nimport TextWrapper from \"../../../../components/TextWrapper\";\nimport PieRepresentation from \"./PieRepresentation\";\nimport LineFormatRepresentation from \"./LineFormatRepresentation\";\nimport {IParticularInvestor} from \"../../index\";\nimport {colorList} from \"../../../Dashboard/components/AllocationOverview\";\n\nconst dummy = [{\n    name: 'USDC',\n    amount: 100,\n    percentage: 50,\n},{\n    name: 'USDT',\n    amount: 1000,\n    percentage: 50,\n},\n]\n\ninterface Iprops {\n    data: { data: IParticularInvestor }\n}\n\nconst Index = (props: Iprops) => {\n    const {data} = props\n    const [chartFormat, setChartFormat] = useState<boolean>(false);\n\n    const dataTotal = data.data.tokenSold + data.data.tokenAllocated + data.data.currentBalance\n\n    const calculatedData = [{\n        name: 'Total Tokens allocated',\n        amount: data.data.tokenAllocated,\n        amountInUsd: data.data.allocationPrice,\n        percentage: data.data.tokenAllocated/dataTotal,\n        color: colorList[4],\n\n    },{\n        name: 'Total Wallet Balance',\n        amount: data.data.currentBalance,\n        amountInUsd: data.data.currentBalance,\n\n        percentage:  data.data.currentBalance/dataTotal,\n        color: colorList[2],\n\n    },{\n        name: 'Total Tokens Sold',\n        amount: data.data.tokenSold,\n        amountInUsd: data.data.tokenSold,\n        percentage:  data.data.tokenSold/dataTotal,\n        color: colorList[0],\n\n    },\n    ]\n\n    return (\n        <MainCardContainer className=\"custom-mahadao-material1\">\n            <section className=\"marginB20\">\n                <SwitchButton className=\"single-line-center-start\" onClick={() => setChartFormat(!chartFormat)}>\n                    <img src={chartFormat? leftIcon: chartIcon} alt={'icon'} className=\"marginR08\"/>\n                    <TextWrapper\n                        text={chartFormat? 'Back to normal view': 'View Chart to analyze Investor allocation'}\n                        fontSize={12}\n                        fontWeight={600}\n                    />\n                </SwitchButton>\n            </section>\n            <section>\n                {chartFormat? (<PieRepresentation\n                    balances={calculatedData}\n                />): (\n                    <LineFormatRepresentation\n                        data={{data: data.data}}\n                    />\n                )}\n            </section>\n        </MainCardContainer>\n    )\n}\n\nexport default Index;\n\nconst MainCardContainer = styled.div`\n  padding: 24px;\n`\n\nconst SwitchButton = styled.div`\n  padding: 4px 6px;\n  background: ${theme.color.transparent[500]};\n  border-radius: 4px;\n  width: max-content;\n  cursor: pointer;\n`","export default __webpack_public_path__ + \"static/media/Telegram.72a660ab.svg\";","import React from \"react\";\n\nimport TextWrapper from \"../../../../components/TextWrapper\";\nimport theme from \"../../../../theme\";\nimport TelegramIcon from \"../../../../assets/icons/Telegram.svg\"\nimport {IParticularInvestor} from \"../../index\";\nimport {truncateMiddle} from \"../../../../_helpers/formattingNumbers\";\n\ninterface Iprops {\n    data: { data: IParticularInvestor }\n}\n\nconst TopRightCard = (props: Iprops) => {\n    const {data} = props\n\n    return (\n        <div className=\"custom-mahadao-material1\" style={{padding: '24px'}}>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Wallet Address'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-center-start\">\n                    <div className=\"marginR08\">\n                        <a href={`https://etherscan.io/address/${data.data.walletAddress}`} target={'_blank'}>\n                            <TextWrapper\n                                text={`${truncateMiddle(data.data.walletAddress, 15)}`}\n                                fontSize={16}\n                            />\n                        </a>\n                    </div>\n\n                    {/*<img src={ClipboardIcon} alt={'img'} height={20}/>*/}\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Social Profile'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-center-start\">\n                    <a href={`https://t.me/${data.data.telegramUsername}`} target={'_blank'}><img src={TelegramIcon} alt={'img'} height={20}/></a>\n                </div>\n            </div>\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Investor Ranking'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={`${data.data.investorRanking}`}\n                        fontSize={16}\n                    />\n                    <TextWrapper\n                        text={`(${data.data.investorRanking} out of ${data.data.investorOutOf})`}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[100]}\n                    />\n                </div>\n            </div>\n            {/*<div className=\"single-line-center-between marginB20\">*/}\n            {/*    <div className=\"single-line-center-start\">*/}\n            {/*        <TextWrapper*/}\n            {/*            text={'Avg Token Buying Price'}*/}\n            {/*            fontSize={16}*/}\n            {/*            Fcolor={theme.color.transparent[\"100\"]}*/}\n            {/*        />*/}\n            {/*    </div>*/}\n            {/*    <div className=\"single-line-center-start\">*/}\n            {/*        <TextWrapper*/}\n            {/*            text={`${data.data.tokenAllocated}`}*/}\n            {/*            fontSize={16}*/}\n            {/*        />*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n            <div className=\"single-line-center-between marginB20\">\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={'Total Transactions'}\n                        fontSize={16}\n                        Fcolor={theme.color.transparent[\"100\"]}\n                    />\n                </div>\n                <div className=\"single-line-center-start\">\n                    <TextWrapper\n                        text={`${data.data.transfers}`}\n                        fontSize={16}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TopRightCard;","import React, {useState} from 'react'\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from \"clsx\";\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport '../../../customCss/Custom-Mahadao-Data-Table.css'\nimport {prettyNumber, truncateMiddle} from \"../../../_helpers/formattingNumbers\";\nimport theme from \"../../../theme\";\nimport {format} from \"timeago.js\";\nimport {ITransaction} from \"./TableContainer\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport {ExportCSV} from \"../../../components/ExportCSV\";\nimport ImportCSV from \"../../../components/ImportCSV\";\n\n\nexport function SortedDescendingIcon() {\n    return <ArrowDropUpIcon className=\"icon\" style={{color: 'white'}}/>;\n}\n  \nexport function SortedAscendingIcon() {\n    return <ArrowDropDownIcon className=\"icon\" style={{color: 'white'}}/>;\n}\n\nconst useStyles = makeStyles({\n    root: {\n        '& .super-app-theme--header': {\n            cursor: 'pointer',\n        },\n        '& .super-app.negative': {\n            color: theme.color.red[300],\n        },\n        '& .super-app.positive': {\n            color: theme.color.green[300],\n        },\n        '& .super-app.loss': {\n            color: theme.color.red[300],\n        },\n        '& .super-app.profit': {\n            color: theme.color.green[300],\n        },\n    },\n    gridStyle: {\n        color: 'white'\n    }\n});\n\ninterface Iprops {\n    data: ITransaction[]\n}\n\nconst DataTable = (props: Iprops) => {\n\n    const {data = []} = props;\n    const classes = useStyles();\n\n    const columns = [\n        {\n            field: 'transactionHash', headerName: 'TRANSACTION HASH', flex: 0.2, sortable: true,\n            renderCell: ((params: any) => {\n                return `${truncateMiddle(params.value, 15, '...')}`\n            }),\n            cellClassName: 'fontWeight300'\n        },\n        {\n            field: 'timestamp', headerName: 'Time', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return format(params.value)\n            }),\n            cellClassName: 'fontWeight300'\n        },\n        { field: 'action', headerName: 'ACTION', flex: 0.15, sortable: true,\n            cellClassName: (params: any) => clsx('fontWeight300','super-app', {\n                negative: params.value === 'sell',\n                positive: params.value === 'buy',\n            }),\n            renderCell: ((params: any) => {\n                return `${params.value.toUpperCase()}`\n            }),\n        },\n        {\n            field: 'balance', headerName: 'BALANCE', flex: 0.1, sortable:true,\n            renderCell: ((params: any) => {\n                return prettyNumber(Math.abs(params.value))\n            })\n        },\n\n        {\n            field: 'price', headerName: 'PRICE', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return `$${prettyNumber(params.value)}`\n            })\n            // cellClassName: (params: any) => clsx('super-app', {\n            //     negative: parseFloat(params.value) < 0,\n            //     positive: parseFloat(params.value) > 0,\n            // }),\n\n        },\n        {\n            field: 'value', headerName: 'VALUE', flex: 0.15, sortable: true,\n            renderCell: ((params: any) => {\n                return `$${prettyNumber(params.value)}`\n            })\n            // cellClassName: (params: any) => clsx('super-app', {\n            //     loss: parseFloat(params.value) < 0,\n            //     profit: parseFloat(params.value) > 0,\n            // }),\n            // valueFormatter: (params : any) => {\n            //     return `$ ${parseFloat(params.value)}`\n            // }\n        },\n        {\n            field: 'mahaAmount', headerName: 'MAHA', flex: 0.12, sortable: true,\n            renderCell: ((params: any) => {\n                return `${prettyNumber(params.value)}`\n            }),\n            // cellClassName: (params: any) => clsx('super-app', {\n            //     negative: params.row.action === 'sell' || params.row.action === 'swap',\n            //     positive: params.row.action === 'buy',\n            // }),\n        },\n        { field: 'changeInBalance', headerName: 'CHANGE', flex: 0.12, sortable: true,\n            cellClassName: (params: any) => clsx('super-app', {\n                negative: params.row.action === 'sell' || params.row.action === 'swap',\n                positive: params.row.action === 'buy',\n            }),\n            renderCell: ((params: any) => {\n                return `${prettyNumber(Math.abs(params.value))} %`\n            })\n        },\n    ];\n\n    const [rows, setRows] = useState<number>(10);\n\n    return (\n        <div>\n            <div className={classes.root} style={{position: 'relative'}}>\n                <div className=\"viewAll\" onClick={() => setRows(data.length)}>\n                    <TextWrapper text={'View All'}/>\n                </div>\n                <DataGrid className={classes.gridStyle}\n                    getRowId={(rows) => {\n                        return rows.id\n                    }}\n                    rows={data}\n                    columns={columns}\n                    pageSize={rows}\n                    disableMultipleSelection={true}\n                    onRowClick={(newSelection) => {\n                        window.open(`https://etherscan.io/tx/${newSelection.row.transactionHash}`, \"_blank\");\n                    }}\n                    // onCellClick={async (params) => {\n                    //     if (params.field === 'highlightURL') {\n                    //         setUrl(params?.value)\n                    //     }\n\n                    // }}\n                    autoHeight={true}\n                    disableColumnMenu={true}\n                    components={{\n                        ColumnSortedDescendingIcon: SortedDescendingIcon,\n                        ColumnSortedAscendingIcon: SortedAscendingIcon,\n                    }}\n                  disableColumnSelector={true}\n                  disableSelectionOnClick={true}\n                />\n            </div>\n            <div className=\"marginT16 single-line-center-end\">\n                <ExportCSV csvData={data} fileName={'test'}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default DataTable\n","import React, {useEffect, useRef} from \"react\";\nimport Neovis from \"neovis.js\";\n\ninterface Iprops {\n    walletAddress: string;\n}\n\nconst NEO4J_URI = \"neo4j://172.105.58.101:7687\";\nconst NEO4J_USER = \"neo4j\";\nconst NEO4J_PASSWORD = \"root\";\n\nconst Neo4jChart = (props: Iprops) => {\n    const {walletAddress} = props;\n\n    const visRef = useRef();\n\n    useEffect(() => {\n        const config = {\n            container_id: 'id_chart',\n            server_url: NEO4J_URI,\n            server_user: NEO4J_USER,\n            server_password: NEO4J_PASSWORD,\n            labels: {\n                Troll: {\n                    caption: \"user_key\",\n                    size: \"pagerank\",\n                    community: \"community\",\n                },\n            },\n            relationships: {\n                RETWEETS: {\n                    caption: false,\n                    thickness: \"count\",\n                },\n            },\n            arrows: true,\n            initial_cypher:\n                `MATCH (a:Person)-[r]-(b) RETURN a,r,b`,\n        };\n        const vis = new Neovis(config);\n        vis.render();\n    }, [NEO4J_URI, NEO4J_USER, NEO4J_PASSWORD, walletAddress]);\n\n    return (\n        <div\n            id={'id_chart'}\n            style={{\n                width: `100%`,\n                height: `600px`,\n                backgroundColor: \"transparent\",\n                marginBottom: '200px'\n            }}\n            className={'custom-mahadao-material2'}\n        />\n    );\n};\n\nexport default Neo4jChart;","import React, {useEffect, useState} from \"react\";\nimport { DateRangePicker } from 'react-date-range';\n\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport '../../customCss/CustomDateRangePicker.css'\nimport Button from \"../Button\";\nimport styled from \"styled-components\";\n\ninterface Iprops {\n    selectedDates: {\n        startDate: any,\n        endDate: any\n    };\n    onApplyPressCallback: (data: {\n        startDate: any,\n        endDate: any\n    }) => void,\n    onClearPressCallback: (data: {\n        startDate: any,\n        endDate: any\n    }) => void,\n\n}\n\nconst CustomDateRangePicker = (props: Iprops) => {\n    const {selectedDates, onApplyPressCallback, onClearPressCallback} = props;\n\n    const [value, setValue] = useState<any>([{\n        startDate: null,\n        endDate: new Date(),\n        key: 'selection'\n    }]);\n    const [showDateModal, setShowDateModal] = useState<boolean>(false);\n\n    useEffect(() => {\n        setValue([{\n            startDate: selectedDates.startDate,\n            endDate: selectedDates.endDate,\n            key: 'selection'\n        }])\n    }, [selectedDates.startDate, selectedDates.endDate])\n\n    const onApplyPress = () => {\n        onApplyPressCallback({\n            startDate: value[0].startDate,\n            endDate: value[0].endDate,\n        })\n        setShowDateModal(false);\n    }\n\n    const onClearPress = () => {\n        onClearPressCallback({\n            startDate: null,\n            endDate: new Date(),\n        })\n        setShowDateModal(false);\n    }\n\n    return (\n        <div className=\"\">\n            <Button onClick={() => setShowDateModal(!showDateModal)} variant=\"outlined\">\n                { value[0].startDate !== null\n                    ? `${new Date(value[0].startDate).toDateString()} - ${new Date(value[0].endDate).toDateString()}`\n                    : `Pick Date`\n                }\n            </Button>\n            {showDateModal &&\n                (<div style={{position: 'relative'}}>\n                        <ButtonContainer>\n                            <div className=\"marginB08\">\n                                <Button\n                                    onClick={() => onApplyPress()}\n                                    // disabled={value[0].startDate !== null && value[0].endDate !== null }\n                                >\n                                    Apply\n                                </Button>\n                            </div>\n                            <div className=\"marginB08\">\n                                <Button\n                                    onClick={() => onClearPress()}\n                                    variant={'transparent'}\n                                >\n                                    Clear\n                                </Button>\n                            </div>\n                            <Button onClick={() => setShowDateModal(false)} variant={'outlined'}>\n                                Cancel\n                            </Button>\n                        </ButtonContainer>\n                    <DateRangePicker\n                        onChange={(data: any) => setValue([data.selection])}\n                        showSelectionPreview={true}\n                        moveRangeOnFirstSelection={false}\n                        months={1}\n                        ranges={value}\n                        direction=\"vertical\"\n                        scroll={{enabled: true}}\n                        maxDate={new Date()}\n                        color={'#FF7F57'}\n                    />\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default CustomDateRangePicker;\n\nconst ButtonContainer = styled.div`\n  height: 50px;\n  min-width: 150px;\n  max-width: 150px;\n  position: absolute;\n  z-index: 101;\n  right: 0;\n  top: 240px;\n  padding: 10px 20px;\n`","import React, {useEffect, useMemo, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nimport SearchBar from \"../../../components/SearchBar\";\nimport Button from \"../../../components/Button\";\nimport chartIcon from \"../../../assets/icons/Graph.svg\";\nimport ProfileDataTable from \"./ProfileDataTable\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport {getInvestorTransactions} from \"../../../_helpers/serverApi\";\nimport {prettyNumber} from \"../../../_helpers/formattingNumbers\";\nimport {format} from \"timeago.js\";\nimport Neo4jChart from \"./Neo4jChart\";\nimport CustomDateRangePicker from \"../../../components/CustomDateRangePicker\";\n\ninterface Iprops {\n    walletAddress: string;\n}\n\nexport interface ITransaction {\n    action: \"buy\" | \"sell\" | \"swap\",\n    balance: number,\n    changeInBalance: number,\n    mahaAmount: number,\n    price: number\n    timestamp: number,\n    transactionHash: string,\n    value: number,\n    walletAddress: string,\n}\n\nconst TableContainer = (props: Iprops) => {\n    const {walletAddress} = props\n\n    const [showVisualData, setShowVisualData] = useState<boolean>(false)\n    const [searchText, setSearchText] = useState<string>('');\n    const [filteringDate, setFilteringDate] = useState<{\n        startDate: any,\n        endDate: any\n    }>({\n        startDate: null,\n        endDate: new Date(),\n    })\n\n    const [data, setData] = useState<ITransaction[]>([]);\n\n    useEffect(() => {\n        getInvestorTransactions({walletAddress: walletAddress})\n            .then((data) => {\n                console.log('getInvestorTransactions', data.transactions);\n                setData(data.transactions);\n            })\n    }, [walletAddress])\n\n    const CleanedData = data.map((d: any) => {\n        return {\n            ...d,\n            'id': d.transactionHash\n        }\n    })\n\n    const filteredDataTemp = useMemo(() => {\n        console.log('filteredDataTemp', searchText, filteringDate.startDate)\n        if (searchText === '' && filteringDate.startDate === null) return CleanedData\n        else {\n            console.log('filteredDataTemp', 3)\n            return CleanedData.filter((d: any) => {\n                return (\n                    (new Date(d.timestamp) > new Date(filteringDate.startDate) &&\n                        new Date(d.timestamp) < new Date(filteringDate.endDate)) &&\n                    (d.transactionHash.toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    format(d.timestamp).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    d.action.toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.balance).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.price).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.value).toString().toLowerCase().includes(searchText.toLowerCase()) ||\n                    prettyNumber(d.changeInBalance).toString().toLowerCase().includes(searchText.toLowerCase()))\n                )})\n        }\n    }, [searchText, data, filteringDate.endDate, filteringDate.startDate])\n\n    return (\n        <MainTableContainer>\n            <section className=\"marginB16\">\n                <Grid container spacing={2}>\n                    <Grid item lg={5} xl={5} md={5} sm={12} xs={12}>\n                        <div style={{marginTop: '8.5px'}}>\n                            <TextWrapper\n                                text={'Transactions'}\n                                fontWeight={600}\n                                fontSize={18}\n                            />\n                        </div>\n                    </Grid>\n                    <Grid item lg={4} xl={4} md={4} sm={12} xs={12}>\n                        <SearchBar\n                            ILabelValue={''}\n                            value={searchText}\n                            DefaultValue={'Search by Investor name, Address, Balance, etc.'}\n                            setText={(val) => setSearchText(val)}\n                        />\n                    </Grid>\n                    <Grid item lg={3} xl={3} md={3} sm={12} xs={12}>\n                        <CustomDateRangePicker\n                            selectedDates={filteringDate}\n                            onApplyPressCallback={(data) => {\n                                console.log(data);\n                                setFilteringDate(data);\n                            }}\n                            onClearPressCallback={(data) => {\n                                console.log(data);\n                                setFilteringDate(data);\n                            }}\n                        />\n                    </Grid>\n                    {/*<Grid item lg={2} xl={2} md={2} sm={12} xs={12}>\n                        <Button onClick={() => setShowVisualData(!showVisualData)} variant={'outlined'} size={\"sm\"}>\n                            <div className=\"single-line\">\n                                <img src={chartIcon} alt={'chart'}/>\n                                <div style={{marginLeft: '5px'}}>{!showVisualData? 'Visual Map': 'Table Format'}</div>\n                            </div>\n                        </Button>\n                    </Grid>*/}\n                </Grid>\n            </section>\n\n            {showVisualData\n                ? <Neo4jChart\n                    walletAddress={walletAddress}\n                />\n                : <ProfileDataTable\n                    data={filteredDataTemp}\n                />\n            }\n        </MainTableContainer>\n    )\n}\n\nexport default TableContainer;\n\nconst MainTableContainer = styled.div`\n  margin-bottom: 40px;\n`","import CustomModal from \"../../../components/CustomModal\";\nimport CustomInputContainer from \"../../../components/CustomInputConatiner\";\nimport {useEffect, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Button from \"../../../components/Button\";\nimport {editExcitingInvestor} from \"../../../_helpers/serverApi\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\nimport {correctString, ValidateNumber} from \"../../../components/CustomInputConatiner/inputValidation\";\nimport {isAddress, isEmailId} from \"../../../_helpers/validators\";\nimport {IParticularInvestor} from \"../index\";\n\n\ninterface IPorps {\n    openModal: boolean;\n    onClose: () => void;\n    onSuccess: () => void;\n    data: IParticularInvestor;\n}\n\ninterface IInputField {\n    value: string;\n    status: 'default' | 'error' | 'warning';\n    msg: string;\n}\n\nconst initInputField: IInputField = {\n    value: '',\n    status: 'default',\n    msg: '',\n}\n\nconst EditInvestorModal = (props: IPorps) => {\n    const {openModal, onSuccess, onClose, data} = props\n\n    const [name, setName] = useState<IInputField>(initInputField);\n    const [walletAddress, setwalletAddress] = useState<IInputField>(initInputField);\n    const [emailId, setemailId] = useState<IInputField>(initInputField);\n    const [teleId, setteleId] = useState<IInputField>(initInputField);\n    const [investmentAtPrivateSale, setinvestmentAtPrivateSale] = useState<IInputField>(initInputField);\n    const [tokenAllocated, settokenAllocated] = useState<IInputField>(initInputField);\n    const [allocatedAtPrice, setallocatedAtPrice] = useState<IInputField>(initInputField);\n\n    const [errorMsg, setErrorMsg] = useState<string>('');\n    const [editingInvestor, setEditingInvestor] = useState<boolean>(false)\n\n    useEffect(() => {\n        if(openModal) {\n            setName({\n                value: data.investor,\n                status: 'default',\n                msg: '',\n            })\n            setemailId({\n                value: data.email,\n                status: 'default',\n                msg: '',\n            })\n            setwalletAddress({\n                value: data.walletAddress,\n                status: 'default',\n                msg: '',\n            })\n            setteleId({\n                value: data.telegramUsername,\n                status: 'default',\n                msg: '',\n            })\n            settokenAllocated({\n                value: data.tokenAllocated.toString(),\n                status: 'default',\n                msg: '',\n            })\n            setallocatedAtPrice({\n                value: data.allocatedAtPrice.toString(),\n                status: 'default',\n                msg: '',\n            })\n            setinvestmentAtPrivateSale({\n                value: data.investmentAtPrivateSale.toString(),\n                status: 'default',\n                msg: '',\n            })\n        }\n    }, [data, openModal])\n\n    const resetFields = () => {\n        setName(initInputField)\n        setemailId(initInputField)\n        setwalletAddress(initInputField)\n        setteleId(initInputField)\n        settokenAllocated(initInputField)\n        setallocatedAtPrice(initInputField)\n        setinvestmentAtPrivateSale(initInputField)\n        setErrorMsg('')\n    }\n\n    const onNumericalValueChange = (value: string) => {\n        if (value === '') {\n        } else {\n            if (!ValidateNumber(value)) return null\n        }\n\n        if (Number(value) && Number(value) <= 0) return null;\n        return (value.length > 1 ? correctString(value) : value);\n    }\n\n    const blankFields = () => {\n        let status = true;\n        if (name.value === '') {\n            setName({\n                value: name.value,\n                status: 'error',\n                msg: 'name is required',\n            })\n            status = false;\n        }\n        if (walletAddress.value === '') {\n            setwalletAddress({\n                value: walletAddress.value,\n                status: 'error',\n                msg: 'walletAddress is required',\n            })\n            status = false;\n        }\n        if (emailId.value === '') {\n            setemailId({\n                value: emailId.value,\n                status: 'error',\n                msg: 'emailid is required',\n            })\n            status = false;\n        }\n        if (teleId.value === '') {\n            setteleId({\n                value: teleId.value,\n                status: 'error',\n                msg: 'telegram id is required',\n            })\n            status = false;\n        }\n        if (investmentAtPrivateSale.value === '') {\n            setinvestmentAtPrivateSale({\n                value: investmentAtPrivateSale.value,\n                status: 'error',\n                msg: 'Total Investment at private sale is required',\n            })\n            status = false;\n        }\n        if (tokenAllocated.value === '') {\n            settokenAllocated({\n                value: tokenAllocated.value,\n                status: 'error',\n                msg: 'Number of token allocated cannot is required',\n            })\n            status = false;\n        }\n        if (allocatedAtPrice.value === '') {\n            setallocatedAtPrice({\n                value: allocatedAtPrice.value,\n                status: 'error',\n                msg: 'Price at Token Allocated cannot is required',\n            })\n            status = false;\n        }\n        console.log('blankFields', status)\n        return status\n\n    }\n\n    const validateFields = () => {\n        let status = true;\n        if (!isAddress(walletAddress.value)) {\n            setwalletAddress({\n                value: walletAddress.value,\n                status: 'error',\n                msg: 'Invalid Wallet Address',\n            })\n            status = false;\n        }\n        if (!isEmailId(emailId.value)) {\n            setemailId({\n                value: emailId.value,\n                status: 'error',\n                msg: 'Invalid Email Id',\n            })\n            status = false;\n        }\n        if (investmentAtPrivateSale.value === '0') {\n            setinvestmentAtPrivateSale({\n                value: investmentAtPrivateSale.value,\n                status: 'error',\n                msg: 'Total Investment at private sale cannot be 0',\n            })\n            status = false;\n        }\n        if (tokenAllocated.value === '0') {\n            settokenAllocated({\n                value: tokenAllocated.value,\n                status: 'error',\n                msg: 'Number of token allocated cannot be 0',\n            })\n            status = false;\n        }\n        if (allocatedAtPrice.value === '0') {\n            setallocatedAtPrice({\n                value: allocatedAtPrice.value,\n                status: 'error',\n                msg: 'Price at Token Allocated cannot be 0',\n            })\n            status = false;\n        }\n        console.log('validateFields', status)\n        return status\n    }\n\n    const editInvestor = () => {\n        if (blankFields()) {\n            console.log('addInvestor blankFields', blankFields())\n            if (validateFields() && errorMsg === '') {\n                const body = {\n                    \"name\": name.value,\n                    \"email\": emailId.value,\n                    \"walletAddress\": walletAddress.value,\n                    \"tokenAllocated\": Number(tokenAllocated.value) || 0,\n                    \"allocatedAtPrice\": Number(allocatedAtPrice.value) || 0,\n                    \"telegramUsername\": teleId.value,\n                    \"investmentAtPrivateSale\": Number(investmentAtPrivateSale.value) || 0,\n\n                    \"currentBalance\": 0,\n                    \"tenMinutePriorBalance\": 0,\n                    \"countryCode\": 91,\n                    \"phoneNumber\": 7756885345,\n                    \"profitLoss\": 0,\n                    \"proftLossIndicator\": false,\n                    \"change\": 0,\n                }\n                setEditingInvestor(true)\n                console.log('editInvestor', validateFields(), errorMsg, body)\n                editExcitingInvestor(body)\n                    .then((data) => {\n                        console.log('editExcitingInvestor', data)\n                        if (data?.error) {\n                            alert(data?.error)\n                        } else {\n                            onSuccess();\n                        }\n                    })\n                    .catch((error) => {\n                        console.log('editExcitingInvestor error', error)\n                        alert('Internal Server Error, Try Again later')\n                    })\n                    .finally(() => {\n                        resetFields()\n                        setEditingInvestor(false)\n                    })\n            }\n        }\n    }\n\n    const onAllocatedAtPriceChange = (data: string) => {\n        if (Number(investmentAtPrivateSale.value) && Number(data)) {\n            const temp = Number(investmentAtPrivateSale.value) / Number(data)\n            settokenAllocated({\n                value: temp.toString(),\n                status: 'default',\n                msg: '',\n            })\n        } else {\n            settokenAllocated({\n                value: '0',\n                status: 'default',\n                msg: '',\n            })\n        }\n        setallocatedAtPrice({\n            value: data,\n            status: 'default',\n            msg: '',\n        });\n    }\n\n    const onTokenAllocatedChange = (data: string) => {\n        if (Number(investmentAtPrivateSale.value) && Number(data)) {\n            const temp = Number(investmentAtPrivateSale.value) / Number(data)\n            setallocatedAtPrice({\n                value: temp.toString(),\n                status: 'default',\n                msg: '',\n            });\n        } else {\n            setallocatedAtPrice({\n                value: '0',\n                status: 'default',\n                msg: '',\n            });\n        }\n        settokenAllocated({\n            value: data,\n            status: 'default',\n            msg: '',\n        })\n    }\n\n    const onTotalInvestmentChange = (data: string) => {\n        setallocatedAtPrice({\n            value: '',\n            status: 'default',\n            msg: '',\n        });\n        settokenAllocated({\n            value: '',\n            status: 'default',\n            msg: '',\n        })\n        setinvestmentAtPrivateSale({\n            value: data,\n            status: 'default',\n            msg: '',\n        })\n    }\n\n    return (\n        <CustomModal\n            closeButton\n            handleClose={() => {\n                resetFields()\n                onClose()\n            }}\n            open={openModal}\n            modalTitleStyle={{}}\n            modalContainerStyle={{}}\n            modalBodyStyle={{}}\n            title={`Add Investor`}\n        >\n            <section>\n                <CustomInputContainer\n                    ILabelValue={'Investor Name'}\n                    DefaultValue={'Eg: Elon Musk'}\n                    setText={(data) => setName({\n                        value: data,\n                        status: 'default',\n                        msg: '',\n                    })}\n                    value={name.value}\n                    Istate={name.status}\n                    Imsg={name.msg}\n\n                />\n                <CustomInputContainer\n                    ILabelValue={'Wallet Address'}\n                    DefaultValue={'Eg: 0xcab3e009Ff3d670.....75e81C8E4E2452606E8'}\n                    setText={(data) => setwalletAddress({\n                        value: data,\n                        status: 'default',\n                        msg: '',\n                    })}\n                    value={walletAddress.value}\n                    Istate={walletAddress.status}\n                    Imsg={walletAddress.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Email Id'}\n                    DefaultValue={'Eg: elonmusk@gmail.com'}\n                    setText={(data) => setemailId({\n                        value: data,\n                        status: 'default',\n                        msg: '',\n                    })}\n                    value={emailId.value}\n                    Istate={emailId.status}\n                    Imsg={emailId.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Telegram Id'}\n                    DefaultValue={'Eg:https://telegram.com/@<InvestorId>'}\n                    setText={(data) => setteleId({\n                        value: data,\n                        status: 'default',\n                        msg: '',\n                    })}\n                    value={teleId.value}\n                    Istate={teleId.status}\n                    Imsg={teleId.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Total Investment at private sale'}\n                    DefaultValue={'$ Some Dollars'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) onTotalInvestmentChange(data)\n                    }}\n                    value={investmentAtPrivateSale.value.toString()}\n                    Istate={investmentAtPrivateSale.status}\n                    Imsg={investmentAtPrivateSale.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Number of token allocated'}\n                    DefaultValue={'Some MAHA'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) onTokenAllocatedChange(data)\n                    }}\n                    value={tokenAllocated.value.toString()}\n                    Istate={tokenAllocated.status}\n                    Imsg={tokenAllocated.msg}\n                />\n                <CustomInputContainer\n                    ILabelValue={'Price at Token Allocated'}\n                    DefaultValue={'$ Some Dollars'}\n                    setText={(data) => {\n                        if (onNumericalValueChange(data) !== null) onAllocatedAtPriceChange(data)\n                    }}\n                    value={allocatedAtPrice.value.toString()}\n                    Istate={allocatedAtPrice.status}\n                    Imsg={allocatedAtPrice.msg}\n                />\n            </section>\n            <section>\n                <TextWrapper\n                    text={errorMsg}\n                    Fcolor={theme.color.red[300]}\n                />\n            </section>\n            <section>\n                <Grid container spacing={2} style={{paddingTop: '12px'}}>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button\n                            variant={'transparent'}\n                            onClick={() => {\n                                resetFields()\n                                onClose()\n                            }}\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button\n                            onClick={() => editInvestor()}\n                            disabled={editingInvestor}\n                        >{editingInvestor? 'Editing Investor': 'Edit Investor'}</Button>\n                    </Grid>\n                </Grid>\n            </section>\n        </CustomModal>\n    )\n}\n\nexport default EditInvestorModal;","import React, {useEffect, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport { useParams } from 'react-router-dom';\n\nimport avatar from '../../assets/common/avatar.svg'\nimport TextWrapper from \"../../components/TextWrapper\";\nimport styled from \"styled-components\";\nimport Button from \"../../components/Button\";\nimport messageIcon from \"../../assets/icons/Message.svg\";\nimport editIcon from \"../../assets/icons/Edit.svg\";\nimport deleteIcon from \"../../assets/icons/Delete.svg\";\nimport LeftTopCard from \"./Components/TopLeftCard\";\nimport TopRightCard from \"./Components/TopRightCard\";\nimport TableContainer from \"./Components/TableContainer\";\nimport {deleteParticularInvestor, getParticularInvestorData} from \"../../_helpers/serverApi\";\nimport {history} from \"../../_helpers/history\";\nimport CustomModal from \"../../components/CustomModal\";\nimport EditInvestorModal from \"./modal/EditInvestorModal\";\n\nexport interface IParticularInvestor {\n    allocatedAtPrice: number,\n    allocatedPercentage: number,\n    change: number,\n    changePercentage: number,\n    currentBalance: number,\n    email: string,\n    id: string,\n    investmentAtPrivateSale: number,\n    investor: string,\n    investorRanking: number,\n    profitLoss: number,\n    profitLossIndicator: boolean\n    telegramUsername: string,\n    tokenAllocated: number,\n    tokenSold: number,\n    transfers: number,\n    walletAddress: string,\n    currentBalancePrice: number,\n    investorOutOf: number,\n    profitLossPercentage: number,\n    allocationPrice: number,\n}\n\nconst InitParticularInvestor = {\n    allocatedAtPrice: 0,\n    allocatedPercentage: 0,\n    change: 0,\n    changePercentage: 0,\n    currentBalance: 0,\n    email: '',\n    id: '',\n    investmentAtPrivateSale: 0,\n    investor: '',\n    investorRanking: 0,\n    profitLoss: 0,\n    profitLossIndicator: true,\n    telegramUsername: '',\n    tokenAllocated: 0,\n    tokenSold: 0,\n    transfers: 0,\n    walletAddress: '',\n    currentBalancePrice: 0,\n    investorOutOf: 0,\n    profitLossPercentage: 0,\n    allocationPrice: 0,\n}\n\nconst InvestorProfile = () => {\n    // @ts-ignore\n    const { walletAddress } = useParams();\n    const [data, setData] = useState<IParticularInvestor>(InitParticularInvestor)\n    const [confirmationModal, setConfirmationModal] = useState<boolean>(false);\n    const [editInvestor, setEditInvestor] = useState<boolean>(false);\n\n    useEffect(() => {\n        getParticularInvestorData({walletAddress: walletAddress})\n            .then((data) => {\n                console.log('getParticularInvestorData', data)\n                setData(data)\n            })\n            .catch((error) => {\n                console.log('getParticularInvestorData error', error)\n                alert('internal server error')\n            })\n    }, [])\n\n    const removeInvestor = () => {\n        deleteParticularInvestor({walletAddress: walletAddress})\n            .then((data) => {\n                console.log('deleteParticularInvestor', data)\n                setData(data)\n                history.push('/dashboard')\n                history.go(0)\n            })\n            .catch((error) => {\n                console.log('deleteParticularInvestor error', error)\n                alert('internal server error')\n            })\n    }\n\n    return (\n        <Page>\n            <CustomModal\n                title={'Are you sure you want to delete this investor?'}\n                handleClose={() => setConfirmationModal(false)}\n                open={confirmationModal}\n            >\n                <Grid container spacing={2}>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button onClick={() => setConfirmationModal(false)} variant={'transparent'}>Cancel</Button>\n                    </Grid>\n                    <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                        <Button onClick={() => removeInvestor()}>Yes</Button>\n                    </Grid>\n                </Grid>\n\n            </CustomModal>\n            <EditInvestorModal\n                openModal={editInvestor}\n                onClose={() => setEditInvestor(false)}\n                onSuccess={() => window.location.reload()}\n                data={data}\n            />\n            <div className=\"custom-container\">\n                <section style={{marginTop: '120px'}}>\n                    <div className=\"single-line-center-start\">\n                        <img src={avatar} alt={'img'} height={88} className=\"rounded-circle\"/>\n                        <div className=\"marginL32\">\n                            <TextWrapper\n                                text={data.investor}\n                                fontWeight={'bold'}\n                                fontSize={24}\n                            />\n                            <ButtonConatiner>\n                                <a href={`mailto:${data.email}`} >\n                                    <Button onClick={() => {}} variant={\"outlined\"}>\n                                        <img src={messageIcon} alt={'messageIcon'} height={22}/>\n                                        <div style={{marginLeft: '5px'}}>Message</div>\n                                    </Button>\n                                </a>\n                                <div className=\"marginL12\">\n                                    <Button onClick={() => setEditInvestor(true)} variant={\"outlined\"}>\n                                        <img src={editIcon} alt={'remove'} height={22}/>\n                                        <div style={{marginLeft: '5px'}}>Edit Profile</div>\n                                    </Button>\n                                </div>\n                                <div className=\"marginL12\">\n                                    <Button onClick={() => setConfirmationModal(true)} variant={\"outlined\"}>\n                                        <img src={deleteIcon} alt={'deleteIcon'} height={22}/>\n                                    </Button>\n                                </div>\n                            </ButtonConatiner>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"marginT40\">\n                    <Grid container spacing={2}>\n                        <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                            <LeftTopCard\n                                data={{data: data}}\n                            />\n                        </Grid>\n                        <Grid item lg={6} xl={6} md={6} sm={12} xs={12}>\n                            <TopRightCard\n                                data={{data: data}}\n                            />\n                        </Grid>\n                    </Grid>\n                </section>\n\n                <section className=\"marginT40 page-height\">\n                    <TableContainer\n                        walletAddress={walletAddress}\n                    />\n                </section>\n            </div>\n        </Page>\n    )\n}\n\nexport default InvestorProfile\n\nconst Page = styled.div`\n  margin-top: 80px;\n  min-height: calc(100vh - 80px);\n`\n\nconst ButtonConatiner = styled.div`\n  max-width: 122px;\n  margin-top: 8px;\n  display: flex;\n`\n","import styled from \"styled-components\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport theme from \"../../../theme\";\n\nconst NotificationCard = () => {\n    return (\n        <NCard className=\"marginB08\">\n            <div className=\"single-line-center-between\">\n                <TextWrapper\n                    text={'Ajeet Khurana'}\n                    fontWeight={600}\n                />\n                <TextWrapper\n                    text={'-$27,432'}\n                    fontWeight={600}\n                    fontSize={18}\n                />\n            </div>\n            <div className=\"single-line-center-between\">\n                <TextWrapper\n                    text={'Sold 5000 MAHA to 0x564...534'}\n                />\n                <TextWrapper\n                    text={'-15'}\n                    fontWeight={600}\n                    fontSize={12}\n                    Fcolor={theme.color.red[300]}\n                />\n            </div>\n            <div>\n                <TextWrapper\n                    text={'July 5'}\n                    fontSize={12}\n                    Fcolor={theme.color.transparent[100]}\n                />\n            </div>\n        </NCard>\n    )\n}\n\nexport default NotificationCard;\n\nconst NCard = styled.div`\n  background: linear-gradient(180deg, #2D2D2D 0%, #1C1C1C 100%);\n  padding: 24px;\n  border: 1px solid ${theme.color.transparent[400]};\n  box-sizing: border-box;\n  border-radius: 6px;\n`","import styled from \"styled-components\";\nimport TextWrapper from \"../../components/TextWrapper\";\nimport {Page} from \"../Dashboard\";\nimport {Grid} from \"@material-ui/core\";\nimport NotificationCard from \"./components/NotificationCard\";\n\nconst Notification = () => {\n    return (\n        <Page>\n            <HeaderPage>\n                <TextWrapper\n                    text={'NOTIFICATION'}\n                    fontFamily={'Syne'}\n                    fontSize={24}\n                    fontWeight={'bold'}\n                />\n            </HeaderPage>\n            <section className=\"custom-container\">\n                <Grid container>\n                    <Grid item lg={3} md={3} sm={12} xs={12}>\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                        <NotificationCard/>\n                        <NotificationCard/>\n                        <NotificationCard/>\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={12} xs={12}>\n                    </Grid>\n                </Grid>\n            </section>\n        </Page>\n    )\n}\n\nexport default Notification;\n\nconst HeaderPage = styled.section`\n  padding: 40px 0;\n  text-align: center;\n`","export const isUserLoggedIn = localStorage.getItem('userLoggedIn') === 'true'","import { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nimport CustomInputContainer, {\n  ICStatesInterface,\n} from \"../../../components/CustomInputConatiner\";\nimport { Page } from \"../../Dashboard\";\nimport Button from \"../../../components/Button\";\nimport TextWrapper from \"../../../components/TextWrapper\";\nimport { history } from \"../../../_helpers/history\";\nimport {authloginUser} from \"../../../_helpers/serverApi\";\nimport {isUserLoggedIn} from \"../../../_helpers/checkUserLogin\";\n\nconst Login = () => {\n  const [emailId, setEmailID] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [ICStates, setICStates] = useState<ICStatesInterface>({\n    IState: \"default\",\n    IMsg: \"\",\n  });\n\n  useEffect(() => {\n    if (isUserLoggedIn){\n      localStorage.setItem(\"userLoggedIn\", \"false\");\n      localStorage.removeItem('token');\n    }\n  }, []);\n\n  const loginUser = () => {\n    authloginUser({'email': emailId, 'password': password})\n        .then((data: any) => {\n          console.log('authloginUser', data)\n            if (data?.success && data?.accessToken) {\n              localStorage.setItem('token', data?.accessToken || '');\n              localStorage.setItem(\"userLoggedIn\", \"true\");\n              history.push(\"/dashboard\");\n              history.go(0);\n              setICStates({\n                IState: \"default\",\n                IMsg: \"\",\n              });\n            } else {\n              setICStates({\n                IState: \"error\",\n                IMsg: \"Invalid emailid or password\",\n              });\n            }\n        })\n        .catch((error) => {\n          console.log('authloginUser error', error)\n        })\n    /*if (emailId === \"admin@mahadao.com\" && password === \"mahadao\") {\n      localStorage.setItem(\"userLoggedIn\", \"true\");\n      history.push(\"/dashboard\");\n      history.go(0);\n      setICStates({\n        IState: \"default\",\n        IMsg: \"\",\n      });\n    } else {\n      setICStates({\n        IState: \"error\",\n        IMsg: \"Invalid emailid or password\",\n      });\n    }*/\n    setPassword(\"\");\n    setEmailID(\"\");\n  };\n\n  return (\n    <Page>\n      <section className=\"paddingT40\">\n        <Grid container justify={\"center\"}>\n          <Grid item lg={4} sm={10} xs={12}>\n            <LoginContainer className=\"custom-mahadao-material1\">\n              <div className=\"text-center marginB40\">\n                <TextWrapper\n                  text={\"Sign In\"}\n                  fontFamily={\"Syne\"}\n                  fontSize={24}\n                  fontWeight={\"bold\"}\n                />\n              </div>\n              <CustomInputContainer\n                ILabelValue={\"Email id\"}\n                value={emailId}\n                DefaultValue={\"eg: john@xyz.com\"}\n                setText={(data) => setEmailID(data)}\n                Istate={ICStates.IState}\n                Imsg={ICStates.IMsg}\n              />\n              <CustomInputContainer\n                ILabelValue={\"Password\"}\n                value={password}\n                DefaultValue={\"*******\"}\n                setText={(data) => setPassword(data)}\n                inputMode={\"password\"}\n              />\n              <ButtonContainer>\n                <Button onClick={() => loginUser()}>Login</Button>\n              </ButtonContainer>\n            </LoginContainer>\n          </Grid>\n        </Grid>\n      </section>\n    </Page>\n  );\n};\n\nexport default Login;\n\nconst LoginContainer = styled.div`\n  padding: 32px;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 32px;\n`;\n","import React, { useEffect } from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport InvestorProfile from \"./pages/InvestorProfile\";\nimport Notification from \"./pages/Notification\";\nimport Login from \"./pages/Auth/login\";\nimport { isUserLoggedIn } from \"./_helpers/checkUserLogin\";\n\nconst Navigation = () => {\n  let initialRoute = \"/auth/login\";\n  if (isUserLoggedIn) {\n    initialRoute = \"/dashboard\";\n  }\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/auth/login\" exact component={Login} />\n        {isUserLoggedIn && (\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n        )}\n        {isUserLoggedIn && (\n          <Route\n            path=\"/investor-profile/:walletAddress\"\n            exact\n            component={InvestorProfile}\n          />\n        )}\n        {isUserLoggedIn && (\n          <Route path=\"/notifications\" exact component={Notification} />\n        )}\n        <Route exact path=\"/\">\n          <Redirect to={initialRoute} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/logo.c35e51c2.svg\";","export default __webpack_public_path__ + \"static/media/Logout.f6b1222a.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport '../../../customCss/Custom-Modals.css'\nimport logoutIcon from '../../../assets/icons/Logout.svg'\nimport TextWrapper from \"../../TextWrapper\";\nimport theme from \"../../../theme\";\nimport {history} from \"../../../_helpers/history\";\n\nconst AccountOptionsModal = () => {\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.setItem(\"userLoggedIn\", \"false\");\n        history.push(\"/auth/login\");\n        history.go(0);\n    }\n\n    return (\n        <div className=\"custom-modal-main\">\n            <ModalStyle className=\"custom-modal custom-mahadao-material1\">\n                <div className=\"custom-modal-container\">\n                    <Options className=\"single-line-center-start\" onClick={() => logout()}>\n                        <img src={logoutIcon} alt={'logout'} height={24}/>\n                        <TextWrapper\n                            text={'Logout'}\n                            fontWeight={600}\n                            Fcolor={theme.color.transparent[100]}\n                            Fmargin={'0 0 0 10px'}\n                        />\n                    </Options>\n                </div>\n            </ModalStyle>\n        </div>\n    )\n}\n\nexport default AccountOptionsModal;\n\nconst ModalStyle = styled.div`\n  min-width: 204px;\n  max-width: 204px;\n  height: max-content;\n`\n\nconst Options = styled.div`\n  width: 100%;\n  height: auto;\n  cursor: pointer;\n`","import styled from \"styled-components\";\n\nimport logo from '../../assets/common/logo.svg'\nimport avatar from '../../assets/common/avatar.svg'\nimport notificationIcon from '../../assets/icons/Notification.svg'\nimport {isUserLoggedIn} from \"../../_helpers/checkUserLogin\";\nimport AccountOptionsModal from \"./modal/AccountOptionsModal\";\nimport {useState} from \"react\";\n\nconst Topbar = () => {\n    const [showOptionModal, setShowOptionModal] = useState<boolean>(false)\n\n    return(\n        <MainTopBarContainer>\n            <div className=\"custom-container\">\n                <InnerTopBar>\n                    <LeftTopbar>\n                        <a href={'/'}>\n                            <img src={logo} alt={'Mahatracker'} height={44} className=\"pointer\"/>\n                        </a>\n                    </LeftTopbar>\n                    <RightTopbar>\n                        {/*<a href={'/notifications'}>\n                            <img src={notificationIcon} alt={'icon'} height={20} style={{marginRight: '28px'}} className=\"pointer\"/>\n                        </a>*/}\n                        {isUserLoggedIn &&\n                            <img src={avatar} alt={'avatar'} height={44} className=\"pointer rounded-circle\" onClick={() => setShowOptionModal(!showOptionModal)}/>\n                        }\n                    </RightTopbar>\n                </InnerTopBar>\n            </div>\n            {showOptionModal && <AccountOptionsModal/>}\n        </MainTopBarContainer>\n    )\n}\n\nexport default Topbar;\n\nconst MainTopBarContainer = styled.div`\n  width: 100vw;\n  background: rgba(0, 0, 0);\n  backdrop-filter: blur(70px);\n  position: fixed;\n  top: 0;\n  z-index: 100;\n`\n\nconst InnerTopBar = styled.div`\n  width: 100%;\n  height: 80px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst LeftTopbar = styled.div`\n  \n`\n\nconst RightTopbar = styled.div`\n\n`","import React from \"react\";\n\nimport Navigation from \"./navigation\";\nimport Topbar from \"./components/TopBar\";\nimport {isProduction} from \"./_helpers/apicaller\";\n\nfunction App() {\n  return (\n    <div>\n      <Topbar />\n      <Navigation />\n    </div>\n  );\n}\n\nif (isProduction) console.log = function () {};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}